{
    "direction": "ltr",
    "footer": {
        "text": "HTMLtoHero es una plataforma dedicada a enseñar desarrollo web a través de tutoriales paso a paso y ejercicios interactivos. Aprende HTML, CSS y JavaScript de una manera fácil y atractiva.",
        "copyright": "Copyright Cenin Rihavi 2025©"
    },
    "header": {
        "html": "HTML",
        "htmlTutorials": "Tutoriales",
        "htmlExercises": "Ejercicios",
        "css": "CSS",
        "cssTutorials": "Tutoriales",
        "cssExercises": "Ejercicios",
        "js": "JavaScript",
        "jsTutorials": "Tutoriales",
        "jsExercises": "Ejercicios",
        "codeEditor": "Editor de Código",
        "search": "Buscar",
        "login": "Iniciar Sesión",
        "profile": "Perfil",
        "logout": "Cerrar Sesión"
    },
    "mainpage": {
        "discovercontainer": {
            "discover": "Descubrir",
            "search": "Buscar"
        },
        "htmlcontainer": {
            "html": "HTML",
            "description": "HTML (Lenguaje de Marcado de Hipertexto) es la base de todos los sitios web. Estructura tu contenido utilizando etiquetas y elementos simples. Ya seas un principiante total o estés refrescando tus habilidades, comienza aquí para construir una base sólida en desarrollo web."
        },
        "csscontainer": {
            "css": "CSS",
            "description": "CSS (Hojas de Estilo en Cascada) da vida a tu sitio web con colores, diseños y estilos. Controla cómo se ve y se siente tu HTML. Aprende a dar estilo a tus páginas y hacerlas responsivas y atractivas."
        },
        "jscontainer": {
            "js": "JAVASCRIPT",
            "description": "JavaScript agrega interactividad y funciones dinámicas a tu sitio web. Desde botones que responden a clics hasta validaciones de formularios en tiempo real y animaciones, JavaScript hace que tus páginas cobren vida. Comienza a aprender para construir aplicaciones web más inteligentes."
        }
    },
    "notFoundPage": {
        "title": "HTMLtoHero - No Encontrado",
        "errorText": "Error 404",
        "smallText": "¡Página No Encontrada!"
    },
    "loginPage": {
        "email": "Correo Electrónico",
        "password": "Contraseña",
        "loginButton": "Iniciar Sesión",
        "createNewAccount": "Crear Nueva Cuenta",
        "emptyEmailError": "Por favor, introduce tu dirección de correo electrónico.",
        "emptyPasswordError": "Por favor, introduce tu contraseña.",
        "invalidEmailError": "Correo electrónico incorrecto.",
        "invalidPasswordError": "Contraseña incorrecta."
    },
    "profile": {
        "profileContainer": {
            "name": "Nombre",
            "birthday": "Fecha de Nacimiento",
            "accountCreationDate": "Fecha de Creación de la Cuenta",
            "level": "Nivel"
        },
        "learningContainer": {
            "continueLearning": "Continuar Aprendiendo...",
            "html": "HTML",
            "css": "CSS",
            "js": "JavaScript"
        },
        "exercisingContainer": {
            "continueExercising": "Continuar con los Ejercicios...",
            "html": "HTML",
            "css": "CSS",
            "js": "JavaScript"
        }
    },
    "codeeditor": {
        "previewButton": "Vista Previa"
    },
    "htmlTutorials": {
        "markAsCompleted": "Marcar como completado",
        "chapter1": {
            "title": "Capítulo 1: Introducción a HTML",
            "page1": {
                "pageTitle": "¿Qué es HTML?",
                "title1": "¿Qué es HTML?",
                "paragraph1": "HTML, o Lenguaje de Marcado de Hipertexto, es la piedra angular del desarrollo web y la columna vertebral de cada sitio web que visitas. Es un lenguaje estandarizado utilizado para crear y estructurar el contenido de las páginas web, asegurando que navegadores como Chrome, Firefox y Safari puedan interpretar y mostrar el contenido correctamente.",
                "title2": "Los Bloques de Construcción de la Web",
                "paragraph2": "HTML no es un lenguaje de programación, es un lenguaje de marcado, lo que significa que se utiliza para anotar texto y proporcionar instrucciones a los navegadores sobre cómo renderizar el contenido. Estas anotaciones vienen en forma de elementos HTML, escritos utilizando etiquetas como <html>, <head> y <body>.",
                "paragraph3": "HTML proporciona la estructura para todo el contenido web. Con elementos para encabezados, párrafos, imágenes, enlaces y más, sirve como punto de partida para cada proyecto web. Al combinar HTML con CSS y JavaScript, los desarrolladores pueden crear sitios web visualmente impresionantes e interactivos.",
                "title3": "¿Qué Puede Hacer HTML?",
                "listTitle1": "HTML te permite construir la estructura de las páginas web al agregar:",
                "list1Item1": "Encabezados y Párrafos: Usa <h2> a <h6> para encabezados y <p> para párrafos para organizar el contenido de texto.",
                "list1Item2": "Imágenes y Multimedia: Inserta imágenes, audio y video para una experiencia de usuario atractiva.",
                "list1Item3": "Enlaces: Usa etiquetas <a> para navegar entre páginas y sitios externos.",
                "list1Item4": "Listas: Organiza el contenido usando listas ordenadas (<ol>) o no ordenadas (<ul>).",
                "list1Item5": "Formularios: Recopila datos de los usuarios con formularios interactivos y campos de entrada.",
                "paragraph4": "HTML también soporta elementos semánticos como <header>, <footer> y <article> para mejorar la accesibilidad y el SEO.",
                "title4": "¿Por Qué Aprender HTML?",
                "listTitle2": "HTML es la base del desarrollo web, y aprenderlo es el primer paso para construir tus propios sitios web. Aquí te explicamos por qué es esencial:",
                "list2Item1": "Facilidad de Aprendizaje: HTML es simple y amigable para principiantes.",
                "list2Item2": "Versatilidad: Es el punto de partida para todos los proyectos web.",
                "list2Item3": "Oportunidades Profesionales: Comprender HTML abre puertas a varios roles en desarrollo y diseño web.",
                "paragraph5": "Aprender HTML es como aprender el alfabeto del desarrollo web. Te proporciona las herramientas para dar vida a tus ideas en línea y ofrece una base sólida para adentrarte en tecnologías más avanzadas.",
                "title5": "Visualizando la Estructura de HTML",
                "title6": "Conclusión",
                "paragraph6": "HTML es más que una herramienta técnica; es el lenguaje que da vida a las ideas en la web. Ya sea que quieras crear un blog personal, un portafolio o un sitio web completo, dominar HTML es la puerta de entrada a infinitas posibilidades. Combinado con CSS y JavaScript, se convierte en un trío poderoso para construir sitios web modernos, atractivos y dinámicos. ¡Sumérgete, experimenta y comienza tu viaje para convertirte en un héroe del desarrollo web!"
            }
        },
        "chapter2": {
            "title": "Capítulo 2: Estructura del Documento HTML",
            "page1": {
                "pageTitle": "Entendiendo la Declaración <!DOCTYPE html>",
                "title1": "Entendiendo la Declaración <!DOCTYPE html>",
                "paragraph1": "La declaración <!DOCTYPE> es una parte importante de cualquier documento HTML. Es lo primero que debe aparecer en un documento HTML y le indica al navegador qué versión de HTML esperar. Sin ella, los navegadores podrían renderizar la página incorrectamente, especialmente al cambiar entre diferentes versiones de HTML.",
                "title2": "¿Qué es <!DOCTYPE html>?",
                "paragraph2": "La declaración <!DOCTYPE html> se utiliza para especificar que el documento es un documento HTML5. Define el tipo de documento y la versión de HTML utilizada, y asegura que el navegador renderice la página en modo estándar, evitando el modo de compatibilidad, donde los navegadores podrían usar métodos obsoletos para mostrar el contenido.",
                "title3": "¿Por Qué es Importante <!DOCTYPE html>?",
                "list1Item1": "Renderizado del Navegador: Ayuda al navegador a entender la versión de HTML esperada. Esto asegura que los elementos y características modernas de HTML se rendericen correctamente.",
                "list1Item2": "Modo Estándar vs. Modo de Compatibilidad: Sin el <!DOCTYPE html>, algunos navegadores pueden renderizar la página en modo de compatibilidad, donde el diseño y los estilos podrían no funcionar como se espera.",
                "list1Item3": "HTML5: Con HTML5, <!DOCTYPE html> es más simple que en versiones anteriores. En versiones antiguas como HTML 4.01, la declaración doctype era más larga e incluía más información. HTML5 simplificó esto usando solo <!DOCTYPE html>.",
                "title4": "¿Cómo Usar <!DOCTYPE html>?",
                "paragraph3": "La declaración debe aparecer al principio del documento, antes de la etiqueta <html>. Es la primera línea de tu documento HTML.",
                "codeTitle1": "Estructura Básica:",
                "listTitle2": "Puntos Clave para Recordar:",
                "list2Item1": "Siempre usa <!DOCTYPE html> al principio de tu documento HTML.",
                "list2Item2": "Declara el documento como HTML5, que es la versión más reciente y ampliamente utilizada de HTML.",
                "list2Item3": "<!DOCTYPE html> ayuda a los navegadores a interpretar y mostrar la página correctamente."
            },
            "page2": {
                "pageTitle": "Los Elementos <html>, <head> y <body>",
                "title1": "Los Elementos <html>, <head> y <body>",
                "title2": "El Elemento <html>",
                "paragraph1": "El elemento <html> es el elemento raíz de un documento HTML. Encapsula todo el contenido de la página, incluidas las secciones de cabecera y cuerpo. Cada documento HTML debe comenzar con este elemento, y todos los demás elementos deben estar anidados dentro de él.",
                "codeTitle1": "Sintaxis:",
                "listTitle1": "El elemento <html> debe contener dos secciones principales:",
                "list1Item1": "La sección <head>: Contiene metainformación sobre el documento, como el título, la codificación de caracteres y enlaces a recursos externos como archivos CSS y scripts.",
                "list1Item2": "La sección <body>: Contiene el contenido visible de la página, como texto, imágenes, videos y otros elementos.",
                "title3": "El Elemento <head>",
                "paragraph2": "El elemento <head> se utiliza para contener metainformación sobre el documento HTML. No muestra contenido en la página en sí, pero proporciona información importante para el navegador y los motores de búsqueda.",
                "listTitle2": "Elementos Comúnmente Usados Dentro de <head>:",
                "list2Item1": "<meta> Especifica metadatos como la codificación de caracteres o información del autor.",
                "list2Item2": "<title> Define el título de la página, que aparece en la barra de título o pestaña del navegador.",
                "list2Item3": "<link> Se utiliza para enlazar recursos externos, como hojas de estilo o favicon.",
                "list2Item4": "<style> Contiene estilos CSS internos para el documento.",
                "list2Item5": "<script> Define código JavaScript externo o en línea.",
                "codeTitle2": "Ejemplo:",
                "list3Item1": "<meta charset=\"UTF-8\"> Especifica la codificación de caracteres para el documento. UTF-8 es la codificación más común para las páginas web modernas, soportando una amplia gama de caracteres.",
                "list3Item2": "<meta name=\"author\" content=\"John Doe\"> Proporciona información sobre el autor de la página web, que no suele ser visible para los usuarios, pero es útil para los motores de búsqueda.",
                "list3Item3": "<title> El contenido dentro de la etiqueta <title> se muestra en la pestaña del navegador.",
                "title4": "El Elemento <body>",
                "paragraph3": "El elemento <body> contiene el contenido real que será visible para el usuario. Esto incluye todos los elementos como texto, encabezados, imágenes, enlaces y otros elementos HTML.",
                "codeTitle3": "Ejemplo:",
                "list4Item1": "<h1>: La etiqueta <h1> representa el encabezado principal de la página.",
                "list4Item2": "<p>: La etiqueta <p> se usa para un párrafo de texto.",
                "paragraph4": "Todo lo que está dentro de <body> es lo que los usuarios ven cuando visitan la página web.",
                "listTitle5": "Puntos Clave para Recordar:",
                "list5Item1": "El elemento <html> envuelve todo el documento HTML, incluyendo las secciones de cabecera y cuerpo.",
                "list5Item2": "El elemento <head> contiene metadatos y enlaces a recursos externos, como archivos CSS y scripts, y el título del documento.",
                "list5Item3": "El elemento <body> contiene el contenido visible con el que los usuarios interactúan, como encabezados, párrafos, imágenes y enlaces."
            },
            "page3": {
                "pageTitle": "Definiendo Metadatos con Etiquetas <meta>",
                "title1": "Introducción a los Metadatos",
                "paragraph1": "Los metadatos en HTML proporcionan información sobre el documento que no se muestra en la página web en sí. Normalmente se incluyen en la sección <head> de un documento HTML usando la etiqueta <meta>. Los metadatos son utilizados por navegadores, motores de búsqueda y otros servicios web para entender el contenido y el contexto de una página web.",
                "title2": "Usos Comunes de las Etiquetas <meta>",
                "paragraph2": "La etiqueta <meta> es versátil y puede usarse para varios propósitos. Aquí hay algunos usos comunes:",
                "list1Item1": "Especificar la codificación de caracteres con <meta charset='UTF-8'> para asegurar una visualización correcta del texto.",
                "list1Item2": "Definir metadatos del documento como descripción, palabras clave y autor para la optimización de motores de búsqueda (SEO).",
                "list1Item3": "Controlar configuraciones de viewport para diseño responsivo con <meta name='viewport'>.",
                "title3": "Ejemplos de Etiquetas <meta>",
                "paragraph3": "A continuación, se muestra un ejemplo de cómo se utilizan las etiquetas <meta> dentro de la sección <head> de un documento HTML. Este ejemplo incluye codificación de caracteres, descripción, palabras clave, autor y configuraciones de viewport.",
                "codeTitle1": "Ejemplo: Uso de Etiquetas <meta>",
                "title4": "Mejores Prácticas para Metadatos",
                "paragraph4": "Para aprovechar al máximo los metadatos, considera las siguientes mejores prácticas:",
                "list2Item1": "Siempre incluye la etiqueta meta de codificación de caracteres para asegurar una renderización correcta del texto en todos los navegadores.",
                "list2Item2": "Usa descripciones y palabras clave significativas para mejorar el SEO y la accesibilidad."
            },
            "page4": {
                "pageTitle": "Estableciendo el Título de la Página con <title>",
                "title1": "Introducción a la Etiqueta <title>",
                "paragraph1": "La etiqueta <title> en HTML se utiliza para definir el título de una página web, que aparece en la barra de título o pestaña del navegador. Es un elemento crucial dentro de la sección <head> y juega un papel importante en la experiencia del usuario y la optimización de motores de búsqueda (SEO).",
                "title2": "Propósito de la Etiqueta <title>",
                "paragraph2": "La etiqueta <title> cumple varias funciones importantes. Aquí hay algunos propósitos clave:",
                "list1Item1": "Muestra el título de la página web en la pestaña o barra de título del navegador.",
                "list1Item2": "Proporciona un título para los resultados de los motores de búsqueda, ayudando a los usuarios a identificar tu página.",
                "list1Item3": "Mejora la accesibilidad al proporcionar contexto para los lectores de pantalla.",
                "title3": "Ejemplo de Uso de la Etiqueta <title>",
                "paragraph3": "A continuación, se muestra un ejemplo de cómo se usa la etiqueta <title> dentro de la sección <head> de un documento HTML para establecer un título de página descriptivo.",
                "codeTitle1": "Ejemplo: Estableciendo el Título de la Página",
                "title4": "Mejores Prácticas para la Etiqueta <title>",
                "paragraph4": "Para aprovechar al máximo la etiqueta <title>, considera las siguientes mejores prácticas:",
                "list2Item1": "Mantén el título conciso, idealmente por debajo de 60 caracteres, para asegurar que se muestre completamente en los resultados de búsqueda.",
                "list2Item2": "Usa títulos únicos y descriptivos para cada página para mejorar el SEO y la navegación del usuario."
            },
            "page5": {
                "pageTitle": "Codificación de Caracteres: <meta charset=\"UTF-8\">",
                "title1": "Introducción a la Codificación de Caracteres",
                "paragraph1": "La etiqueta <meta charset=\"UTF-8\"> en HTML especifica la codificación de caracteres para una página web, asegurando que el texto se muestre correctamente. UTF-8 es la codificación estándar para el desarrollo web moderno, soportando una amplia gama de caracteres, incluyendo símbolos especiales y emojis, en diferentes navegadores y dispositivos.",
                "title2": "Importancia de <meta charset=\"UTF-8\">",
                "paragraph2": "Incluir la etiqueta <meta charset=\"UTF-8\"> es esencial para una renderización adecuada del texto. Aquí te explicamos por qué es importante:",
                "list1Item1": "Soporta caracteres especiales como letras acentuadas (por ejemplo, café) y emojis (por ejemplo, 😊).",
                "list1Item2": "Evita problemas de visualización, como texto distorsionado o caracteres de reemplazo (�).",
                "list1Item3": "Asegura una renderización consistente en navegadores y plataformas.",
                "title3": "Uso de <meta charset=\"UTF-8\">",
                "paragraph3": "A continuación, se muestra un ejemplo de cómo usar la etiqueta <meta charset=\"UTF-8\"> para soportar caracteres especiales en una página web.",
                "codeTitle1": "Ejemplo: UTF-8 con Caracteres Especiales",
                "title4": "Renderizando Entidades HTML",
                "paragraph4": "UTF-8 también soporta entidades HTML, que son códigos especiales utilizados para mostrar caracteres reservados o símbolos. El siguiente ejemplo muestra una página web que usa UTF-8 para renderizar entidades HTML comunes.",
                "codeTitle2": "Ejemplo: UTF-8 con Entidades HTML",
                "title5": "Otras Codificaciones de Caracteres",
                "paragraph5": "Aunque UTF-8 es la opción preferida, existen otras codificaciones, principalmente para propósitos heredados. Entenderlas puede ser útil al tratar con sistemas antiguos:",
                "list2Item1": "ISO-8859-1: Soporta idiomas de Europa Occidental, pero carece de muchos caracteres no latinos.",
                "list2Item2": "UTF-16: Usa más bytes por carácter, menos eficiente para uso web.",
                "list2Item3": "ASCII: Limitado a 128 caracteres, no apto para sitios web modernos.",
                "title6": "Resolución de Problemas de Codificación",
                "paragraph6": "Una codificación de caracteres incorrecta o ausente puede llevar a problemas de visualización. Aquí hay problemas comunes y sus soluciones:",
                "list3Item1": "Texto distorsionado o símbolos �: Agrega <meta charset=\"UTF-8\"> al principio de la sección <head>.",
                "list3Item2": "Renderización inconsistente en navegadores: Asegúrate de que los encabezados del servidor coincidan con la codificación UTF-8 declarada."
            },
            "page6": {
                "pageTitle": "Estructura Básica de un Archivo HTML",
                "title1": "Introducción a la Estructura HTML",
                "paragraph1": "Cada archivo HTML sigue una estructura básica que forma la base de una página web. Esta estructura incluye elementos esenciales como <!DOCTYPE html>, <html>, <head> y <body>, que organizan el contenido y los metadatos para que los navegadores los rendericen correctamente.",
                "title2": "Componentes Clave de la Estructura HTML",
                "paragraph2": "La estructura HTML básica consta de varios componentes críticos. Entender sus roles es esencial para construir páginas web válidas:",
                "list1Item1": "<!DOCTYPE html>: Declara el documento como HTML5, asegurando que los navegadores lo interpreten correctamente.",
                "list1Item2": "<html>: El elemento raíz que contiene todos los demás elementos, con un atributo lang para accesibilidad.",
                "list1Item3": "<head> y <body>: Separan los metadatos (por ejemplo, título, codificación de caracteres) del contenido visible.",
                "title3": "Ejemplo de Estructura HTML Básica",
                "paragraph3": "El siguiente ejemplo muestra un archivo HTML mínimo con los elementos estructurales esenciales.",
                "codeTitle1": "Ejemplo: Estructura HTML Mínima",
                "title4": "Estructura HTML Mejorada",
                "paragraph4": "Puedes mejorar la estructura básica añadiendo estilos y elementos semánticos como <header> y <main>. A continuación, se muestra un ejemplo con CSS en línea y etiquetas semánticas.",
                "codeTitle2": "Ejemplo: HTML Estructurado con Estilos",
                "title5": "Consejos para Organizar el Código HTML",
                "paragraph5": "Escribir HTML limpio y organizado mejora la legibilidad y el mantenimiento. Sigue estas mejores prácticas:",
                "list2Item1": "Usa una sangría consistente (por ejemplo, 2 o 4 espacios) para mostrar claramente el anidamiento.",
                "list2Item2": "Incluye comentarios para explicar secciones de código complejo.",
                "list2Item3": "Usa elementos semánticos como <header>, <main> y <footer> para mejorar la accesibilidad.",
                "title6": "Errores Estructurales Comunes",
                "paragraph6": "Evita estos errores comunes para asegurar que tu HTML sea válido y funcional:",
                "list3Item1": "Omitir <!DOCTYPE html>: Puede hacer que los navegadores rendericen en modo de compatibilidad, lo que lleva a estilos inconsistentes.",
                "list3Item2": "Anidar etiquetas incorrectamente: Por ejemplo, cerrar etiquetas en el orden incorrecto puede romper el diseño de la página."
            }
        },
        "chapter3": {
            "title": "Capítulo 3: Trabajando con Texto en HTML",
            "page1": {
                "pageTitle": "Encabezados: <h1> a <h6>",
                "title1": "Uso de Encabezados: <h1> a <h6>",
                "paragraph1": "Los encabezados en HTML, definidos por las etiquetas <h1> a <h6>, son esenciales para estructurar el contenido en una página web. Crean una jerarquía, con <h1> como el más importante (generalmente el título de la página) y <h6> como el menos importante. Los encabezados ayudan a los usuarios a navegar, hacen que el contenido sea accesible para lectores de pantalla y mejoran la optimización para motores de búsqueda (SEO) al señalar temas clave.",
                "title2": "Por qué son importantes los encabezados",
                "paragraph2": "Los encabezados organizan el contenido en una estructura clara, facilitando su escaneo y comprensión por parte de los usuarios. Son cruciales para la accesibilidad, ya que los lectores de pantalla los utilizan para delinear la página. Los motores de búsqueda también priorizan los encabezados para indexar el contenido, con <h1> teniendo el mayor peso. Usar encabezados correctamente mejora tanto la usabilidad como la descubribilidad.",
                "list1Item1": "Crear una jerarquía de contenido lógica para una mejor navegación.",
                "list1Item2": "Apoyar la accesibilidad para usuarios de lectores de pantalla.",
                "list1Item3": "Mejorar el SEO al destacar temas importantes.",
                "title3": "Creando una jerarquía de encabezados",
                "paragraph3": "Para usar los encabezados de manera efectiva, comienza con <h1> para el título principal, seguido de <h2> para secciones, <h3> para subsecciones, y así sucesivamente. Evita saltar niveles (por ejemplo, de <h1> a <h3>) para mantener una estructura clara. El ejemplo a continuación muestra una página web simple con una jerarquía de encabezados adecuada.",
                "codeTitle1": "Ejemplo: Estructura básica de encabezados",
                "title4": "Estilizando encabezados",
                "paragraph4": "Los encabezados tienen estilos predeterminados del navegador (por ejemplo, fuentes más grandes para <h1>), pero puedes personalizarlos con CSS para un atractivo visual. Un estilo consistente refuerza la jerarquía. El ejemplo a continuación usa CSS para estilizar encabezados en una página de blog, mostrando cómo organizan el contenido y mejoran el diseño.",
                "codeTitle2": "Ejemplo: Encabezados estilizados en un blog",
                "note1": "Consejo de accesibilidad: Usa siempre los encabezados en orden y limita <h1> a uno por página para asegurar que los lectores de pantalla y los motores de búsqueda interpreten tu contenido correctamente.",
                "title5": "Errores comunes con encabezados",
                "paragraph5": "El uso incorrecto de los encabezados puede confundir a los usuarios y dañar la accesibilidad. Evita estos errores comunes para mantener el contenido claro y efectivo. Por ejemplo, usar encabezados para estilizar en lugar de estructurar o saltar niveles puede interrumpir la navegación y el SEO.",
                "list2Item1": "Usar encabezados para estilo: Usa CSS para efectos visuales, no <h1> o <h2>.",
                "list2Item2": "Saltar niveles: Sigue el orden (<h1>, <h2>, <h3>) para mayor claridad.",
                "list2Item3": "Múltiples etiquetas <h1>: Usa solo un <h1> por página para mantener el enfoque.",
                "title6": "Consejos para encabezados efectivos",
                "paragraph6": "Para usar bien los encabezados, mantenlos descriptivos y concisos, resumiendo el contenido de la sección. Usa solo un <h1> por página para definir el tema principal. Prueba tu página con herramientas de accesibilidad para asegurar que la estructura sea clara para todos los usuarios.",
                "list3Item1": "Mantén el texto de los encabezados corto y relevante para la sección.",
                "list3Item2": "Usa herramientas de accesibilidad para verificar la navegación de encabezados."
            },
            "page2": {
                "pageTitle": "Párrafos: <p>",
                "title1": "Trabajando con Párrafos: <p>",
                "paragraph1": "La etiqueta <p> en HTML se usa para definir párrafos, organizando bloques de texto para mejorar la legibilidad. Es un elemento fundamental para presentar contenido, como artículos, descripciones o introducciones, asegurando que el texto esté visualmente separado y sea fácil de seguir.",
                "title2": "Propósito de la etiqueta <p>",
                "paragraph2": "Los párrafos dividen el texto en fragmentos manejables, mejorando la experiencia del usuario. La etiqueta <p> agrega un espaciado predeterminado (márgenes) alrededor del texto, haciendo que el contenido sea menos abarrotado. También es semántica, ayudando a los lectores de pantalla y motores de búsqueda a entender la estructura del contenido.",
                "list1Item1": "Mejora la legibilidad al separar bloques de texto.",
                "list1Item2": "Apoya la accesibilidad para la navegación con lectores de pantalla.",
                "list1Item3": "Permite el estilo con CSS para una apariencia personalizada.",
                "title3": "Usando Párrafos",
                "paragraph3": "La etiqueta <p> es fácil de usar: envuelve tu texto entre <p> y </p>. Generalmente se coloca en la sección <body> después de encabezados u otros elementos. El ejemplo a continuación muestra una página web simple con párrafos que presentan un sitio web.",
                "codeTitle1": "Ejemplo: Uso básico de párrafos",
                "title4": "Estilizando Párrafos",
                "paragraph4": "Puedes estilizar párrafos con CSS para ajustar el espaciado, fuentes o colores, haciéndolos visualmente atractivos. Un estilo consistente asegura que los párrafos encajen con el diseño de tu sitio. El ejemplo a continuación muestra párrafos estilizados con CSS para un diseño limpio y legible.",
                "codeTitle2": "Ejemplo: Párrafos estilizados",
                "note1": "Consejo de accesibilidad: Usa <p> para párrafos reales, no para estilizar contenido no relacionado, para mantener la claridad semántica para los lectores de pantalla.",
                "title5": "Errores comunes con párrafos",
                "paragraph5": "El uso indebido de la etiqueta <p> puede afectar la legibilidad y la accesibilidad. Evita estos errores para asegurar que tus párrafos sean efectivos y estén correctamente estructurados.",
                "list2Item1": "Usar <p> para contenido no textual: Usa <div> u otras etiquetas para propósitos de diseño.",
                "list2Item2": "Sobreuso de saltos de línea (<br>): Usa <p> para ideas separadas en lugar de múltiples etiquetas <br>.",
                "title6": "Consejos para mejores párrafos",
                "paragraph6": "Escribe párrafos claros y concisos que transmitan una idea principal. Combina <p> con encabezados para crear un flujo lógico. Prueba tu contenido para legibilidad en diferentes dispositivos para asegurar que sea fácil de usar.",
                "list3Item1": "Mantén los párrafos cortos y enfocados para una mejor legibilidad.",
                "list3Item2": "Combina con encabezados para organizar el contenido de manera efectiva."
            },
            "page3": {
                "pageTitle": "Formateo de texto: <b>, <i>, <strong>, <em>",
                "title1": "Conceptos básicos de formateo de texto",
                "paragraph1": "HTML ofrece etiquetas como <b>, <i>, <strong> y <em> para estilizar y enfatizar texto, mejorando la legibilidad y el significado.",
                "title2": "Formateo visual con <b> e <i>",
                "paragraph2": "La etiqueta <b> crea texto en negrita, y la etiqueta <i> itálica el texto. Estas se usan para estilización visual sin implicaciones semánticas.",
                "list1Item1": "<b>: Hace que el texto sea en negrita, a menudo para énfasis o atención.",
                "list1Item2": "<i>: Itálica el texto, típicamente para propósitos estilísticos.",
                "codeTitle1": "Ejemplo: Uso de <b> e <i>",
                "title3": "Formateo semántico con <strong> y <em>",
                "paragraph3": "Las etiquetas <strong> y <em> añaden significado semántico. <strong> indica importancia (negrita), mientras que <em> sugiere énfasis (itálica).",
                "codeTitle2": "Ejemplo: Uso de <strong> y <em>",
                "note1": "Prefiere <strong> y <em> para accesibilidad, ya que transmiten significado a los lectores de pantalla.",
                "title4": "Cuándo usar cada etiqueta",
                "paragraph4": "Elige las etiquetas según el propósito: estilización visual o importancia semántica. Considera estos consejos:",
                "list2Item1": "Usa <b> e <i> para cambios puramente visuales, como estilizar palabras clave.",
                "list2Item2": "Usa <strong> y <em> para mejorar la accesibilidad y transmitir significado."
            },
            "page4": {
                "pageTitle": "Saltos de línea con <br>",
                "title1": "Entendiendo la etiqueta <br>",
                "paragraph1": "La etiqueta <br> en HTML inserta un salto de línea simple, permitiéndote controlar el diseño del texto sin iniciar un nuevo párrafo.",
                "title2": "Uso de <br> para saltos simples",
                "paragraph2": "Usa la etiqueta <br> para añadir un salto de línea dentro de un bloque de texto, como direcciones o listas, para mejorar la legibilidad.",
                "list1Item1": "<br> es una etiqueta de cierre automático, no requiere etiqueta de cierre.",
                "list1Item2": "Es ideal para pequeños saltos dentro de un solo elemento como <p>.",
                "codeTitle1": "Ejemplo: Saltos de línea básicos",
                "title3": "Estilizando con <br>",
                "paragraph3": "Combina <br> con CSS para formatear el texto de manera ordenada, asegurando que los saltos de línea se alineen con tus objetivos de diseño.",
                "codeTitle2": "Ejemplo: Saltos de línea estilizados",
                "note1": "Evita el uso excesivo de <br> para espaciado; usa márgenes o relleno de CSS para un mejor control.",
                "title4": "Mejores prácticas para <br>",
                "paragraph4": "Usa la etiqueta <br> de manera reflexiva para mantener un HTML limpio y accesible.",
                "list2Item1": "Usa <br> para saltos relacionados con el contenido, como direcciones o poesía.",
                "list2Item2": "Confía en CSS para ajustes de diseño en lugar de múltiples etiquetas <br>."
            },
            "page5": {
                "pageTitle": "Líneas horizontales: <hr>",
                "title1": "Introduciendo la etiqueta <hr>",
                "paragraph1": "La etiqueta <hr> en HTML crea una línea horizontal, usada para separar visualmente secciones de contenido en una página web.",
                "title2": "Uso de <hr> para separaciones de secciones",
                "paragraph2": "La etiqueta <hr> es una forma simple de dividir contenido, como separar párrafos o secciones, sin afectar el flujo del diseño.",
                "list1Item1": "<hr> es una etiqueta de cierre automático, no requiere etiqueta de cierre.",
                "list1Item2": "Crea una línea horizontal de ancho completo por defecto.",
                "codeTitle1": "Ejemplo: Línea horizontal básica",
                "title3": "Estilizando la etiqueta <hr>",
                "paragraph3": "Con CSS, puedes personalizar la apariencia de <hr> para que coincida con el diseño de tu sitio web, como cambiar su color o grosor.",
                "codeTitle2": "Ejemplo: Línea horizontal estilizada",
                "note1": "Usa <hr> con moderación para evitar saturar tu página; considera bordes CSS para diseños más complejos.",
                "title4": "Mejores prácticas para <hr>",
                "paragraph4": "La etiqueta <hr> debe usarse de manera intencionada para mejorar la organización y legibilidad del contenido.",
                "list2Item1": "Usa <hr> para separar secciones distintas, como artículos o temas.",
                "list2Item2": "Personaliza <hr> con CSS para una mejor integración visual."
            },
            "page6": {
                "pageTitle": "Comentarios en HTML: <!-- -->",
                "title1": "Entendiendo los comentarios en HTML",
                "paragraph1": "Los comentarios en HTML, escritos como <!-- -->, permiten a los desarrolladores añadir notas u ocultar contenido sin afectar la visualización de la página web.",
                "title2": "Uso de comentarios para organización",
                "paragraph2": "Los comentarios ayudan a documentar tu código, facilitando su comprensión y mantenimiento, especialmente en proyectos grandes.",
                "list1Item1": "Los comentarios no son visibles en la página web.",
                "list1Item2": "Pueden abarcar múltiples líneas dentro de <!-- y -->.",
                "codeTitle1": "Ejemplo: Comentarios básicos",
                "title3": "Comentarios en páginas estilizadas",
                "paragraph3": "Los comentarios son útiles en archivos HTML complejos para etiquetar secciones o anotar cambios futuros, incluso cuando se aplica CSS.",
                "codeTitle2": "Ejemplo: Comentarios con estilos",
                "note1": "Evita anidar comentarios (<!-- dentro de otro -->), ya que puede causar errores.",
                "title4": "Mejores prácticas para comentarios",
                "paragraph4": "Usa comentarios estratégicamente para mejorar la claridad del código sin saturar tu HTML.",
                "list2Item1": "Añade comentarios para explicar secciones complejas o marcar placeholders.",
                "list2Item2": "Mantén los comentarios concisos para preservar un código legible."
            }
        },
        "chapter4": {
            "title": "Capítulo 4: Enlaces y Navegación",
            "page1": {
                "pageTitle": "Creando enlaces usando <a href=\"...\">",
                "title1": "Introducción a los enlaces HTML",
                "paragraph1": "La etiqueta <a> con el atributo href crea hipervínculos, conectando páginas o recursos en la web.",
                "title2": "Creación básica de enlaces",
                "paragraph2": "Usa la etiqueta <a> con href para enlazar a sitios web externos, páginas internas o direcciones de correo electrónico.",
                "list1Item1": "El atributo href especifica la URL de destino del enlace.",
                "list1Item2": "El texto entre <a> y </a> es el texto del enlace clicable.",
                "codeTitle1": "Ejemplo: Enlaces básicos",
                "title3": "Estilizando enlaces con CSS",
                "paragraph3": "CSS puede mejorar los enlaces cambiando colores, eliminando subrayados o añadiendo efectos de hover para una mejor experiencia de usuario.",
                "codeTitle2": "Ejemplo: Enlaces estilizados",
                "note1": "Siempre prueba los enlaces para asegurar que apunten a destinos válidos.",
                "title4": "Mejores prácticas para enlaces",
                "paragraph4": "Crea enlaces claros y accesibles para mejorar la navegación y el compromiso del usuario.",
                "list2Item1": "Usa texto de enlace descriptivo, evitando términos vagos como 'clic aquí'.",
                "list2Item2": "Asegúrate de que los enlaces externos sean seguros (usa https:// cuando sea posible)."
            },
            "page2": {
                "pageTitle": "Enlaces internos vs externos",
                "title1": "Entendiendo los tipos de enlaces",
                "paragraph1": "Los enlaces pueden ser internos, apuntando a páginas dentro de tu sitio web, o externos, enlazando a otros sitios web, cada uno con propósitos distintos.",
                "title2": "Conceptos básicos de enlaces internos y externos",
                "paragraph2": "Los enlaces internos usan URLs relativas, mientras que los externos usan URLs absolutas que comienzan con http:// o https://.",
                "list1Item1": "Enlaces internos (por ejemplo, /acerca) navegan dentro de tu sitio.",
                "list1Item2": "Enlaces externos (por ejemplo, https://ejemplo.com) conectan a otros sitios.",
                "codeTitle1": "Ejemplo: Enlaces internos y externos",
                "title3": "Estilizando tipos de enlaces de manera diferente",
                "paragraph3": "Usa clases CSS para distinguir visualmente los enlaces internos y externos, mejorando la experiencia y claridad del usuario.",
                "codeTitle2": "Ejemplo: Enlaces internos y externos estilizados",
                "note1": "Siempre usa https:// para enlaces externos para garantizar seguridad.",
                "title4": "Mejores prácticas para tipos de enlaces",
                "paragraph4": "Elige el tipo de enlace adecuado para mejorar la navegación y la confianza del usuario.",
                "list2Item1": "Usa enlaces internos para mantener a los usuarios en tu sitio con contenido relacionado.",
                "list2Item2": "Asegúrate de que los enlaces externos se abran en nuevas pestañas con target='_blank' para una mejor experiencia de usuario."
            },
            "page3": {
                "pageTitle": "Conceptos básicos de la barra de navegación (usando <nav>)",
                "title1": "¿Qué es una barra de navegación?",
                "paragraph1": "La etiqueta <nav> en HTML se usa para crear una barra de navegación, agrupando enlaces para ayudar a los usuarios a moverse entre páginas de un sitio web.",
                "title2": "Construyendo una barra de navegación simple",
                "paragraph2": "Una barra de navegación básica usa la etiqueta <nav> para contener etiquetas <a>, enlazando a secciones clave como Inicio o Acerca.",
                "list1Item1": "<nav> es una etiqueta semántica, mejorando la accesibilidad.",
                "list1Item2": "Contiene etiquetas <a> con atributos href para navegación.",
                "codeTitle1": "Ejemplo: Barra de navegación simple",
                "title3": "Expandiendo barras de navegación",
                "paragraph3": "Puedes añadir más enlaces a una etiqueta <nav> para incluir páginas adicionales, manteniendo la estructura clara y organizada.",
                "codeTitle2": "Ejemplo: Barra de navegación extendida",
                "note1": "Usa texto de enlace significativo en <nav> para una mejor experiencia de usuario.",
                "title4": "Consejos para barras de navegación",
                "paragraph4": "Las barras de navegación efectivas son simples e intuitivas, guiando a los usuarios sin esfuerzo.",
                "list2Item1": "Limita los enlaces a páginas esenciales para evitar el desorden.",
                "list2Item2": "Coloca <nav> en la parte superior o lateral para un acceso fácil."
            },
            "page4": {
                "pageTitle": "Enlaces de anclaje: Enlazando a secciones específicas en la misma página",
                "title1": "¿Qué son los enlaces de anclaje?",
                "paragraph1": "Los enlaces de anclaje usan la etiqueta <a> con un hashtag (#) y un ID para saltar a secciones específicas dentro de la misma página web.",
                "title2": "Creando enlaces de anclaje básicos",
                "paragraph2": "Enlaza a elementos con un atributo 'id' usando <a href='#id'> para navegar a diferentes partes de una página.",
                "list1Item1": "El valor href comienza con '#' seguido del ID del elemento objetivo.",
                "list1Item2": "Los IDs deben ser únicos dentro de una página.",
                "codeTitle1": "Ejemplo: Enlaces de anclaje básicos",
                "title3": "Usando enlaces de anclaje para navegación",
                "paragraph3": "Los enlaces de anclaje pueden crear una tabla de contenidos o permitir un acceso rápido a secciones, mejorando la navegación del usuario.",
                "codeTitle2": "Ejemplo: Enlaces de anclaje extendidos",
                "note1": "Asegúrate de que los IDs sean descriptivos y únicos para evitar errores de navegación.",
                "title4": "Consejos para enlaces de anclaje",
                "paragraph4": "Usa enlaces de anclaje para mejorar la navegación en páginas largas sin abrumar a los usuarios.",
                "list2Item1": "Coloca enlaces de anclaje en un <nav> para un acceso claro a secciones.",
                "list2Item2": "Añade enlaces de 'Volver arriba' para un retorno fácil al inicio de la página."
            },
            "page5": {
                "pageTitle": "Usando el atributo target=\"_blank\" para abrir enlaces en nuevas pestañas",
                "title1": "¿Qué es el atributo target='_blank'?",
                "paragraph1": "El atributo target='_blank' en la etiqueta <a> abre las páginas enlazadas en una nueva pestaña del navegador, manteniendo la página actual accesible.",
                "title2": "Usando target='_blank' para enlaces externos",
                "paragraph2": "Añade target='_blank' a las etiquetas <a> para abrir sitios web externos en nuevas pestañas, mejorando la experiencia del usuario.",
                "list1Item1": "target='_blank' funciona con cualquier atributo href de la etiqueta <a>.",
                "list1Item2": "Se usa comúnmente para enlaces externos para mantener a los usuarios en tu sitio.",
                "codeTitle1": "Ejemplo: Enlaces básicos con target='_blank'",
                "title3": "Integrando target='_blank' en la navegación",
                "paragraph3": "Usa target='_blank' en un <nav> para enlaces externos mientras mantienes los enlaces internos en la misma pestaña.",
                "codeTitle2": "Ejemplo: Navegación con target='_blank'",
                "note1": "Usa target='_blank' con moderación para evitar abrumar a los usuarios con demasiadas pestañas.",
                "title4": "Consejos para usar target='_blank'",
                "paragraph4": "Aplica target='_blank' de manera reflexiva para equilibrar la usabilidad y la navegación.",
                "list2Item1": "Usa para enlaces externos a sitios confiables y relevantes.",
                "list2Item2": "Informa a los usuarios cuando los enlaces se abren en nuevas pestañas para mayor claridad."
            }
        },
        "chapter5": {
            "title": "Capítulo 5: Listas en HTML",
            "page1": {
                "pageTitle": "Listas desordenadas: <ul> y <li>",
                "title1": "¿Qué son las listas desordenadas?",
                "paragraph1": "La etiqueta <ul> crea una lista desordenada en HTML, con etiquetas <li> que definen cada elemento de la lista, mostrados con viñetas por defecto.",
                "title2": "Creando una lista desordenada básica",
                "paragraph2": "Usa <ul> para agrupar elementos y <li> para cada entrada, ideal para listas donde el orden no importa.",
                "list1Item1": "<ul> envuelve toda la lista, y <li> define elementos individuales.",
                "list1Item2": "Cada <li> se muestra como un punto de viñeta.",
                "codeTitle1": "Ejemplo: Lista desordenada básica",
                "title3": "Anidando listas desordenadas",
                "paragraph3": "Puedes anidar etiquetas <ul> dentro de etiquetas <li> para crear sublistas, organizando el contenido jerárquicamente.",
                "codeTitle2": "Ejemplo: Lista desordenada anidada",
                "note1": "Asegúrate de que cada <li> esté directamente dentro de un <ul> para mantener la estructura adecuada.",
                "title4": "Consejos para listas desordenadas",
                "paragraph4": "Las listas desordenadas son excelentes para menús, características o cualquier elemento no secuencial.",
                "list2Item1": "Mantén los elementos de la lista concisos para mayor legibilidad.",
                "list2Item2": "Usa el anidamiento con moderación para evitar estructuras complejas."
            },
            "page2": {
                "pageTitle": "Listas ordenadas: <ol> y <li>",
                "title1": "¿Qué son las listas ordenadas?",
                "paragraph1": "La etiqueta <ol> crea una lista ordenada en HTML, con etiquetas <li> que definen cada elemento, mostrados con números por defecto.",
                "title2": "Creando una lista ordenada básica",
                "paragraph2": "Usa <ol> para agrupar elementos y <li> para cada entrada, perfecto para listas donde el orden importa, como pasos o clasificaciones.",
                "list1Item1": "<ol> envuelve la lista, y <li> define elementos individuales.",
                "list1Item2": "Cada <li> se numera secuencialmente.",
                "codeTitle1": "Ejemplo: Lista ordenada básica",
                "title3": "Anidando listas ordenadas",
                "paragraph3": "Anida etiquetas <ol> dentro de etiquetas <li> para crear sublistas, útil para esquemas detallados o pasos jerárquicos.",
                "codeTitle2": "Ejemplo: Lista ordenada anidada",
                "note1": "Asegúrate de que las etiquetas <li> estén directamente dentro de <ol> para una numeración adecuada.",
                "title4": "Consejos para listas ordenadas",
                "paragraph4": "Las listas ordenadas son ideales para instrucciones, clasificaciones o cualquier contenido secuencial.",
                "list2Item1": "Mantén los elementos claros y breves para facilitar la lectura.",
                "list2Item2": "Usa el anidamiento solo cuando los subpasos mejoren la claridad."
            },
            "page3": {
                "pageTitle": "Listas de definición: <dl>, <dt> y <dd>",
                "title1": "¿Qué son las listas de definición?",
                "paragraph1": "La etiqueta <dl> crea una lista de definición, con <dt> para términos y <dd> para sus descripciones, ideal para glosarios o preguntas frecuentes.",
                "title2": "Creando una lista de definición básica",
                "paragraph2": "Usa <dl> para agrupar términos y descripciones, con <dt> para cada término y <dd> para su definición.",
                "list1Item1": "<dt> define el término, y <dd> proporciona su descripción.",
                "list1Item2": "Múltiples <dd> pueden describir un solo <dt>.",
                "codeTitle1": "Ejemplo: Lista de definición básica",
                "title3": "Usando múltiples descripciones",
                "paragraph3": "Un solo <dt> puede tener múltiples etiquetas <dd> para proporcionar detalles adicionales o explicaciones alternativas.",
                "codeTitle2": "Ejemplo: Lista de definición extendida",
                "note1": "Mantén los pares <dt> y <dd> dentro de <dl> para una estructura adecuada.",
                "title4": "Consejos para listas de definición",
                "paragraph4": "Las listas de definición son excelentes para presentar términos y sus significados de manera clara.",
                "list2Item1": "Usa términos concisos en <dt> para mayor claridad.",
                "list2Item2": "Agrupa términos relacionados para mantener un flujo lógico."
            },
            "page4": {
                "pageTitle": "Anidando listas",
                "title1": "¿Qué es el anidamiento de listas?",
                "paragraph1": "El anidamiento de listas implica colocar una lista dentro de otra, usando <ul>, <ol> o <dl> dentro de un <li> para crear estructuras jerárquicas.",
                "title2": "Creando listas anidadas simples",
                "paragraph2": "Coloca un <ul> o <ol> dentro de un <li> para crear sublistas, organizando elementos relacionados bajo un elemento principal.",
                "list1Item1": "Las listas anidadas deben estar dentro de una etiqueta <li>.",
                "list1Item2": "Las sublistas heredan la estructura de la lista principal.",
                "codeTitle1": "Ejemplo: Lista anidada simple",
                "title3": "Mezclando tipos de listas en anidamiento",
                "paragraph3": "Combina <ul> y <ol> en estructuras anidadas para representar jerarquías complejas, como esquemas con elementos numerados y con viñetas.",
                "codeTitle2": "Ejemplo: Lista anidada mixta",
                "note1": "Mantén los niveles de anidamiento superficiales para preservar la legibilidad.",
                "title4": "Consejos para anidamiento de listas",
                "paragraph4": "Las listas anidadas ayudan a organizar información compleja, pero deben usarse con cuidado para evitar confusión.",
                "list2Item1": "Limita el anidamiento a dos o tres niveles.",
                "list2Item2": "Asegúrate de que las sublistas estén lógicamente relacionadas con su elemento principal."
            }
        },
        "chapter6": {
            "title": "Capítulo 6: Imágenes y Medios",
            "page1": {
                "pageTitle": "Agregar imágenes",
                "title1": "¿Qué son las imágenes en HTML?",
                "paragraph1": "La etiqueta <img> se utiliza para incrustar imágenes en HTML, usando 'src' para especificar la fuente de la imagen y 'alt' para el texto de accesibilidad.",
                "title2": "Agregar una imagen básica",
                "paragraph2": "Usa la etiqueta <img> con 'src' para especificar la ruta del archivo de la imagen y 'alt' para describir la imagen.",
                "list1Item1": "'src' puede apuntar a imágenes locales o en línea.",
                "list1Item2": "'alt' mejora la accesibilidad y el SEO.",
                "codeTitle1": "Ejemplo: Imagen básica",
                "title3": "Usar múltiples imágenes",
                "paragraph3": "Agrega varias etiquetas <img> para mostrar múltiples imágenes, cada una con sus propios atributos 'src' y 'alt'.",
                "codeTitle2": "Ejemplo: Múltiples imágenes",
                "note1": "Siempre incluye el atributo 'alt' para mejorar la accesibilidad.",
                "title4": "Consejos para agregar imágenes",
                "paragraph4": "Las imágenes aumentan el atractivo visual, pero deben usarse con propósito.",
                "list2Item1": "Usa un texto 'alt' descriptivo para mayor claridad.",
                "list2Item2": "Asegúrate de que los archivos de imagen sean accesibles para la página web."
            },
            "page2": {
                "pageTitle": "Atributos de imagen: src, alt, width, height",
                "title1": "¿Qué son los atributos de imagen?",
                "paragraph1": "La etiqueta <img> usa atributos como src, alt, width y height para definir la fuente, descripción y dimensiones de la imagen.",
                "title2": "Usar atributos de imagen básicos",
                "paragraph2": "Configura src para la ruta de la imagen, alt para accesibilidad, y width/height para controlar el tamaño en píxeles.",
                "list1Item1": "src y alt son esenciales para la funcionalidad y accesibilidad.",
                "list1Item2": "width y height garantizan una visualización consistente.",
                "codeTitle1": "Ejemplo: Atributos de imagen básicos",
                "title3": "Aplicar atributos a múltiples imágenes",
                "paragraph3": "Usa diferentes valores de width y height para múltiples imágenes según su contexto, manteniendo un texto alt claro.",
                "codeTitle2": "Ejemplo: Atributos de múltiples imágenes",
                "note1": "Especifica width y height para evitar cambios de diseño durante la carga.",
                "title4": "Consejos para los atributos de imagen",
                "paragraph4": "El uso correcto de los atributos de imagen mejora la accesibilidad y el rendimiento de la página.",
                "list2Item1": "Usa un texto alt preciso para lectores de pantalla.",
                "list2Item2": "Ajusta width/height a la relación de aspecto de la imagen."
            },
            "page3": {
                "pageTitle": "Incrustar videos con el elemento <video>",
                "title1": "¿Qué es el elemento <video>?",
                "paragraph1": "La etiqueta <video> incrusta contenido de video en HTML, soporta formatos como MP4 y WebM con controles de reproducción.",
                "paragraph1a": "Introducido en HTML5, proporciona una forma nativa de incrustar videos sin depender de complementos externos como Flash.",
                "title2": "Agregar un video básico",
                "paragraph2": "Usa la etiqueta <video> con el atributo src para especificar el archivo de video y controls para la interacción del usuario.",
                "paragraph2a": "Incluye texto alternativo entre las etiquetas para navegadores que no soporten el elemento.",
                "list1Item1": "El atributo controls agrega botones de reproducción, pausa y volumen.",
                "list1Item2": "src apunta a la ruta del archivo de video.",
                "codeTitle1": "Ejemplo: Video básico",
                "title3": "Usar funciones avanzadas de video",
                "paragraph3": "Agrega atributos como width, height, autoplay y muted, o usa la etiqueta <source> para múltiples formatos.",
                "paragraph3a": "Varias etiquetas <source> aseguran compatibilidad con navegadores que soportan diferentes formatos.",
                "codeTitle2": "Ejemplo: Video avanzado",
                "note1": "Prueba los videos en múltiples navegadores para garantizar compatibilidad.",
                "title4": "Consejos para incrustar videos",
                "paragraph4": "Los videos mejoran la interacción, pero requieren una implementación cuidadosa para el rendimiento.",
                "paragraph4a": "Optimiza los archivos de video para reducir tiempos de carga y uso de ancho de banda.",
                "list2Item1": "Proporciona texto alternativo para accesibilidad.",
                "list2Item2": "Usa formatos soportados como MP4 para amplia compatibilidad."
            },
            "page4": {
                "pageTitle": "Incrustar audio con el elemento <audio>",
                "title1": "¿Qué es el elemento <audio>?",
                "paragraph1": "La etiqueta <audio> incrusta contenido de audio en HTML, soporta formatos como MP3 y OGG con controles de reproducción.",
                "paragraph1a": "Introducido en HTML5, ofrece una solución nativa para audio, reemplazando métodos basados en complementos.",
                "title2": "Agregar un archivo de audio básico",
                "paragraph2": "Usa la etiqueta <audio> con el atributo src para especificar el archivo de audio y controls para la reproducción del usuario.",
                "paragraph2a": "Incluye texto alternativo dentro de las etiquetas para navegadores sin soporte de audio.",
                "list1Item1": "El atributo controls agrega controles de reproducción, pausa y volumen.",
                "list1Item2": "src define la ruta del archivo de audio.",
                "codeTitle1": "Ejemplo: Audio básico",
                "title3": "Usar funciones avanzadas de audio",
                "paragraph3": "Agrega atributos como autoplay y loop, o usa la etiqueta <source> para proporcionar múltiples formatos de audio.",
                "codeTitle2": "Ejemplo: Audio avanzado",
                "note1": "Siempre incluye texto alternativo para accesibilidad y cumplimiento.",
                "title4": "Consejos para incrustar audio",
                "paragraph4": "El audio puede mejorar la experiencia del usuario, pero necesita optimización para el rendimiento.",
                "paragraph4a": "Comprime los archivos de audio para minimizar tiempos de carga y uso de ancho de banda.",
                "list2Item1": "Usa formatos ampliamente soportados como MP3.",
                "list2Item2": "Prueba la reproducción de audio en diferentes navegadores."
            },
            "page5": {
                "pageTitle": "Usar la etiqueta <iframe> para incrustar contenido externo",
                "title1": "¿Qué es la etiqueta <iframe>?",
                "paragraph1": "La etiqueta <iframe> incrusta contenido externo, como páginas web, mapas o videos, dentro de un documento HTML.",
                "paragraph1a": "Crea un contexto de navegación separado, permitiendo la integración fluida de contenido de terceros.",
                "title2": "Incrustar contenido básico con <iframe>",
                "paragraph2": "Usa el atributo src para especificar la URL del contenido externo, y configura width y height para el tamaño de visualización.",
                "paragraph2a": "Usos comunes incluyen incrustar mapas o herramientas de redes sociales directamente en la página.",
                "list1Item1": "src define la URL del contenido incrustado.",
                "list1Item2": "width y height controlan las dimensiones del marco.",
                "codeTitle1": "Ejemplo: Iframe básico",
                "title3": "Incrustar múltiples iframes",
                "paragraph3": "Usa varias etiquetas <iframe> para incrustar diferentes tipos de contenido, como videos y formularios, en la misma página.",
                "paragraph3a": "Agregar el atributo title mejora la accesibilidad al describir el propósito del iframe.",
                "codeTitle2": "Ejemplo: Iframe avanzado",
                "note1": "Asegúrate de que el contenido externo provenga de fuentes confiables para evitar riesgos de seguridad.",
                "title4": "Consejos para usar iframes",
                "paragraph4": "Los iframes son potentes para incrustar contenido, pero deben usarse con cuidado para mantener el rendimiento.",
                "paragraph4a": "Verifica los términos de servicio del contenido incrustado para garantizar el cumplimiento.",
                "list2Item1": "Usa el atributo allowfullscreen para soporte de pantalla completa.",
                "list2Item2": "Prueba los iframes en diferentes navegadores para una visualización consistente."
            }
        },
        "chapter7": {
            "title": "Capítulo 7: Tablas en HTML",
            "page1": {
                "pageTitle": "Crear tablas con <table>",
                "title1": "¿Qué es la etiqueta <table>?",
                "paragraph1": "La etiqueta <table> organiza datos en filas y columnas, creando tablas estructuradas en HTML.",
                "paragraph1a": "Usa <tr> para filas, <th> para celdas de encabezado y <td> para celdas de datos, ideal para horarios o inventarios.",
                "paragraph1b": "Las tablas son elementos semánticos, diseñados para presentar datos tabulares de manera clara y accesible.",
                "title2": "Construir una tabla simple",
                "paragraph2": "Usa <table> para comenzar, <tr> para cada fila, <th> para encabezados y <td> para celdas de datos.",
                "paragraph2a": "Una tabla básica suele incluir una fila de encabezado y algunas filas de datos para simplicidad.",
                "paragraph2b": "Las tablas son ideales para mostrar información como horarios o planes de eventos.",
                "list1Item1": "<th> define encabezados, a menudo en negrita y centrados por defecto.",
                "list1Item2": "<td> contiene los datos de cada celda en la tabla.",
                "codeTitle1": "Ejemplo: Tabla simple",
                "title3": "Crear una tabla de múltiples filas",
                "paragraph3": "Agrega múltiples etiquetas <tr> para crear filas adicionales, cada una con <td> o <th> según sea necesario.",
                "paragraph3a": "Asegúrate de que cada fila tenga el mismo número de celdas para mantener la alineación.",
                "paragraph3b": "Las tablas de múltiples filas son útiles para conjuntos de datos más grandes, como listas de productos o registros de empleados.",
                "codeTitle2": "Ejemplo: Tabla de múltiples filas",
                "title4": "Agregar tabla con diferentes columnas",
                "paragraph4": "Las tablas pueden tener diferentes números de columnas para adaptarse a diversos tipos de datos.",
                "paragraph4a": "Por ejemplo, una tabla puede incluir columnas para nombres, roles y departamentos.",
                "paragraph4b": "Siempre planifica la estructura de la tabla para que coincida con la organización de los datos.",
                "codeTitle3": "Ejemplo: Tabla de empleados",
                "note1": "Usa tablas solo para datos, no para diseño, para seguir las prácticas semánticas de HTML.",
                "title5": "Consejos para crear tablas",
                "paragraph5": "Las tablas son potentes para presentar datos, pero necesitan un diseño cuidadoso para mayor claridad.",
                "paragraph5a": "El marcado correcto asegura la accesibilidad, especialmente para lectores de pantalla.",
                "paragraph5b": "Mantén las tablas simples para evitar abrumar a los usuarios con estructuras complejas.",
                "list2Item1": "Incluye encabezados con <th> para cada columna.",
                "list2Item2": "Mantén un número consistente de celdas en las filas."
            },
            "page2": {
                "pageTitle": "Filas de tabla: <tr>",
                "title1": "¿Qué es la etiqueta <tr>?",
                "paragraph1": "La etiqueta <tr> define una fila en una tabla HTML, conteniendo celdas de encabezado o datos.",
                "paragraph1a": "Cada <tr> contiene <th> para encabezados o <td> para datos, formando la estructura de la tabla.",
                "paragraph1b": "Las filas son la columna vertebral de las tablas, organizando el contenido horizontalmente.",
                "title2": "Crear una fila de tabla básica",
                "paragraph2": "Usa <tr> dentro de una <table> para crear una fila, agregando <th> o <td> para las celdas.",
                "paragraph2a": "Una tabla simple puede tener un <tr> para encabezados y <tr> adicionales para datos.",
                "paragraph2b": "Asegúrate de que cada <tr> contenga el mismo número de celdas para uniformidad.",
                "list1Item1": "<tr> envuelve todas las celdas en una sola fila.",
                "list1Item2": "Usa <th> en el primer <tr> para encabezados.",
                "codeTitle1": "Ejemplo: Filas de tabla básicas",
                "title3": "Usar múltiples filas de tabla",
                "paragraph3": "Agrega varias etiquetas <tr> para construir tablas con varias filas de datos.",
                "paragraph3a": "Cada <tr> puede representar un registro único, como un evento o una venta.",
                "paragraph3b": "Un número consistente de celdas en los <tr> mantiene la alineación de la tabla.",
                "codeTitle2": "Ejemplo: Tabla de múltiples filas",
                "title4": "Filas centradas en encabezados",
                "paragraph4": "Usa <tr> con <th> para encabezados para etiquetar claramente las columnas en tablas llenas de datos.",
                "paragraph4a": "Las filas de encabezados mejoran la legibilidad, especialmente en informes o resúmenes.",
                "paragraph4b": "Coloca la fila <tr> de encabezados primero, seguida de <tr> de datos.",
                "codeTitle3": "Ejemplo: Tabla centrada en encabezados",
                "note1": "Asegúrate de que cada <tr> contenga el mismo número de celdas para evitar desalineaciones.",
                "title5": "Consejos para usar filas de tabla",
                "paragraph5": "Las filas de tabla son esenciales para organizar datos claramente en tablas HTML.",
                "paragraph5a": "Una estructura de fila adecuada mejora la accesibilidad y la comprensión del usuario.",
                "list2Item1": "Usa un <tr> para cada fila lógica de datos.",
                "list2Item2": "Mantén un número consistente de celdas en todos los <tr>."
            },
            "page3": {
                "pageTitle": "Encabezados de tabla: <th>",
                "title1": "¿Qué es la etiqueta <th>?",
                "paragraph1": "La etiqueta <th> define celdas de encabezado en una tabla HTML, generalmente usadas en la primera fila.",
                "paragraph1a": "Los encabezados proporcionan contexto para los datos de la tabla, facilitando su comprensión.",
                "paragraph1b": "A diferencia de <td>, las celdas <th> suelen estar en negrita y centradas por defecto.",
                "title2": "Crear encabezados de tabla básicos",
                "paragraph2": "Usa <th> dentro de <tr> para crear celdas de encabezado para las columnas de la tabla.",
                "paragraph2a": "Coloca las etiquetas <th> en el primer <tr> para etiquetar la estructura de la tabla.",
                "paragraph2b": "Los encabezados son cruciales para la claridad en horarios o resúmenes de datos.",
                "list1Item1": "Las etiquetas <th> se usan en la fila de encabezados.",
                "list1Item2": "Describen los datos de cada columna.",
                "codeTitle1": "Ejemplo: Encabezados de tabla básicos",
                "title3": "Encabezados en tablas de múltiples columnas",
                "paragraph3": "Usa <th> en tablas con múltiples columnas para etiquetar cada una claramente.",
                "paragraph3a": "Cada <th> corresponde a una columna, alineada con las celdas <td> debajo.",
                "paragraph3b": "Este enfoque es ideal para tablas financieras o de inventario.",
                "codeTitle2": "Ejemplo: Encabezados de múltiples columnas",
                "title4": "Encabezados con accesibilidad",
                "paragraph4": "Agrega el atributo scope a las etiquetas <th> para mejorar la accesibilidad de la tabla.",
                "paragraph4a": "scope='col' indica que el encabezado se aplica a una columna.",
                "paragraph4b": "Esto ayuda a los lectores de pantalla a interpretar la tabla correctamente.",
                "codeTitle3": "Ejemplo: Encabezados accesibles",
                "note1": "Siempre usa <th> para encabezados para garantizar tablas semánticas y accesibles.",
                "title5": "Consejos para usar encabezados de tabla",
                "paragraph5": "Los encabezados de tabla mejoran la claridad de los datos y la accesibilidad en tablas HTML.",
                "paragraph5a": "Los encabezados claros ayudan a los usuarios y tecnologías de asistencia a entender el contenido de la tabla.",
                "list2Item1": "Coloca <th> en la primera fila para encabezados de columna.",
                "list2Item2": "Usa el atributo scope para accesibilidad."
            },
            "page4": {
                "pageTitle": "Datos de tabla: <td>",
                "title1": "¿Qué es la etiqueta <td>?",
                "paragraph1": "La etiqueta <td> define celdas de datos en una tabla HTML, conteniendo el contenido de cada celda.",
                "paragraph1a": "Usada dentro de <tr>, las etiquetas <td> almacenan datos como texto, números o fechas.",
                "paragraph1b": "A diferencia de <th>, las celdas <td> no están en negrita ni centradas por defecto.",
                "title2": "Crear datos de tabla básicos",
                "paragraph2": "Coloca etiquetas <td> dentro de <tr> para agregar celdas de datos después de la fila de encabezados.",
                "paragraph2a": "Cada <td> representa una pieza de datos en una fila de la tabla.",
                "paragraph2b": "Las tablas simples usan <td> para listas o registros básicos, como ítems de compra.",
                "list1Item1": "Las etiquetas <td> contienen el contenido de datos de la tabla.",
                "list1Item2": "Siguen a los encabezados <th> en las filas de datos.",
                "codeTitle1": "Ejemplo: Datos de tabla básicos",
                "title3": "Datos en tablas de múltiples filas",
                "paragraph3": "Usa <td> en múltiples etiquetas <tr> para llenar tablas con varias filas de datos.",
                "paragraph3a": "Cada <td> se alinea con una columna especificada por la fila de encabezados.",
                "paragraph3b": "Esto es útil para registros detallados, como historial de pedidos o registros.",
                "codeTitle2": "Ejemplo: Datos de múltiples filas",
                "title4": "Datos con contenido mixto",
                "paragraph4": "La etiqueta <td> puede contener diversos tipos de contenido, como texto, fechas o números.",
                "paragraph4a": "El contenido mixto en <td> soporta tablas para seguimiento de proyectos o informes.",
                "paragraph4b": "Asegúrate de que el contenido de <td> sea claro y esté relacionado con el encabezado de la columna.",
                "codeTitle3": "Ejemplo: Datos con contenido mixto",
                "note1": "Mantén el contenido de <td> conciso para preservar la legibilidad de la tabla.",
                "title5": "Consejos para usar datos de tabla",
                "paragraph5": "Las celdas de datos de tabla son clave para presentar información claramente en tablas HTML.",
                "paragraph5a": "Las etiquetas <td> bien estructuradas mejoran la usabilidad y claridad de la tabla.",
                "list2Item1": "Alinea las celdas <td> con los encabezados <th> correspondientes.",
                "list2Item2": "Usa datos breves y precisos en las etiquetas <td>."
            },
            "page5": {
                "pageTitle": "Atributos de tabla: colspan, rowspan",
                "title1": "¿Qué son colspan y rowspan?",
                "paragraph1": "Los atributos colspan y rowspan permiten que las celdas se extiendan a través de múltiples columnas o filas en una tabla HTML.",
                "paragraph1a": "Usados con <td> o <th>, combinan celdas para crear diseños de tabla complejos.",
                "paragraph1b": "Estos atributos son útiles para resumir datos o agrupar contenido relacionado.",
                "title2": "Usar colspan para extender columnas",
                "paragraph2": "El atributo colspan hace que una celda se extienda a través de múltiples columnas en una fila.",
                "paragraph2a": "Configura colspan al número de columnas que debe abarcar la celda.",
                "paragraph2b": "Esto es ideal para encabezados o celdas de resumen que se aplican a múltiples columnas.",
                "list1Item1": "colspan combina celdas horizontalmente.",
                "list1Item2": "Úsalo en <td> o <th> dentro de <tr>.",
                "codeTitle1": "Ejemplo: Colspan básico",
                "title3": "Usar rowspan para extender filas",
                "paragraph3": "El atributo rowspan permite que una celda se extienda a través de múltiples filas en una tabla.",
                "paragraph3a": "Configura rowspan al número de filas que debe ocupar la celda.",
                "paragraph3b": "Esto es útil para agrupar datos, como una categoría que abarca varias entradas.",
                "codeTitle2": "Ejemplo: Rowspan básico",
                "title4": "Combinar colspan y rowspan",
                "paragraph4": "Usa tanto colspan como rowspan en una tabla para diseños avanzados.",
                "paragraph4a": "Combinarlos crea celdas que abarcan filas y columnas.",
                "paragraph4b": "Esto es común en resúmenes o diagramas organizativos.",
                "codeTitle3": "Ejemplo: Combinación de colspan y rowspan",
                "note1": "Planifica cuidadosamente colspan y rowspan para evitar desalineaciones en la tabla.",
                "title5": "Consejos para usar atributos de tabla",
                "paragraph5": "colspan y rowspan mejoran la flexibilidad de la tabla, pero requieren una planificación precisa.",
                "paragraph5a": "Prueba las tablas para garantizar claridad y accesibilidad para todos los usuarios.",
                "list2Item1": "Usa colspan y rowspan con moderación para mantener la claridad.",
                "list2Item2": "Verifica el conteo de celdas para preservar la estructura de la tabla."
            },
            "page6": {
                "pageTitle": "Agregar leyendas: <caption>",
                "title1": "¿Qué es la etiqueta <caption>?",
                "paragraph1": "La etiqueta <caption> agrega un título o descripción a una tabla HTML, colocada justo después de la etiqueta <table>.",
                "paragraph1a": "Proporciona contexto, resumiendo el propósito o contenido de la tabla para una mejor comprensión.",
                "paragraph1b": "Las leyendas mejoran la accesibilidad, ayudando a los lectores de pantalla a transmitir la intención de la tabla.",
                "title2": "Crear una leyenda básica",
                "paragraph2": "Usa <caption> para agregar un título simple encima de la tabla, describiendo su contenido.",
                "paragraph2a": "Colócalo como el primer elemento hijo de <table> para una estructura adecuada.",
                "paragraph2b": "Las leyendas básicas son ideales para tablas pequeñas, como horarios o planes.",
                "list1Item1": "<caption> es el primer elemento dentro de <table>.",
                "list1Item2": "Describe el propósito de la tabla.",
                "codeTitle1": "Ejemplo: Leyenda básica",
                "title3": "Usar leyendas descriptivas",
                "paragraph3": "Escribe leyendas detalladas para aclarar tablas complejas, como las que contienen datos financieros.",
                "paragraph3a": "Las leyendas descriptivas ayudan a los usuarios a captar rápidamente el enfoque de la tabla.",
                "paragraph3b": "Esto es útil para informes o conjuntos de datos de múltiples columnas.",
                "codeTitle2": "Ejemplo: Leyenda descriptiva",
                "title4": "Leyendas con tablas complejas",
                "paragraph4": "Usa leyendas para resumir tablas complejas, como métricas de rendimiento o encuestas.",
                "paragraph4a": "Una leyenda clara conecta diversos puntos de datos en la tabla.",
                "paragraph4b": "Asegúrate de que las leyendas sean concisas e informativas para mayor claridad.",
                "codeTitle3": "Ejemplo: Leyenda con tabla compleja",
                "note1": "Siempre incluye <caption> para accesibilidad y para mejorar la claridad de la tabla.",
                "title5": "Consejos para usar leyendas",
                "paragraph5": "Las leyendas de tabla mejoran la usabilidad y accesibilidad en tablas HTML.",
                "paragraph5a": "Las leyendas efectivas hacen que las tablas sean más comprensibles para todos los usuarios.",
                "list2Item1": "Mantén las leyendas cortas y descriptivas.",
                "list2Item2": "Coloca <caption> inmediatamente después de <table>."
            }
        },
        "chapter8": {
            "title": "Capítulo 8: Formularios y Elementos de Entrada",
            "page1": {
                "pageTitle": "Estructura básica del formulario",
                "title1": "¿Qué es la etiqueta <form>?",
                "paragraph1": "La etiqueta <form> crea un formulario interactivo en HTML, permitiendo a los usuarios ingresar y enviar datos.",
                "paragraph1a": "Usa atributos como action y method para especificar dónde y cómo se envían los datos.",
                "paragraph1b": "Los formularios son esenciales para interacciones de usuarios, como iniciar sesión o enviar comentarios.",
                "title2": "Construir un formulario simple",
                "paragraph2": "Usa <form> con etiquetas <input> y <label> para crear un formulario de entrada básico.",
                "paragraph2a": "El atributo action especifica la URL para procesar los datos del formulario.",
                "paragraph2b": "El atributo method, como POST, define cómo se envían los datos.",
                "list1Item1": "Las etiquetas <label> mejoran la accesibilidad al vincularse con las entradas.",
                "list1Item2": "<input type='submit'> crea un botón de envío.",
                "codeTitle1": "Ejemplo: Formulario simple",
                "title3": "Formularios con múltiples entradas",
                "paragraph3": "Agrega múltiples elementos <input> dentro de <form> para recolectar datos más complejos.",
                "paragraph3a": "Cada entrada debe tener un id y name únicos para un procesamiento correcto de datos.",
                "paragraph3b": "Esto es útil para formularios de inicio de sesión o encuestas que requieren diversos campos.",
                "codeTitle2": "Ejemplo: Formulario de inicio de sesión",
                "title4": "Formularios con diferentes tipos de entrada",
                "paragraph4": "Usa diversos tipos de <input>, como email o textarea, para satisfacer diferentes necesidades del formulario.",
                "paragraph4a": "El elemento textarea permite la entrada de texto multilínea, ideal para comentarios.",
                "paragraph4b": "Los diferentes tipos de entrada mejoran la experiencia del usuario y la validación de datos.",
                "codeTitle3": "Ejemplo: Formulario de comentarios",
                "note1": "Siempre incluye etiquetas para accesibilidad y orientación clara del usuario.",
                "title5": "Consejos para crear formularios",
                "paragraph5": "Los formularios son una parte clave de las páginas web interactivas, requieren un diseño cuidadoso.",
                "paragraph5a": "Una estructura clara y etiquetas mejoran la usabilidad y accesibilidad.",
                "list2Item1": "Usa los atributos action y method apropiadamente.",
                "list2Item2": "Vincula cada entrada con una etiqueta descriptiva."
            },
            "page2": {
                "pageTitle": "Tipos de entrada",
                "title1": "¿Qué son los tipos de entrada?",
                "paragraph1": "Los tipos de entrada definen el tipo de datos que los usuarios pueden ingresar en los elementos <input> de un formulario HTML.",
                "paragraph1a": "El atributo type, como text o email, controla el comportamiento y la validación de la entrada.",
                "paragraph1b": "Los diferentes tipos de entrada mejoran la experiencia del usuario y aseguran la recolección de datos correctos.",
                "title2": "Entradas de texto y correo electrónico",
                "paragraph2": "Las entradas de texto y correo electrónico recogen texto libre y direcciones de correo, respectivamente.",
                "paragraph2a": "Las entradas de texto son versátiles, usadas para nombres o nombres de usuario, mientras que las entradas de correo validan el formato de correo.",
                "paragraph2b": "Son comunes en formularios de registro o contacto.",
                "list1Item1": "type='text' permite la entrada de texto general.",
                "list1Item2": "type='email' impone la validación del formato de correo electrónico.",
                "codeTitle1": "Ejemplo: Entradas de texto y correo electrónico",
                "title3": "Entradas de casillas de verificación",
                "paragraph3": "El tipo de entrada de casilla de verificación permite a los usuarios seleccionar múltiples opciones de un conjunto.",
                "paragraph3a": "Las casillas de verificación son ideales para preferencias o preguntas de opción múltiple en formularios.",
                "paragraph3b": "Cada casilla de verificación tiene un id único y un name compartido para agrupar datos.",
                "codeTitle2": "Ejemplo: Entradas de casillas de verificación",
                "title4": "Entradas de botones de radio",
                "paragraph4": "El tipo de entrada de botón de radio permite a los usuarios seleccionar una opción de un conjunto.",
                "paragraph4a": "Los botones de radio se usan para opciones exclusivas, como respuestas de encuestas.",
                "paragraph4b": "Todas las entradas de botones de radio en un grupo comparten el mismo atributo name.",
                "codeTitle3": "Ejemplo: Entradas de botones de radio",
                "note1": "Elige tipos de entrada que coincidan con los datos que necesitas recolectar para una mejor validación.",
                "title5": "Consejos para usar tipos de entrada",
                "paragraph5": "Seleccionar el tipo de entrada adecuado mejora la funcionalidad del formulario y la interacción del usuario.",
                "paragraph5a": "Las etiquetas claras y los tipos apropiados aseguran el envío de datos precisos.",
                "list2Item1": "Usa tipos de entrada específicos para la validación de datos.",
                "list2Item2": "Agrupa casillas de verificación o botones de radio relacionados con el mismo name."
            },
            "page3": {
                "pageTitle": "Etiquetar elementos de formulario con <label>",
                "title1": "¿Qué es la etiqueta <label>?",
                "paragraph1": "La etiqueta <label> asocia texto descriptivo con un elemento de formulario, mejorando la usabilidad y accesibilidad.",
                "paragraph1a": "Usando el atributo for, se vincula con el id de la entrada, facilitando la navegación en formularios.",
                "paragraph1b": "Las etiquetas aseguran que los lectores de pantalla y los usuarios comprendan el propósito de cada entrada.",
                "title2": "Etiquetado básico con entradas de texto",
                "paragraph2": "Usa <label> con entradas de texto para describir claramente campos como nombres o correos electrónicos.",
                "paragraph2a": "El atributo for debe coincidir con el id de la entrada para una vinculación adecuada.",
                "paragraph2b": "Esto es común en formularios de contacto o registro.",
                "list1Item1": "El atributo for vincula la etiqueta <label> con el id de la entrada.",
                "list1Item2": "Las etiquetas mejoran la claridad del formulario.",
                "codeTitle1": "Ejemplo: Formulario de etiquetado básico",
                "title3": "Etiquetar elementos Select y Textarea",
                "paragraph3": "Las etiquetas funcionan con <select> y <textarea> para describir menús desplegables o campos de comentarios.",
                "paragraph3a": "Las etiquetas claras ayudan a los usuarios a entender entradas complejas en encuestas o formularios de comentarios.",
                "paragraph3b": "Asegúrate de que cada etiqueta refleje con precisión el propósito de la entrada.",
                "codeTitle2": "Ejemplo: Formulario de encuesta",
                "title4": "Etiquetar casillas de verificación y botones de radio",
                "paragraph4": "Usa <label> con casillas de verificación y botones de radio para aclarar las opciones de selección múltiple.",
                "paragraph4a": "Las etiquetas para estas entradas mejoran la accesibilidad, especialmente para lectores de pantalla.",
                "paragraph4b": "Esto es útil para registros de eventos o formularios de preferencias.",
                "codeTitle3": "Ejemplo: Formulario de registro",
                "note1": "Siempre usa etiquetas <label> para garantizar formularios accesibles y fáciles de usar.",
                "title5": "Consejos para usar etiquetas",
                "paragraph5": "Las etiquetas son esenciales para formularios HTML claros y accesibles.",
                "paragraph5a": "El etiquetado adecuado mejora la experiencia del usuario y la funcionalidad del formulario.",
                "list2Item1": "Coincide el atributo for con el id de la entrada.",
                "list2Item2": "Mantén las etiquetas concisas y descriptivas."
            },
            "page4": {
                "pageTitle": "Envío de formularios: method=\"GET\", method=\"POST\"",
                "title1": "¿Qué son los métodos de envío de formularios?",
                "paragraph1": "El atributo method en la etiqueta <form> especifica cómo se envían los datos del formulario al servidor.",
                "paragraph1a": "Los dos métodos principales son GET y POST, cada uno con comportamientos distintos.",
                "paragraph1b": "Elegir el método correcto depende del propósito del formulario y la sensibilidad de los datos.",
                "title2": "Usar method=\"GET\"",
                "paragraph2": "El método GET agrega los datos del formulario a la URL como parámetros de consulta.",
                "paragraph2a": "Es adecuado para datos no sensibles, como consultas de búsqueda, donde los datos son visibles en la URL.",
                "paragraph2b": "GET está limitado por la longitud de la URL y no debe usarse para datos grandes.",
                "list1Item1": "GET agrega datos a la URL.",
                "list1Item2": "Úsalo para solicitudes idempotentes como búsquedas.",
                "codeTitle1": "Ejemplo: Formulario con método GET",
                "title3": "Usar method=\"POST\"",
                "paragraph3": "El método POST envía los datos del formulario en el cuerpo de la solicitud HTTP, ocultándolos de la URL.",
                "paragraph3a": "Es ideal para datos sensibles o grandes, como credenciales de inicio de sesión o comentarios.",
                "paragraph3b": "POST es más seguro y no tiene límites estrictos de tamaño.",
                "codeTitle2": "Ejemplo: Formulario con método POST",
                "title4": "Combinar GET y POST en aplicaciones",
                "paragraph4": "Algunas aplicaciones usan tanto GET como POST para diferentes propósitos en la misma interfaz.",
                "paragraph4a": "Por ejemplo, GET recupera datos (como ver un perfil), mientras que POST actualiza datos (como editar un perfil).",
                "paragraph4b": "Este enfoque separa la recuperación de datos de la modificación de datos.",
                "codeTitle3": "Ejemplo: Combinación de GET y POST",
                "note1": "Usa POST para datos sensibles para proteger la privacidad del usuario.",
                "title5": "Consejos para el envío de formularios",
                "paragraph5": "Elegir el método de envío de formulario correcto mejora la seguridad y la funcionalidad.",
                "paragraph5a": "Siempre considera la sensibilidad de los datos y el propósito de la solicitud al elegir el método.",
                "list2Item1": "Usa GET para la recuperación de datos segura y visible.",
                "list2Item2": "Usa POST para el envío de datos seguro."
            },
            "page5": {
                "pageTitle": "Agregar marcadores de posición a los campos de entrada",
                "title1": "¿Qué son los marcadores de posición?",
                "paragraph1": "El atributo placeholder en HTML proporciona un texto de sugerencia en los campos <input> o <textarea>.",
                "paragraph1a": "Muestra un texto temporal que desaparece cuando el usuario comienza a escribir.",
                "paragraph1b": "Los marcadores de posición guían a los usuarios sobre la entrada esperada sin abarrotar el formulario.",
                "title2": "Usar marcadores de posición en entradas simples",
                "paragraph2": "Agrega placeholder a elementos <input> como texto o correo electrónico para sugerir el formato de entrada.",
                "paragraph2a": "Por ejemplo, un campo de nombre podría mostrar 'Ingresa tu nombre' como marcador.",
                "paragraph2b": "Esto es útil para formularios de contacto o entradas de un solo campo.",
                "list1Item1": "El texto del marcador debe ser breve y claro.",
                "list1Item2": "Úsalo para tipos de entrada basados en texto.",
                "codeTitle1": "Ejemplo: Formulario con marcador básico",
                "title3": "Marcadores de posición en formularios complejos",
                "paragraph3": "Usa marcadores en formularios con múltiples entradas para aclarar el propósito de cada campo.",
                "paragraph3a": "Por ejemplo, un campo de correo podría mostrar 'tunombre@ejemplo.com'.",
                "paragraph3b": "Esto mejora la usabilidad en formularios de registro o inicio de sesión.",
                "codeTitle2": "Ejemplo: Formulario con múltiples marcadores",
                "title4": "Marcadores de posición con Textarea",
                "paragraph4": "El atributo placeholder también funciona con <textarea> para entradas multilínea.",
                "paragraph4a": "Ideal para formularios de comentarios, sugiere contenido como 'Comparte tus comentarios'.",
                "paragraph4b": "Los marcadores en textarea guían a los usuarios sin reemplazar las etiquetas.",
                "codeTitle3": "Ejemplo: Marcador con Textarea",
                "note1": "Usa marcadores de posición como sugerencias, no como reemplazo de las etiquetas <label>.",
                "title5": "Consejos para usar marcadores de posición",
                "paragraph5": "Los marcadores de posición mejoran la usabilidad del formulario cuando se usan sabiamente.",
                "paragraph5a": "Combínalos con etiquetas para mayor claridad y accesibilidad.",
                "list2Item1": "Mantén el texto de los marcadores breve y descriptivo.",
                "list2Item2": "Evita depender solo de los marcadores para las instrucciones."
            },
            "page6": {
                "pageTitle": "Atributos de validación básica de formularios (required, pattern)",
                "title1": "¿Qué son los atributos de validación de formularios?",
                "paragraph1": "Los atributos de validación de formularios HTML aseguran que la entrada del usuario cumpla con los requisitos específicos antes del envío.",
                "paragraph1a": "Atributos como required y pattern permiten la validación del lado del cliente sin JavaScript.",
                "paragraph1b": "Mejoran la experiencia del usuario al detectar errores temprano.",
                "title2": "Usar el atributo required",
                "paragraph2": "El atributo required obliga a que un campo se complete antes de enviar el formulario.",
                "paragraph2a": "Funciona con elementos <input>, <select> y <textarea>.",
                "paragraph2b": "Los navegadores muestran un mensaje de error predeterminado si el campo está vacío.",
                "list1Item1": "required asegura que los campos no estén vacíos.",
                "list1Item2": "Se aplica a la mayoría de los tipos de entrada.",
                "codeTitle1": "Ejemplo: Formulario con campo requerido",
                "title3": "Usar el atributo pattern",
                "paragraph3": "El atributo pattern especifica una expresión regular para validar la entrada.",
                "paragraph3a": "Asegura que la entrada coincida con un formato específico, como números de teléfono o nombres de usuario.",
                "paragraph3b": "A menudo se usa con required para una validación más estricta.",
                "codeTitle2": "Ejemplo: Formulario de validación de patrón",
                "title4": "Combinar required y pattern",
                "paragraph4": "Usa required y pattern juntos para una validación robusta del formulario.",
                "paragraph4a": "Esto asegura que los campos estén completos y formateados correctamente.",
                "paragraph4b": "Ideal para formularios de comentarios o registro que requieren datos precisos.",
                "codeTitle3": "Ejemplo: Formulario de validación combinada",
                "note1": "Siempre prueba los atributos de validación para asegurarte de que cumplan con las necesidades del formulario.",
                "title5": "Consejos para la validación de formularios",
                "paragraph5": "Los atributos de validación mejoran la fiabilidad del formulario y la experiencia del usuario.",
                "paragraph5a": "Combínalos con etiquetas y marcadores claros para obtener los mejores resultados.",
                "list2Item1": "Usa required para campos obligatorios.",
                "list2Item2": "Prueba el regex del patrón para mayor precisión."
            }
        },
        "chapter9": {
            "title": "Capítulo Nueve: HTML Semántico",
            "page1": {
                "pageTitle": "La importancia del HTML semántico",
                "title1": "¿Qué es el HTML semántico?",
                "paragraph1": "El HTML semántico implica usar etiquetas HTML para transmitir el significado o propósito del contenido, en lugar de solo su apariencia. Las etiquetas semánticas definen su significado de manera legible tanto para humanos como para máquinas.",
                "paragraph1a": "El uso de HTML semántico mejora la accesibilidad, la optimización para motores de búsqueda (SEO) y el mantenimiento del sitio. Ayuda a los motores de búsqueda a entender la estructura y el contenido de la página, lo que puede mejorar el posicionamiento.",
                "paragraph1b": "Ejemplos de elementos semánticos incluyen <header>, <nav>, <main>, <article>, <section> y <footer>. Estas etiquetas proporcionan contexto al contenido que contienen.",
                "title2": "¿Por qué usar HTML semántico?",
                "paragraph2": "El HTML semántico hace que el código sea más legible y fácil de mantener. También asegura que tu sitio web sea accesible para personas con discapacidades que dependen de lectores de pantalla.",
                "paragraph2a": "Al usar elementos semánticos, creas una estructura lógica que es fácil de entender y editar para los desarrolladores. Esto es especialmente importante en proyectos colaborativos.",
                "list1Item1": "Mejora la accesibilidad para lectores de pantalla y tecnologías de asistencia.",
                "list1Item2": "Mejora el SEO al proporcionar una estructura de contenido clara.",
                "codeTitle1": "Ejemplo: Estructura de HTML semántico",
                "title3": "HTML semántico vs HTML no semántico",
                "paragraph3": "El HTML no semántico usa etiquetas genéricas como <div> y <span> que no transmiten un significado específico del contenido. Esto puede dificultar la comprensión del código y reducir la accesibilidad.",
                "paragraph3a": "El siguiente ejemplo muestra una versión no semántica de la misma estructura de página usando etiquetas <div>, lo que reduce la claridad y la accesibilidad.",
                "codeTitle2": "Ejemplo: Estructura de HTML no semántico",
                "note1": "Prefiere siempre elementos semánticos sobre etiquetas genéricas para mejorar la accesibilidad, el SEO y hacer el código más fácil de mantener.",
                "title4": "Mejores prácticas para HTML semántico",
                "paragraph4": "Para aprovechar al máximo el HTML semántico, usa la etiqueta adecuada para cada pieza de contenido y evita el uso excesivo de etiquetas genéricas como <div>.",
                "paragraph4a": "Asegúrate de que la estructura de tu HTML refleje lógicamente la jerarquía del contenido. Esto ayuda tanto a los usuarios como a los motores de búsqueda a navegar por tu sitio de manera efectiva.",
                "list2Item1": "Usa etiquetas semánticas como <header>, <main> y <footer> para definir regiones de la página.",
                "list2Item2": "Evita usar <div> para todo; úsalo solo para estilización cuando no haya una etiqueta semántica adecuada."
            },
            "page2": {
                "pageTitle": "Elementos semánticos",
                "title1": "Introducción a los elementos semánticos",
                "paragraph1": "Los elementos semánticos en HTML son etiquetas que definen claramente su significado y propósito para los desarrolladores y navegadores. Proporcionan una forma de representar diferentes partes de una página web de manera ordenada.",
                "paragraph1a": "Estos elementos facilitan la creación de una estructura de documento significativa, ayudando a los motores de búsqueda, lectores de pantalla y desarrolladores a entender el contenido.",
                "paragraph1b": "Los elementos semánticos comunes incluyen <header>, <nav>, <main>, <section>, <article>, <aside> y <footer>. Cada uno juega un papel específico en la organización del contenido.",
                "title2": "Elementos semánticos principales",
                "paragraph2": "Los elementos semánticos están diseñados para representar tipos específicos de contenido. Por ejemplo, <header> define contenido introductorio, mientras que <nav> se usa para enlaces de navegación.",
                "paragraph2a": "El uso correcto de estos elementos mejora la accesibilidad y el SEO de tu sitio web, ya que proporcionan contexto al contenido que contienen.",
                "list1Item1": "<section>: Agrupa contenido relacionado, como una sección o tema.",
                "list1Item2": "<article>: Representa contenido independiente y autónomo, como una entrada de blog.",
                "codeTitle1": "Ejemplo: Uso de elementos semánticos comunes",
                "title3": "Elementos semánticos especializados",
                "paragraph3": "Algunos elementos semánticos, como <figure> y <figcaption>, se utilizan para fines específicos, como imágenes o diagramas.",
                "paragraph3a": "Estos elementos mejoran la accesibilidad y la claridad al vincular descripciones con medios, beneficiando tanto a los usuarios como a las tecnologías de asistencia.",
                "codeTitle2": "Ejemplo: Uso de <figure> y <figcaption>",
                "note1": "Elige elementos semánticos que reflejen con precisión el propósito del contenido para mejorar la experiencia del usuario y la legibilidad por máquinas.",
                "title4": "¿Cuándo usar elementos semánticos?",
                "paragraph4": "Usa elementos semánticos siempre que sea posible para definir la estructura y el significado del contenido. Evita depender de etiquetas genéricas como <div>.",
                "paragraph4a": "Los elementos semánticos deben usarse para reflejar la jerarquía y las relaciones del contenido, haciendo que el HTML sea más accesible.",
                "list2Item1": "Usa <aside> para contenido relacionado indirectamente con el contenido principal, como barras laterales.",
                "list2Item2": "Usa cada elemento semántico en su contexto previsto para mantener la claridad."
            },
            "page3": {
                "pageTitle": "Contenedores no semánticos <div> y <span>",
                "title1": "¿Qué son los elementos <div> y <span>?",
                "paragraph1": "Los elementos <div> y <span> son etiquetas no semánticas en HTML utilizadas principalmente para agrupar contenido y aplicar estilos. A diferencia de los elementos semánticos, no aportan un significado específico al contenido que contienen.",
                "paragraph1a": "<div> es un elemento de nivel de bloque usado comúnmente para agrupar secciones de contenido con fines de diseño. <span> es un elemento en línea usado para aplicar estilos o scripts a fragmentos pequeños de texto dentro de un elemento más grande.",
                "paragraph1b": "Estos elementos son necesarios cuando las etiquetas semánticas no son adecuadas, pero deben usarse con cuidado para no reducir la accesibilidad ni la claridad del HTML.",
                "title2": "Uso de <div> para diseños",
                "paragraph2": "El elemento <div> se usa ampliamente para crear contenedores de diseño, especialmente cuando se combina con CSS o JavaScript.",
                "paragraph2a": "Es ideal para agrupar contenido cuando no hay un elemento semántico adecuado, como al crear diseños complejos con CSS Grid o Flexbox.",
                "list1Item1": "Usa <div> para crear contenedores de diseño con fines de estilo.",
                "list1Item2": "Evita usar <div> cuando un elemento semántico como <header> o <section> sea más apropiado.",
                "codeTitle1": "Ejemplo: Uso de <div> para diseño",
                "title3": "Uso de <span> para contenido en línea",
                "paragraph3": "El elemento <span> se usa para aplicar estilos o scripts a fragmentos específicos de texto dentro de un elemento más grande, como un párrafo o un encabezado.",
                "paragraph3a": "Es particularmente útil para resaltar, estilizar o vincular escuchadores de eventos a pequeños fragmentos de contenido sin afectar la estructura circundante.",
                "codeTitle2": "Ejemplo: Uso de <span> para estilo en línea",
                "note1": "Usa <div> y <span> solo cuando los elementos semánticos no sean adecuados, ya que el uso excesivo puede hacer que el HTML sea menos accesible y más difícil de mantener.",
                "title4": "Mejores prácticas para elementos no semánticos",
                "paragraph4": "Para garantizar un código limpio y accesible, limita el uso de <div> y <span> a casos donde el estilo o los scripts sean el objetivo principal y no haya una alternativa semántica.",
                "paragraph4a": "Considera siempre primero los elementos semánticos para asegurar que el HTML comunique efectivamente la estructura y el propósito del contenido.",
                "list2Item1": "Usa <div> para diseños estructurales cuando las etiquetas semánticas no sean adecuadas.",
                "list2Item2": "Usa <span> para estilos o scripts en línea, pero prefiere etiquetas semánticas como <em> o <strong> para énfasis."
            },
            "page4": {
                "pageTitle": "Elementos <blockquote> y <cite> para citas de texto",
                "title1": "Introducción a los elementos <blockquote> y <cite>",
                "paragraph1": "Los elementos <blockquote> y <cite> son etiquetas semánticas de HTML usadas para representar contenido citado y su fuente. Estructuran las citas de manera significativa para usuarios y navegadores.",
                "paragraph1a": "<blockquote> es un elemento de nivel de bloque que indica una sección de contenido citado de otra fuente. <cite> se usa para especificar la fuente o el autor de la cita.",
                "paragraph1b": "Estos elementos mejoran la accesibilidad al marcar claramente el contenido citado, facilitando a los lectores de pantalla transmitir el contexto.",
                "title2": "Uso de <blockquote> para citas",
                "paragraph2": "El elemento <blockquote> se usa para presentar citas extensas, que los navegadores suelen mostrar con sangría por defecto. Puede contener párrafos, listas u otros elementos.",
                "paragraph2a": "Es comúnmente usado para citas de libros, discursos o artículos, y puede incluir el elemento <cite> para documentar la fuente.",
                "list1Item1": "Usa <blockquote> para citas extensas que deban destacarse visualmente.",
                "list1Item2": "Incluye <cite> dentro o después de <blockquote> para documentar la fuente.",
                "codeTitle1": "Ejemplo: Uso básico de <blockquote> y <cite>",
                "title3": "Uso del atributo cite",
                "paragraph3": "El elemento <blockquote> puede incluir el atributo cite para proporcionar la fuente de la cita como una URL o referencia, lo que añade valor semántico.",
                "paragraph3a": "El atributo cite no es visible para los usuarios, pero proporciona metadatos que pueden ser utilizados por navegadores o tecnologías de asistencia.",
                "codeTitle2": "Ejemplo: <blockquote> con atributo cite",
                "note1": "Usa siempre <blockquote> para citas en lugar de elementos genéricos como <div>, y añade <cite> o el atributo cite para una documentación adecuada.",
                "title4": "Mejores prácticas para citas",
                "paragraph4": "Para garantizar claridad y accesibilidad, usa <blockquote> y <cite> adecuadamente para marcar el contenido citado y su fuente, evitando alternativas no semánticas.",
                "paragraph4a": "Asegúrate de que las citas sean precisas y que la fuente esté claramente documentada, manteniendo la credibilidad y la usabilidad.",
                "list2Item1": "Usa el atributo cite en <blockquote> para vincular a la fuente original siempre que sea posible.",
                "list2Item2": "Usa <cite> fuera de <blockquote> para documentación independiente o dentro para referencias en línea."
            }
        },
        "chapter10": {
            "title": "Capítulo Diez: Características de HTML5",
            "page1": {
                "pageTitle": "Nuevos elementos semánticos en HTML5",
                "title1": "Introducción a los elementos semánticos de HTML5",
                "paragraph1": "HTML5 introdujo una serie de nuevos elementos semánticos para proporcionar una mejor estructura y significado al contenido web, reemplazando las etiquetas genéricas <div> utilizadas en versiones anteriores de HTML.",
                "paragraph1a": "Estos elementos mejoran la accesibilidad, la optimización para motores de búsqueda y la legibilidad del código, ya que definen claramente el rol de las diferentes secciones de una página web.",
                "paragraph1b": "Los elementos semánticos clave de HTML5 incluyen <header>, <nav>, <main>, <section>, <article>, <aside> y <footer>, entre otros.",
                "title2": "Elementos semánticos comunes de HTML5",
                "paragraph2": "Los elementos semánticos de HTML5 como <header>, <nav> y <main> definen las secciones principales de una página web, facilitando a los desarrolladores y navegadores entender la jerarquía del contenido.",
                "paragraph2a": "Por ejemplo, <section> agrupa contenido relacionado, mientras que <article> representa contenido independiente, como una entrada de blog o una noticia.",
                "list1Item1": "<header>: Define el contenido introductorio o herramientas de navegación al inicio de una página o sección.",
                "list1Item2": "<aside>: Representa contenido relacionado indirectamente con el contenido principal, como barras laterales o avisos.",
                "codeTitle1": "Ejemplo: Elementos semánticos comunes de HTML5",
                "title3": "Elementos semánticos interactivos",
                "paragraph3": "HTML5 también introdujo elementos semánticos interactivos como <details> y <summary>, que permiten a los usuarios alternar la visibilidad del contenido, mejorando la experiencia del usuario.",
                "paragraph3a": "Estos elementos son particularmente útiles para preguntas frecuentes, listas colapsables o cualquier contenido que se beneficie de una interfaz expandible.",
                "codeTitle2": "Ejemplo: Uso de <details> y <summary>",
                "note1": "Usa elementos semánticos de HTML5 en lugar de etiquetas <div> genéricas siempre que sea posible para mejorar la accesibilidad y el mantenimiento.",
                "title4": "Mejores prácticas para la semántica de HTML5",
                "paragraph4": "Para maximizar los beneficios de los elementos semánticos de HTML5, úsalos según su propósito y evita mezclarlos innecesariamente con elementos no semánticos.",
                "paragraph4a": "Asegúrate de que cada elemento refleje el rol del contenido en la estructura de la página, mejorando la accesibilidad y el SEO.",
                "list2Item1": "Usa <main> para contener el contenido principal de la página, excluyendo encabezados y pies de página.",
                "list2Item2": "Combina <details> y <summary> para organizar contenido interactivo y mejorar la usabilidad."
            },
            "page2": {
                "pageTitle": "Elemento <canvas> para dibujo",
                "title1": "Introducción al elemento <canvas>",
                "paragraph1": "Introducido en HTML5, el elemento <canvas> proporciona un área rectangular en una página web donde se pueden dibujar gráficos, animaciones y contenido interactivo usando JavaScript. Actúa como un lienzo en blanco para dibujar formas, imágenes y texto de manera dinámica.",
                "paragraph1a": "A diferencia de otros elementos HTML, <canvas> no tiene contenido ni estilo propio; depende de JavaScript para generar y renderizar gráficos, lo que lo hace una herramienta poderosa para juegos, visualización de datos y aplicaciones creativas.",
                "paragraph1b": "El elemento <canvas> requiere un ancho y alto, que se pueden establecer mediante HTML o CSS, aunque se prefieren los atributos HTML para definir el área de dibujo y evitar problemas de escala.",
                "paragraph1c": "Este elemento es ampliamente soportado en navegadores modernos y es una parte integral de muchas aplicaciones web, desde gráficos simples hasta juegos complejos.",
                "title2": "Configuración del elemento <canvas>",
                "paragraph2": "Para usar el elemento <canvas>, debe agregarse en HTML con un atributo id y definirse sus dimensiones usando los atributos de ancho y alto. Estos atributos determinan la resolución de la superficie de dibujo.",
                "paragraph2a": "Si no se especifican dimensiones, el lienzo adopta por defecto 300 píxeles de ancho y 150 píxeles de alto. Dimensionar con CSS puede causar estiramiento del lienzo, distorsionando los gráficos, por lo que se recomiendan los atributos HTML.",
                "paragraph2b": "El contenido dentro del elemento <canvas> actúa como contenido de respaldo, mostrado cuando el navegador no soporta el elemento canvas, asegurando accesibilidad en navegadores antiguos.",
                "list1Item1": "Especifica siempre los atributos de ancho y alto en HTML para definir claramente la resolución del lienzo.",
                "list1Item2": "Incluye un atributo id para referenciar fácilmente en JavaScript.",
                "list1Item3": "Proporciona contenido de respaldo significativo para navegadores que no soporten <canvas>.",
                "codeTitle1": "Ejemplo: Configuración básica de <canvas>",
                "title3": "Proporcionar contenido de respaldo",
                "paragraph3": "El elemento <canvas> permite incluir contenido de respaldo, como texto o imágenes, que se muestra cuando el navegador no soporta el elemento canvas. Esto asegura una degradación elegante en navegadores antiguos.",
                "paragraph3a": "El contenido de respaldo puede incluir un mensaje que anime a los usuarios a actualizar su navegador o una imagen estática que transmita información similar al dibujo previsto.",
                "paragraph3b": "Esta práctica garantiza que siempre haya algún tipo de contenido disponible, incluso en entornos no soportados, mejorando la accesibilidad y la experiencia del usuario.",
                "codeTitle2": "Ejemplo: <canvas> con contenido de respaldo",
                "title4": "Mejorar la accesibilidad de <canvas>",
                "paragraph4": "Dado que el contenido de <canvas> se genera dinámicamente y no es inherentemente accesible, deben añadirse atributos de accesibilidad como aria-label o role para describir el propósito del lienzo a las tecnologías de asistencia.",
                "paragraph4a": "Por ejemplo, un lienzo usado para dibujar un gráfico debe incluir un atributo aria-label que describa el tipo y contenido del gráfico, y role='img' para indicar que funciona como una imagen para los lectores de pantalla.",
                "paragraph4b": "Proporcionar descripciones de texto alternativas o contenido de respaldo también asegura que los usuarios con discapacidades puedan entender el propósito del lienzo.",
                "codeTitle3": "Ejemplo: <canvas> con atributos de accesibilidad",
                "note1": "Incluye siempre contenido de respaldo y atributos de accesibilidad en los elementos <canvas> para garantizar la inclusividad y compatibilidad con todos los navegadores y tecnologías de asistencia.",
                "title5": "Mejores prácticas para el uso de <canvas>",
                "paragraph5": "Para usar el elemento <canvas> de manera efectiva, asegúrate de la compatibilidad, el rendimiento y la accesibilidad estableciendo dimensiones adecuadas, proporcionando contenido de respaldo y considerando el impacto en el rendimiento de gráficos complejos.",
                "paragraph5a": "Al planificar un proyecto basado en lienzo, considera tu audiencia objetivo y el soporte de navegadores, así como el impacto potencial de la complejidad de los gráficos en el rendimiento de renderizado.",
                "paragraph5b": "Probar el renderizado en diferentes dispositivos y navegadores es crucial para asegurar un comportamiento consistente, especialmente en dispositivos móviles donde las interacciones táctiles pueden variar.",
                "list2Item1": "Usa atributos HTML para ancho y alto para evitar problemas de escala.",
                "list2Item2": "Incluye atributos aria-label y role para accesibilidad.",
                "list2Item3": "Prueba el renderizado del lienzo en múltiples dispositivos para garantizar el rendimiento y la compatibilidad.",
                "list2Item4": "Proporciona contenido de respaldo detallado para soportar navegadores antiguos o tecnologías de asistencia."
            },
            "page3": {
                "pageTitle": "Tipos de entrada de formularios HTML5: Fecha, hora, número, rango, etc.",
                "title1": "Introducción a los tipos de entrada de formularios HTML5",
                "paragraph1": "HTML5 introdujo varios tipos de entrada nuevos para el elemento <input>, mejorando la funcionalidad de los formularios, la experiencia del usuario y reduciendo la necesidad de validación personalizada con JavaScript.",
                "paragraph1a": "Estos tipos de entrada ofrecen validación incorporada e interfaces amigables, como selectores de fecha, controles deslizantes y selectores de color, haciendo los formularios más intuitivos y accesibles.",
                "paragraph1b": "Los tipos de entrada comunes de HTML5 incluyen fecha, hora, número, rango, búsqueda, color, correo electrónico, teléfono y URL, cada uno diseñado para necesidades específicas de entrada de datos.",
                "title2": "Tipos de entrada de fecha y hora",
                "paragraph2": "Los tipos de entrada de fecha y hora (fecha, hora, fecha-hora-local, mes, semana) permiten a los usuarios seleccionar fechas y horas usando controles nativos del navegador, como un calendario o un selector de hora.",
                "paragraph2a": "Estas entradas validan automáticamente el formato de los datos ingresados, reduciendo errores y asegurando consistencia en diferentes navegadores y dispositivos.",
                "paragraph2b": "Por ejemplo, <input type='date'> ofrece una interfaz de calendario, mientras que <input type='time'> proporciona un selector de hora, mejorando la usabilidad en dispositivos móviles.",
                "list1Item1": "<input type='date'>: Permite a los usuarios seleccionar una fecha desde una interfaz de calendario.",
                "list1Item2": "<input type='time'>: Ofrece un selector de hora para elegir horas y minutos.",
                "list1Item3": "<input type='datetime-local'>: Combina la selección de fecha y hora en un solo control.",
                "codeTitle1": "Ejemplo: Entradas de fecha y hora",
                "title3": "Tipos de entrada de número y rango",
                "paragraph3": "Los tipos de entrada de número y rango están diseñados para datos numéricos, ofreciendo diferentes interfaces de usuario: número proporciona un campo de texto con controles de incremento/decremento, mientras que rango ofrece un control deslizante.",
                "paragraph3a": "Ambos tipos soportan atributos como min, max y step para controlar el rango y la precisión de los valores, asegurando la recolección de datos precisos.",
                "paragraph3b": "Estas entradas son ideales para formularios que requieren cantidades, calificaciones u otros valores numéricos, ya que simplifican la entrada y reducen errores.",
                "codeTitle2": "Ejemplo: Entradas de número y rango",
                "title4": "Otros tipos de entrada HTML5",
                "paragraph4": "Tipos de entrada adicionales de HTML5, como búsqueda, color, correo electrónico, teléfono y URL, ofrecen métodos de entrada especializados y validación, atendiendo a casos de uso específicos.",
                "paragraph4a": "<input type='search'> incluye un botón de limpieza en algunos navegadores, mientras que <input type='color'> proporciona un selector de color.",
                "paragraph4b": "Estas entradas mejoran la experiencia del usuario al alinear el método de entrada con el tipo de datos esperado, como la validación de correo electrónico para <input type='email'>.",
                "codeTitle3": "Ejemplo: Entradas de búsqueda y color",
                "note1": "Usa los tipos de entrada HTML5 para aprovechar la validación nativa del navegador y las interfaces amigables, pero siempre prueba en diferentes navegadores para asegurar un comportamiento consistente.",
                "title5": "Mejores prácticas para tipos de entrada HTML5",
                "paragraph5": "Para maximizar la efectividad de los tipos de entrada HTML5, combínalos con atributos apropiados (required, min, max, pattern, etc.) y proporciona etiquetas claras e instrucciones de texto.",
                "paragraph5a": "Asegura la accesibilidad con aria-label o elementos <label> vinculados, y ofrece mecanismos de respaldo para navegadores con soporte limitado.",
                "list2Item1": "Usa tipos de entrada específicos como fecha o número para coincidir con el formato de datos esperado.",
                "list2Item2": "Incluye atributos min, max y step en entradas de número y rango para controlar los valores válidos.",
                "list2Item3": "Agrega atributos placeholder para guiar a los usuarios sobre los formatos de entrada esperados.",
                "list2Item4": "Asegura la accesibilidad con etiquetas adecuadas y atributos ARIA para lectores de pantalla."
            },
            "page4": {
                "pageTitle": "Almacenamiento local de HTML5 (Uso de localStorage y sessionStorage)",
                "title1": "Introducción al almacenamiento local de HTML5",
                "paragraph1": "HTML5 introdujo una API de almacenamiento web que incluye localStorage y sessionStorage, permitiendo que las aplicaciones web almacenen datos en el navegador del usuario sin depender de cookies.",
                "paragraph1a": "A diferencia de las cookies, localStorage y sessionStorage ofrecen mayor capacidad de almacenamiento (normalmente 5-10 MB) y no envían datos con cada solicitud HTTP, lo que mejora el rendimiento.",
                "paragraph1b": "Estas APIs almacenan datos como pares clave-valor y son fáciles de usar, con soporte en todos los navegadores modernos, lo que las hace ideales para guardar preferencias de usuario o datos temporales de formularios.",
                "title2": "Uso de localStorage para datos persistentes",
                "paragraph2": "localStorage almacena datos indefinidamente hasta que el usuario o la aplicación lo eliminen explícitamente.",
                "paragraph2a": "Los datos se almacenan como texto, por lo que las estructuras de datos complejas deben serializarse con JSON.stringify antes de almacenarse y deserializarse con JSON.parse al recuperarse.",
                "paragraph2b": "El acceso a localStorage es sencillo a través de métodos de JavaScript como setItem(), getItem(), removeItem() y clear().",
                "list1Item1": "localStorage.setItem('key', 'value'): Almacena un valor bajo la clave especificada.",
                "list1Item2": "localStorage.getItem('key'): Recupera el valor asociado con la clave.",
                "list1Item3": "localStorage.removeItem('key'): Elimina el par de clave-valor especificado.",
                "codeTitle1": "Ejemplo: Guardar el nombre de usuario con localStorage",
                "title3": "Uso de sessionStorage para datos temporales",
                "paragraph3": "sessionStorage almacena datos solo mientras la pestaña del navegador esté abierta, lo que lo hace útil para datos temporales, como entradas de formularios.",
                "paragraph3a": "Al igual que localStorage, sessionStorage utiliza los mismos métodos (setItem(), getItem(), etc.), pero aísla los datos para la pestaña específica, evitando conflictos entre pestañas.",
                "paragraph3b": "Esto hace que sessionStorage sea ideal para escenarios de múltiples pestañas donde cada pestaña requiere su propio almacenamiento especial.",
                "codeTitle2": "Ejemplo: Guardar sessionStorage para notas temporales",
                "title4": "Gestión y limpieza del almacenamiento",
                "paragraph4": "Tanto localStorage como sessionStorage pueden gestionarse eliminando claves específicas o limpiando todos los datos. Esto es útil para restablecer preferencias de usuario o liberar espacio de almacenamiento.",
                "paragraph4a": "El método clear() elimina todos los pares clave-valor, mientras que removeItem() apunta a claves específicas. La gestión cuidadosa evita que el almacenamiento se llene demasiado.",
                "paragraph4b": "Las aplicaciones deben ofrecer opciones para que los usuarios limpien los datos almacenados, especialmente para datos sensibles a la privacidad como preferencias personales.",
                "codeTitle3": "Ejemplo: Limpieza de datos de localStorage",
                "note1": "Usa localStorage para datos persistentes y sessionStorage para datos temporales, y siempre aborda los límites de almacenamiento y la privacidad del usuario adecuadamente.",
                "title5": "Mejores prácticas para el almacenamiento web",
                "paragraph5": "Para usar localStorage y sessionStorage de manera efectiva, sigue las mejores prácticas que prioricen la seguridad, el rendimiento y el control del usuario sobre los datos almacenados.",
                "paragraph5a": "Siempre verifica el soporte del navegador, maneja errores de cuota de almacenamiento y usa bloques try-catch para gestionar excepciones al acceder al almacenamiento.",
                "paragraph5b": "Informa a los usuarios sobre el almacenamiento de datos y proporciona opciones claras para gestionar o eliminar datos, cumpliendo con regulaciones de privacidad como GDPR.",
                "list2Item1": "Serializa datos complejos con JSON antes de almacenarlos para manejar objetos o arreglos.",
                "list2Item2": "Verifica la disponibilidad de almacenamiento con un bloque try-catch para manejar errores de manera elegante.",
                "list2Item3": "Almacena solo información esencial para evitar alcanzar los límites de almacenamiento.",
                "list2Item4": "Proporciona controles de interfaz de usuario para que los usuarios limpien los datos almacenados, mejorando la privacidad."
            }
        },
        "chapter11": {
            "title": "Capítulo Once: Entidades HTML y caracteres especiales",
            "page1": {
                "pageTitle": "¿Qué son las entidades HTML?",
                "title1": "Introducción a las entidades HTML",
                "paragraph1": "Las entidades HTML son códigos especiales utilizados para representar caracteres que tienen significados especiales en HTML o que son difíciles de escribir directamente, como caracteres reservados o símbolos especiales.",
                "paragraph1a": "Las entidades se escriben con un ampersand (&) seguido de un código (nombre o número) y terminan con un punto y coma (;). Por ejemplo, < representa el signo menor que (<).",
                "paragraph1b": "Las entidades aseguran que los caracteres especiales se muestren correctamente y evitan errores de análisis en HTML, especialmente para caracteres como <, > y &.",
                "title2": "Entidades HTML comunes",
                "paragraph2": "Algunos caracteres utilizados en la estructura HTML o símbolos frecuentemente usados requieren entidades para mostrarse correctamente. Las entidades comunes incluyen aquellas para caracteres reservados y símbolos populares.",
                "paragraph2a": "Las entidades pueden escribirse con códigos nombrados (por ejemplo, © para ©) o códigos numéricos (por ejemplo, © para ©), siendo los códigos nombrados más legibles y los numéricos más compatibles.",
                "list1Item1": "< o <: Representa el signo menor que (<).",
                "list1Item2": "> o >: Representa el signo mayor que (>).",
                "list1Item3": "& o &: Representa el ampersand (&).",
                "codeTitle1": "Ejemplo: Entidades HTML comunes",
                "title3": "Símbolos e iconos especiales",
                "paragraph3": "Las entidades HTML también se utilizan para mostrar símbolos especiales que no están disponibles en teclados estándar, como símbolos de moneda, símbolos matemáticos o espacios sin ruptura.",
                "paragraph3a": "Por ejemplo,   crea un espacio sin ruptura que evita la separación de palabras, mientras que € muestra el símbolo del euro (€).",
                "codeTitle2": "Ejemplo: Símbolos especiales con entidades",
                "note1": "Usa siempre entidades HTML para caracteres reservados y símbolos especiales para garantizar una visualización correcta y evitar problemas de análisis en HTML.",
                "title4": "Mejores prácticas para usar entidades HTML",
                "paragraph4": "Para usar entidades HTML de manera efectiva, selecciona la entidad adecuada para el símbolo, prefiere entidades nombradas para legibilidad cuando sea posible, y asegura una codificación adecuada en tu documento HTML.",
                "paragraph4a": "Las entidades son importantes para evitar problemas de seguridad como la ejecución de scripts entre sitios (XSS) en contenido dinámico, como texto generado por usuarios.",
                "list2Item1": "Usa entidades nombradas (por ejemplo, ©) para legibilidad cuando sean ampliamente soportadas.",
                "list2Item2": "Usa entidades numeradas (por ejemplo, ©) para símbolos menos comunes o mayor compatibilidad.",
                "list2Item3": "Asegúrate de que tu documento use codificación UTF-8 para soportar naturalmente una amplia gama de símbolos."
            },
            "page2": {
                "pageTitle": "Entidades HTML comunes",
                "title1": "Descripción general de entidades comunes",
                "paragraph1": "Las entidades HTML son esenciales para mostrar los caracteres y símbolos especiales en el contenido web. Esta página explora las entidades más utilizadas, basándose en las introducciones introduccionadas anteriormente.",
                "paragraph1a": "Las entidades comunes incluyen aquellas que representan <, >, & y varios símbolos, asegurando que se muestran correctamente sin romper la estructura de HTML.",
                "paragraph1b": "Por ejemplo, pueden especificarse con códigos nombrados (por ejemplo, <) o con códigos numéricos (<), ambos formatos producen el mismo resultado pero difieren en legibilidad y compatibilidad.",
                "title2": "Entidades para caracteres definidos",
                "paragraph2": "En HTML, los caracteres definidos, como por ejemplo <, >, & y \", deben escaparse con entidades para mostrarse como texto y no como código.",
                "paragraph2a": "Estas entidades son fundamentales en fragmentos de código o documentación técnica para prevenir errores estructurales y asegurar que el contenido se muestre según lo previsto.",
                "list1Item1": "< o < : Muestra el signo menor que (<).",
                "list1Item2": "> o >: Muestra el signo mayor que (>).",
                "list1Item3": " o &: Muestra el ampersand (&).",
                "list1Item4": "\" o \": Muestra la comilla doble (\").",
                "codeTitle1": "Ejemplo: Entidades para caracteres reservados"
            },
            "page3": {
                "pageTitle": "Mostrar caracteres especiales en HTML usando entidades",
                "title1": "Introducción a las Entidades de Caracteres Especiales",
                "paragraph1": "Las entidades de caracteres especiales en HTML permiten a los desarrolladores mostrar símbolos, como signos de moneda, símbolos matemáticos y caracteres tipográficos, que no son fáciles de escribir o que pueden no mostrarse correctamente sin una codificación adecuada.",
                "paragraph1a": "Estas entidades son especialmente útiles para contenido internacional, documentación científica o marcas, donde se requieren símbolos específicos como €, ½ o ®.",
                "paragraph1b": "Las entidades pueden escribirse usando códigos con nombre (por ejemplo, &euro;) o códigos numéricos (por ejemplo, &#8364;), asegurando una visualización consistente en diferentes navegadores y plataformas.",
                "title2": "Símbolos de Moneda y de Marca Registrada",
                "paragraph2": "Los símbolos de moneda (por ejemplo, €, £, ¥) y los símbolos de marca registrada (por ejemplo, ®, ™) se utilizan comúnmente en comercio electrónico, avisos legales y branding para transmitir información específica de forma clara.",
                "paragraph2a": "Usar entidades para estos símbolos garantiza que se muestren correctamente sin importar la configuración del teclado o la región del usuario.",
                "list1Item1": "&euro; o &#8364;: Muestra el símbolo del euro (€).",
                "list1Item2": "&reg; o &#174;: Muestra el símbolo de marca registrada (®).",
                "list1Item3": "&trade; o &#8482;: Muestra el símbolo de marca comercial (™).",
                "codeTitle1": "Ejemplo: Entidades de Moneda y Marca Registrada",
                "title3": "Símbolos Matemáticos y Tipográficos",
                "paragraph3": "Los símbolos matemáticos (por ejemplo, ½, ×) y los caracteres tipográficos (por ejemplo, °) son esenciales para contenido científico, recetas o documentación técnica, proporcionando claridad y precisión.",
                "paragraph3a": "Las entidades garantizan que estos símbolos se rendericen correctamente, evitando problemas con el soporte de fuentes o la codificación de caracteres.",
                "codeTitle2": "Ejemplo: Entidades Matemáticas y Tipográficas",
                "title4": "Espacios de No Separación y Control de Diseño",
                "paragraph4": "La entidad de espacio de no separación (&nbsp; o &#160;) evita saltos de línea entre palabras o elementos, asegurando una correcta disposición del texto en casos como nombres o direcciones.",
                "paragraph4a": "Esta entidad es especialmente útil para mantener la coherencia visual en contenido multilingüe o texto con formato ajustado.",
                "codeTitle3": "Ejemplo: Entidades de Espacio de No Separación",
                "note1": "Utiliza entidades de caracteres especiales para garantizar una visualización coherente de los símbolos en todos los navegadores, especialmente en contenido internacional o técnico.",
                "title5": "Buenas Prácticas para Entidades de Caracteres Especiales",
                "paragraph5": "Para usar eficazmente las entidades de caracteres especiales, elige el formato de entidad adecuado, prueba la visualización en diferentes navegadores y combina con una codificación de documento apropiada.",
                "paragraph5a": "Se deben usar entidades cuando la entrada directa del carácter no sea confiable o al trabajar con sistemas antiguos con capacidades limitadas de fuentes.",
                "list2Item1": "Usa entidades con nombre para símbolos comunes y mejorar la legibilidad del código.",
                "list2Item2": "Prueba los caracteres especiales en distintos navegadores para asegurar una visualización uniforme.",
                "list2Item3": "Usa codificación UTF-8 para reducir la dependencia de entidades en caracteres ampliamente soportados."
            },
            "page4": {
                "pageTitle": "Codificación de caracteres y su importancia (UTF-8)",
                "title1": "Introducción a la codificación de caracteres",
                "paragraph1": "La codificación de caracteres define cómo se representan en sistemas digitales, asegurando que los caracteres, letras y símbolos se muestren en plataformas de manera correcta.",
                "paragraph1a": "UTF-8 es una codificación de longitud variable que soporta todos los caracteres Unicode, incluidos emojis, texto no latino y símbolos especiales, siendo el estándar más común para la web.",
                "paragraph1b": "En HTML, especificar la codificación correcta (por ejemplo, UTF-8) es crucial para evitar errores de visualización y garantizar la compatibilidad con contenido internacional.",
                "title2": "Uso de UTF-8 en HTML",
                "paragraph2": "Para usar UTF-8 en HTML, incluye la etiqueta <meta charset='UTF-8'> al inicio del documento, indicando a los navegadores que interpreten el contenido con codificación UTF-8.",
                "paragraph2a": "UTF-8 permite la entrada directa de la mayoría de los símbolos, reduciendo la necesidad de entidades HTML excepto para caracteres reservados o compatibilidad con sistemas antiguos.",
                "list1Item1": "Incluye <meta charset>='UTF-8' en cada documento HTML para garantizar una visualización de símbolos correcta.",
                "list1Item2": "Usar UTF-8 para soportar nativamente símbolos como €, 汉字, o 😊.",
                "list1Item3": "Asegúrate de que las configuraciones del servidor también usen UTF-8 para evitar incompatibilidades de codificación.",
                "codeTitle1": "Ejemplo: Codificación UTF-8 en HTML",
                "title3": "Problemas con codificaciones no UTF-8",
                "paragraph3": "Codificaciones antiguas como ISO-8859-1 ofrecen soporte limitado para texto no latino o símbolos especiales como € o 日本語, lo que lleva a errores de visualización.",
                "paragraph3a": "En estos casos, se requieren entidades HTML como € para codificaciones no soportadas, destacando la superioridad de UTF-8.",
                "codeTitle2": "Ejemplo: Problema con codificación no UTF-8",
                "title4": "Combinación de UTF-8 y entidades HTML",
                "paragraph4": "Aunque UTF-8 soporta la mayoría de los símbolos, las entidades HTML siguen siendo útiles para caracteres reservados (<, >, &)), claridad en el código o compatibilidad con sistemas antiguos.",
                "paragraph4a": "Por ejemplo, entidades como é pueden usarse junto con HTML5 para mantener consistencia o cuando la entrada directa no es práctica.",
                "codeTitle3": "Ejemplo: Combinar UTF-8 y entidades",
                "note1": "Usa siempre codificación UTF-8 en documentos HTML para reducir la dependencia de entidades para símbolos no reservados y soportar símbolos internacionales.",
                "title5": "Mejores prácticas para la codificación de caracteres",
                "paragraph5": "Para garantizar una codificación robusta de caracteres, establece siempre UTF-8 en HTML, configura servidores y bases de datos para usar UTF-8 y prueba el contenido en diferentes navegadores y entornos.",
                "paragraph5a": "Usa utiliza entidades de manera estratégica, principalmente para caracteres definidos o para soportar entornos compatibles, manteniendo un código limpio y fácil de mantener.",
                "list2Item1": "Declara <meta charset='UTF-8'> al inicio del encabezado de HTML para evitar problemas de análisis.",
                "list2Item2": "",
                "list2Item3": "Prueba los símbolos de caracteres especiales en diferentes entornos para verificar la visualización adecuada."
            }
        },
        "chapter12": {
            "title": "Capítulo Doce: Metadatos y Fundamentos de SEO",
            "page1": {
                "pageTitle": "La Importancia de las Etiquetas de Encabezado para el SEO",
                "title1": "Introducción a las Etiquetas de Encabezado y el SEO",
                "paragraph1": "Las etiquetas de encabezado, desde <h1> hasta <h6>, son esenciales para estructurar el contenido en HTML y desempeñan un papel clave en la optimización para motores de búsqueda (SEO) al ayudar a los motores de búsqueda a comprender la jerarquía y la relevancia del contenido.",
                "paragraph1a": "Motores de búsqueda como Google utilizan las etiquetas de encabezado para identificar los temas principales y secundarios de una página, lo que puede influir en el posicionamiento en los resultados de búsqueda y mejorar la descubribilidad del contenido.",
                "paragraph1b": "El uso adecuado de las etiquetas de encabezado crea contenido claro, escaneable y alineado con la intención de búsqueda, mejorando tanto la experiencia del usuario como el SEO.",
                "title2": "Cómo Afectan las Etiquetas de Encabezado al SEO",
                "paragraph2": "Las etiquetas de encabezado comunican la importancia del contenido a los motores de búsqueda, siendo <h1> la de mayor peso, seguida por <h2>, <h3>, y así sucesivamente, formando una jerarquía lógica.",
                "paragraph2a": "Los encabezados bien estructurados con palabras clave relevantes facilitan que los motores de búsqueda indexen el contenido con precisión y lo relacionen con las consultas de los usuarios, aumentando la visibilidad.",
                "list1Item1": "Usa una única etiqueta <h1> por página para definir el tema principal.",
                "list1Item2": "Incorpora palabras clave relevantes de manera natural en los encabezados para alinearte con la intención de búsqueda.",
                "list1Item3": "Mantén una jerarquía lógica (h1 > h2 > h3) que refleje la estructura del contenido.",
                "codeTitle1": "Ejemplo: Estructura de Encabezados Optimizada para SEO",
                "title3": "Optimización de Encabezados con Palabras Clave",
                "paragraph3": "Incluir palabras clave objetivo en las etiquetas de encabezado puede aumentar la relevancia de una página para consultas de búsqueda específicas, pero evita el relleno de palabras clave para mantener la legibilidad y prevenir penalizaciones.",
                "paragraph3a": "Las palabras clave en las etiquetas <h1> y <h2> son especialmente influyentes, ya que señalan el enfoque principal de la página y sus secciones clave.",
                "codeTitle2": "Ejemplo: Encabezados Optimizados con Palabras Clave",
                "title4": "Errores Comunes en las Etiquetas de Encabezado",
                "paragraph4": "El uso incorrecto de las etiquetas de encabezado, como saltar niveles (por ejemplo, de <h1> a <h3>) o usarlas solo para estilos visuales, puede confundir a los motores de búsqueda y perjudicar el rendimiento de SEO.",
                "paragraph4a": "Estos errores alteran la jerarquía del contenido y reducen la accesibilidad, afectando negativamente el posicionamiento en búsqueda y la experiencia del usuario.",
                "codeTitle3": "Ejemplo: Estructura Incorrecta de Encabezados",
                "note1": "Usa siempre etiquetas de encabezado de forma semántica para estructurar el contenido lógicamente, mejorando el SEO y la experiencia del usuario.",
                "title5": "Mejores Prácticas para Etiquetas de Encabezado en SEO",
                "paragraph5": "Para maximizar los beneficios de SEO de las etiquetas de encabezado, úsalas de manera semántica, incorpora palabras clave estratégicamente y asegúrate de que reflejen la estructura y propósito del contenido.",
                "paragraph5a": "Revisa periódicamente las estructuras de encabezados durante las actualizaciones de contenido para mantener la coherencia y la alineación con los objetivos de SEO.",
                "list2Item1": "Usa una sola etiqueta <h1> por página para el título principal.",
                "list2Item2": "Asegúrate de que los encabezados sean descriptivos y concisos, evitando términos vagos.",
                "list2Item3": "Prueba las estructuras de encabezados con herramientas de SEO para verificar su rastreabilidad y relevancia."
            },
            "page2": {
                "pageTitle": "Uso de <link> para Vincular Recursos Externos como Iconos",
                "title1": "Introducción a la Etiqueta <link>",
                "paragraph1": "La etiqueta <link> en HTML se utiliza para conectar recursos externos a una página web, como iconos favicon, hojas de estilo, fuentes o activos precargados, mejorando la funcionalidad y la apariencia.",
                "paragraph1a": "Ubicada en la sección <head>, la etiqueta <link> emplea atributos como rel y href para especificar la relación y la ubicación del recurso.",
                "paragraph1b": "Los usos comunes incluyen vincular iconos favicon para branding, archivos CSS para estilos y fuentes externas para tipografía.",
                "title2": "Vincular un Favicon con <link>",
                "paragraph2": "Un favicon es un pequeño ícono que aparece en las pestañas del navegador, marcadores y el historial, y se vincula usando <link rel='icon'> con la ruta del archivo y el tipo MIME adecuados.",
                "paragraph2a": "Los favicones mejoran la experiencia del usuario y el reconocimiento de marca, soportando formatos como PNG, ICO y JPG, siendo ICO el más compatible.",
                "list1Item1": "Usa rel='icon' para especificar un favicon.",
                "list1Item2": "Incluye type='image/x-icon' para archivos ICO o type='image/png' para archivos PNG.",
                "list1Item3": "Coloca el favicon en un directorio accesible, como /images/favicon.ico.",
                "codeTitle1": "Ejemplo: Vincular un Favicon",
                "title3": "Vincular Hojas de Estilo Externas",
                "paragraph3": "La etiqueta <link> se usa frecuentemente para incluir archivos CSS externos con rel='stylesheet', permitiendo estilos modulares y reutilizables en múltiples páginas web.",
                "paragraph3a": "Se pueden vincular varias hojas de estilo, y el orden de las etiquetas <link> determina la prioridad de la cascada en CSS.",
                "codeTitle2": "Ejemplo: Vincular Archivos CSS",
                "title4": "Vincular Otros Recursos",
                "paragraph4": "Además de favicones y hojas de estilo, <link> puede conectar fuentes web, activos precargados o realizar precarga de DNS con atributos como rel='preconnect' o rel='stylesheet'.",
                "paragraph4a": "Por ejemplo, vincular Google Fonts mejora la tipografía, mientras que rel='preconnect' optimiza el rendimiento al establecer conexiones tempranas con dominios externos.",
                "codeTitle3": "Ejemplo: Vincular Múltiples Recursos",
                "note1": "Utiliza la etiqueta <link> para conectar recursos externos de manera eficiente, asegurando valores rel correctos y rutas de archivo válidas para un rendimiento óptimo.",
                "title5": "Mejores Prácticas para el Uso de <link>",
                "paragraph5": "Para aprovechar al máximo la etiqueta <link>, usa valores rel apropiados, minimiza el tamaño de los archivos de recursos y garantiza accesibilidad y compatibilidad entre navegadores.",
                "paragraph5a": "Prueba regularmente los recursos vinculados para asegurarte de que se carguen correctamente y mejoren la experiencia del usuario sin causar retrasos.",
                "list2Item1": "Especifica tipos MIME correctos (por ejemplo, type='image/x-icon' para favicones).",
                "list2Item2": "Reduce el número de recursos vinculados para minimizar los tiempos de carga de la página.",
                "list2Item3": "Usa recursos alojados en CDN cuando sean confiables para mejorar el rendimiento."
            }
        },
        "chapter13": {
            "title": "Capítulo Trece: Validación y Depuración de HTML",
            "page1": {
                "pageTitle": "Introducción a las Herramientas de Validación de HTML (por ejemplo, Validador W3C)",
                "title1": "¿Qué son las Herramientas de Validación de HTML?",
                "paragraph1": "Las herramientas de validación de HTML verifican la sintaxis y corrección del código HTML según los estándares web establecidos por el World Wide Web Consortium (W3C), asegurando que esté libre de errores y sea compatible.",
                "paragraph1a": "El Validador W3C es la herramienta más utilizada, analizando problemas como etiquetas faltantes, anidamientos incorrectos o elementos obsoletos en documentos HTML.",
                "paragraph1b": "El HTML válido mejora la compatibilidad entre navegadores, la accesibilidad y la optimización para motores de búsqueda (SEO), reduciendo errores de renderizado y mejorando la experiencia del usuario.",
                "title2": "¿Por Qué Usar el Validador W3C?",
                "paragraph2": "El Validador W3C ayuda a los desarrolladores a identificar y corregir errores en el código HTML, garantizando el cumplimiento de estándares como HTML5, lo que mejora la consistencia y confiabilidad en proyectos web.",
                "paragraph2a": "Ofrece informes detallados de errores, advertencias y sugerencias, facilitando la optimización del código para accesibilidad y rendimiento.",
                "list1Item1": "Asegura el cumplimiento de los estándares W3C para compatibilidad entre navegadores.",
                "list1Item2": "Identifica problemas de accesibilidad, como atributos alt faltantes.",
                "list1Item3": "Mejora el SEO al proporcionar código limpio y sin errores.",
                "codeTitle1": "Ejemplo: Documento HTML Válido",
                "title3": "Errores de Validación Comunes",
                "paragraph3": "Los errores de validación suelen originarse por declaraciones DOCTYPE faltantes, etiquetas no cerradas, uso incorrecto de atributos o atributos requeridos ausentes, como alt en imágenes.",
                "paragraph3a": "Estos errores pueden causar renderizado inconsistente, barreras de accesibilidad o bajo rendimiento de SEO, destacando la importancia de la validación.",
                "codeTitle2": "Ejemplo: HTML con Errores",
                "title4": "Corrección de Errores de Validación",
                "paragraph4": "Usando la retroalimentación del Validador W3C, los desarrolladores pueden corregir problemas como agregar etiquetas faltantes, cerrar elementos correctamente o incluir atributos necesarios para lograr un HTML válido.",
                "paragraph4a": "Corregir estos errores no solo asegura el cumplimiento, sino que también mejora la confiabilidad y accesibilidad de la página, beneficiando la experiencia del usuario.",
                "codeTitle3": "Ejemplo: Documento HTML Corregido",
                "note1": "Valida regularmente tu código HTML con el Validador W3C para garantizar páginas web accesibles, optimizadas para SEO y de alta calidad.",
                "title5": "Mejores Prácticas para la Validación de HTML",
                "paragraph5": "Para usar herramientas de validación de HTML de manera efectiva, valida el código con frecuencia y desde las primeras etapas, aborda todos los errores y advertencias, e intégralo en tu flujo de trabajo de desarrollo.",
                "paragraph5a": "Combina la validación con pruebas de accesibilidad y rendimiento para asegurar una experiencia web robusta y amigable para el usuario.",
                "list2Item1": "Valida el HTML durante el desarrollo para detectar errores temprano.",
                "list2Item2": "Aborda tanto los errores como las advertencias para lograr el máximo cumplimiento.",
                "list2Item3": "Usa validación automatizada en pipelines de CI/CD para proyectos grandes."
            },
            "page2": {
                "pageTitle": "Errores Comunes de HTML y Cómo Corregirlos",
                "title1": "Introducción a los Errores Comunes de HTML",
                "paragraph1": "Los errores de HTML ocurren cuando el código se desvía de los estándares W3C, lo que puede provocar problemas de visualización, barreras de accesibilidad o un bajo rendimiento de SEO.",
                "paragraph1a": "Herramientas como el Validador W3C ayudan a identificar estos errores, proporcionando retroalimentación práctica para garantizar un código HTML robusto y conforme.",
                "paragraph1b": "Los errores comunes incluyen declaraciones DOCTYPE faltantes, etiquetas no cerradas y atributos requeridos ausentes, todos corregibles con una estructuración adecuada.",
                "title2": "Declaración DOCTYPE Faltante",
                "paragraph2": "La ausencia de una declaración DOCTYPE hace que los navegadores rendericen las páginas en modo Quirks, lo que resulta en diseños y comportamientos inconsistentes entre navegadores.",
                "paragraph2a": "Corrige esto añadiendo <!DOCTYPE html> al inicio de cada documento HTML para activar el modo de estándares y asegurar un renderizado correcto.",
                "list1Item1": "Error: Falta la declaración DOCTYPE al inicio del documento.",
                "list1Item2": "Impacto: Renderizado en modo Quirks, diseños inconsistentes.",
                "list1Item3": "Corrección: Añade <!DOCTYPE html> antes de la etiqueta <html>.",
                "codeTitle1": "Ejemplo: Declaración DOCTYPE Faltante",
                "codeTitle1Fix": "Ejemplo: Declaración DOCTYPE Corregida",
                "title3": "Etiquetas No Cerradas o Anidadas Incorrectamente",
                "paragraph3": "Las etiquetas no cerradas o un anidamiento incorrecto (por ejemplo, <div><p></div></p>) rompen la estructura del HTML, causando errores de renderizado o problemas de accesibilidad.",
                "paragraph3a": "Asegúrate de que todas las etiquetas estén cerradas y anidadas en el orden correcto, verificando con herramientas como el Validador W3C.",
                "codeTitle2": "Ejemplo: Etiquetas No Cerradas",
                "codeTitle2Fix": "Ejemplo: Etiquetas Cerradas Correctamente",
                "title4": "Atributos Requeridos Faltantes",
                "paragraph4": "Elementos como imágenes (<img>) o entradas de formularios (<input>) requieren atributos como alt o id/name para accesibilidad y funcionalidad, y su ausencia genera errores de validación.",
                "paragraph4a": "Incluye los atributos necesarios, como alt para imágenes y id/name para entradas de formularios, para garantizar cumplimiento y usabilidad.",
                "codeTitle3": "Ejemplo: Atributos Faltantes",
                "codeTitle3Fix": "Ejemplo: Atributos Corregidos",
                "note1": "Usa el Validador W3C para detectar y corregir errores de HTML temprano, asegurando un código accesible, optimizado para SEO y compatible con navegadores.",
                "title5": "Mejores Prácticas para Prevenir Errores de HTML",
                "paragraph5": "Para minimizar los errores de HTML, escribe código limpio, valida regularmente y utiliza herramientas de linting o complementos en editores de código para detectar problemas durante el desarrollo.",
                "paragraph5a": "Integra la validación en tu flujo de trabajo para prevenir problemas en entornos de producción y mantener un código de alta calidad.",
                "list2Item1": "Valida el HTML después de cada cambio significativo para detectar errores temprano.",
                "list2Item2": "Usa editores de código con herramientas de linting HTML para identificar problemas en tiempo real.",
                "list2Item3": "Prueba las páginas en múltiples navegadores para confirmar un renderizado consistente."
            },
            "page3": {
                "pageTitle": "Uso de Herramientas de Desarrollo de Navegadores para Inspeccionar y Depurar HTML",
                "title1": "Introducción a las Herramientas de Desarrollo de Navegadores",
                "paragraph1a": "Las herramientas de desarrollo de navegadores, como Chrome DevTools o Firefox Developer Tools, permiten a los desarrolladores inspeccionar y depurar HTML, CSS y JavaScript directamente en el navegador.",
                "paragraph1b": "Estas herramientas ofrecen una vista en tiempo real del árbol del Modelo de Objetos del Documento (DOM), facilitando el análisis de la estructura de elementos, estilos y errores.",
                "paragraph1c": "Los usos comunes incluyen inspeccionar elementos, depurar problemas de diseño y verificar errores de consola, lo que las hace esenciales para el desarrollo web.",
                "title2": "Inspección de Elementos HTML",
                "paragraph2": "El panel de Elementos en las herramientas de desarrollo muestra el árbol del DOM, permitiendo resaltar elementos al pasar el cursor y ver sus propiedades HTML y CSS.",
                "paragraph2a": "Úsalo para identificar problemas como elementos ocultos, atributos incorrectos o cambios inesperados en el DOM causados por JavaScript.",
                "list1Item1": "Haz clic derecho en un elemento y selecciona ‘Inspeccionar’ para ver su HTML en el panel de Elementos.",
                "list1Item2": "Revisa los estilos aplicados y las propiedades calculadas para diagnosticar problemas de diseño.",
                "list1Item3": "Edita HTML/CSS directamente para probar cambios sin modificar el código fuente.",
                "codeTitle1": "Ejemplo: Inspección de un Elemento Oculto",
                "title3": "Depuración de Problemas de HTML y HTML",
                "paragraph3": "La pestaña de Red muestra la carga de recursos como imágenes o scripts, ayudando a identificar enlaces rotos o activos de carga lenta, mientras que el panel de Elementos revela problemas de renderizado.",
                "paragraph3a": "Por ejemplo, un enlace de imagen roto puede detectarse verificando el atributo src de <img> y buscando errores 404 en la pestaña de Red.",
                "codeTitle2": "Ejemplo: Depuración de una Imagen Rota",
                "title4": "Uso de la Consola para Errores Relacionados con HTML",
                "paragraph4": "La pestaña de Consola muestra errores de JavaScript, advertencias y registros, que a menudo están relacionados con problemas de HTML, como atributos no válidos o errores de manipulación del DOM.",
                "paragraph4a": "Errores como ‘variable no definida’ o ‘selector no válido’ pueden indicar problemas de HTML, rastreables hasta el DOM usando el panel de Elementos.",
                "codeTitle3": "Ejemplo: Error de Consola desde JavaScript",
                "note1": "Usa regularmente las herramientas de desarrollo para inspeccionar y depurar HTML, asegurando una experiencia de usuario fluida y páginas web sin errores.",
                "title5": "Mejores Prácticas para Usar Herramientas de Desarrollo",
                "paragraph5": "Para usar las herramientas de desarrollo de manera efectiva, familiarízate con los paneles principales (Elementos, Consola, Red), prueba cambios directamente y combínalos con herramientas de validación para una depuración completa.",
                "paragraph5a": "Prueba las herramientas en diferentes navegadores para garantizar compatibilidad entre navegadores y un renderizado consistente.",
                "list2Item1": "Inicia la depuración con el panel de Elementos para entender la estructura del DOM.",
                "list2Item2": "Revisa la consola para errores antes de modificar el código.",
                "list2Item3": "Usa la pestaña de Red para optimizar la carga de recursos y el rendimiento."
            }
        }
    },
    "cssTutorials": {
        "mark": "Marcar como completado",
        "chapter1": {
            "title": "Capítulo 1: Introducción a CSS",
            "page1": {
                "pageTitle": "¿Qué es CSS?",
                "title1": "¿Qué es CSS?",
                "paragraph1": "CSS significa Hojas de Estilo en Cascada (Cascading Style Sheets). Se utiliza para controlar la apariencia y el diseño de las páginas web. Con CSS, puedes personalizar colores, fuentes, espaciado, alineación y posicionamiento de elementos HTML.",
                "paragraph2": "CSS permite estilizar documentos HTML, aplicando estilos a elementos específicos como párrafos, encabezados y enlaces, o a toda la página web, separando la estructura del contenido (HTML) de su presentación.",
                "title2": "¿Cómo funciona CSS?",
                "paragraph3": "CSS funciona seleccionando elementos HTML y aplicándoles estilos mediante reglas CSS. Cada regla consta de un selector (que indica qué elementos se estilizarán) y una declaración (que define las propiedades de estilo).",
                "codeTitle1": "Ejemplo: Regla CSS Básica",
                "smallTitle1": "En este ejemplo:",
                "paragraph4": "El selector 'p' apunta a todos los elementos <p> (párrafos) en el documento HTML.",
                "paragraph5": "Las declaraciones dentro de las llaves {} especifican los estilos, como el color rojo y el tamaño de fuente de 16 píxeles.",
                "title3": "¿Por qué usar CSS?",
                "list1Item1": "Separación de preocupaciones: CSS distingue la estructura (HTML) del estilo (CSS), facilitando la gestión y actualización del sitio web.",
                "list1Item2": "Consistencia: CSS asegura un diseño uniforme en todas las páginas del sitio.",
                "list1Item3": "Eficiencia: Permite controlar la apariencia de múltiples páginas desde un único archivo, agilizando los cambios.",
                "codeTitle2": "Ejemplo: Aplicando Estilos a Múltiples Elementos",
                "listTitle2": "Beneficios adicionales de CSS:",
                "list2Item1": "Flexibilidad: Permite personalizar estilos para diferentes dispositivos mediante consultas de medios.",
                "list2Item2": "Accesibilidad: Facilita la creación de diseños que se adaptan a tecnologías de asistencia.",
                "list2Item3": "Mantenimiento: Reduce la complejidad al centralizar los estilos en un solo lugar."
            },
            "page2": {
                "pageTitle": "Por qué usamos CSS: Separación de estructura y estilo",
                "title1": "Por qué usamos CSS: Separación de estructura y estilo",
                "paragraph1": "CSS (Hojas de Estilo en Cascada) es esencial porque separa la presentación de una página web de su estructura, definida por HTML. Esta separación mejora la mantenibilidad, la flexibilidad y el rendimiento.",
                "paragraph2": "Al almacenar los estilos en una sección CSS separada, puedes actualizar la apariencia de todo un sitio web sin modificar el HTML, asegurando consistencia y reduciendo errores.",
                "title2": "Problemas con el estilo en línea",
                "paragraph3": "Antes de que CSS se convirtiera en estándar, los desarrolladores usaban estilos en línea dentro de las etiquetas HTML, mezclando estructura y estilo. Este enfoque dificulta el mantenimiento y es propenso a errores.",
                "codeTitle1": "Ejemplo de estilo en línea (Evita esto)",
                "smallTitle1": "¿Por qué evitar los estilos en línea?",
                "paragraph4": "Los estilos en línea son difíciles de actualizar porque están incrustados en cada elemento HTML. Cambiar el estilo en todo un sitio web requiere editar cada etiqueta individualmente, lo que es ineficiente.",
                "title3": "Beneficios de separar CSS",
                "paragraph5": "Usar un bloque <style> permite una gestión centralizada de estilos, facilitando las actualizaciones y asegurando una apariencia consistente en múltiples páginas.",
                "codeTitle2": "Ejemplo de CSS separado"
            },
            "page3": {
                "pageTitle": "Formas de aplicar CSS: En línea, Interno, Externo",
                "paragraph1": "CSS se puede aplicar a HTML de tres formas principales: en línea, interno y externo. Cada método tiene sus casos de uso, ventajas y desventajas.",
                "paragraph2": "Comprender estos métodos ayuda a los desarrolladores a elegir el mejor enfoque para su proyecto, equilibrando mantenibilidad y rendimiento.",
                "title1": "CSS en línea",
                "paragraph3": "El CSS en línea se aplica directamente en los elementos HTML usando el atributo style. Es rápido pero no se recomienda para proyectos grandes debido a problemas de mantenimiento.",
                "codeTitle1": "Ejemplo de CSS en línea",
                "title2": "CSS interno",
                "paragraph4": "El CSS interno se define dentro de una etiqueta <style> en el <head> del HTML. Es útil para páginas individuales, pero puede ser complicado para sitios más grandes.",
                "codeTitle2": "Ejemplo de CSS interno",
                "title3": "CSS externo",
                "paragraph5": "El CSS externo utiliza un archivo .css separado vinculado mediante una etiqueta <link>. Es el método preferido para proyectos grandes, ya que promueve la reutilización y el mantenimiento.",
                "codeTitle3": "Ejemplo de CSS externo",
                "tableTitle": "Comparación de métodos de aplicación de CSS",
                "tableHeader1": "Método",
                "tableHeader2": "Ventajas",
                "tableHeader3": "Desventajas",
                "tableRow1Col1": "CSS en línea",
                "tableRow1Col2": "Rápido de implementar, no requiere archivos separados",
                "tableRow1Col3": "Difícil de mantener, estilos dispersos en HTML",
                "tableRow2Col1": "CSS interno",
                "tableRow2Col2": "Centralizado en una página, sin archivo externo",
                "tableRow2Col3": "No reutilizable en varias páginas",
                "tableRow3Col1": "CSS externo",
                "tableRow3Col2": "Reutilizable, fácil de mantener, estilos consistentes",
                "tableRow3Col3": "Requiere archivo separado, configuración inicial"
            },
            "page4": {
                "pageTitle": "Sintaxis y Comentarios de CSS",
                "paragraph1": "La sintaxis de CSS define cómo se escriben y aplican los estilos a los elementos HTML. Comprender su estructura es clave para un diseño efectivo.",
                "paragraph2": "Los comentarios en CSS ayudan a documentar el código, facilitando su mantenimiento y comprensión.",
                "title1": "Sintaxis de CSS",
                "paragraph3": "Una regla de CSS consta de un selector y un bloque de declaración. El selector apunta a elementos HTML, y el bloque de declaración contiene propiedades y valores.",
                "codeTitle1": "Ejemplo de Sintaxis Básica de CSS",
                "title2": "Comentarios en CSS",
                "paragraph4": "CSS soporta comentarios de varias líneas (/* */), que son ignorados por los navegadores y se usan para documentación.",
                "codeTitle2": "Ejemplo de Comentarios en CSS",
                "tableTitle": "Componentes de la Sintaxis de CSS",
                "tableHeader1": "Componente",
                "tableHeader2": "Descripción",
                "tableHeader3": "Ejemplo",
                "tableRow1Col1": "Selector",
                "tableRow1Col2": "Apunta a elementos HTML para estilizar",
                "tableRow1Col3": "p, h1, .class",
                "tableRow2Col1": "Propiedad",
                "tableRow2Col2": "Atributo de estilo a modificar",
                "tableRow2Col3": "color, font-size",
                "tableRow3Col1": "Valor",
                "tableRow3Col2": "Configuración específica para la propiedad",
                "tableRow3Col3": "blue, 16px"
            }
        },
        "chapter2": {
            "title": "Capítulo 2: Selectores y Colores",
            "page1": {
                "pageTitle": "Selectores Básicos: Elemento, Clase, ID",
                "paragraph1": "Los selectores CSS se utilizan para apuntar a elementos HTML y aplicar estilos. Los selectores básicos incluyen selectores de elemento, clase e ID, cada uno con propósitos distintos.",
                "paragraph2": "Comprender estos selectores es esencial para aplicar estilos de manera eficiente y mantener un código limpio.",
                "listItem1": "Los selectores de elemento apuntan directamente a etiquetas HTML.",
                "listItem2": "Los selectores de clase permiten estilizar múltiples elementos con la misma clase.",
                "listItem3": "Los selectores de ID apuntan a un solo elemento único.",
                "title1": "Selector de Elemento",
                "paragraph3": "Los selectores de elemento aplican estilos a todas las instancias de una etiqueta HTML específica, como <p> o <h1>.",
                "codeTitle1": "Ejemplo de Selector de Elemento",
                "title2": "Selector de Clase",
                "paragraph4": "Los selectores de clase apuntan a elementos con un atributo de clase específico, permitiendo estilos reutilizables en múltiples elementos.",
                "codeTitle2": "Ejemplo de Selector de Clase",
                "title3": "Selector de ID",
                "paragraph5": "Los selectores de ID apuntan a un solo elemento con un ID único, ideales para estilizar componentes específicos.",
                "codeTitle3": "Ejemplo de Selector de ID",
                "tableTitle": "Comparación de Selectores Básicos",
                "tableHeader1": "Tipo de Selector",
                "tableHeader2": "Sintaxis",
                "tableHeader3": "Caso de Uso",
                "tableRow1Col1": "Elemento",
                "tableRow1Col2": "etiqueta { propiedad: valor; }",
                "tableRow1Col3": "Estilizar todas las instancias de una etiqueta",
                "tableRow2Col1": "Clase",
                "tableRow2Col2": ".nombreclase { propiedad: valor; }",
                "tableRow2Col3": "Estilizar múltiples elementos con la misma clase",
                "tableRow3Col1": "ID",
                "tableRow3Col2": "#nombreid { propiedad: valor; }",
                "tableRow3Col3": "Estilizar un solo elemento único"
            },
            "page2": {
                "pageTitle": "Selectores de Agrupación y Combinadores",
                "paragraph1": "Los selectores de agrupación aplican estilos a múltiples elementos de manera eficiente, mientras que los selectores combinadores apuntan a elementos según su posición en la estructura HTML.",
                "paragraph2": "Estos selectores mejoran la precisión del CSS y reducen la repetición de código.",
                "listItem1": "Combinador descendiente: Selecciona elementos anidados.",
                "listItem2": "Combinador hijo: Selecciona hijos directos.",
                "listItem3": "Combinador hermano adyacente: Selecciona el hermano inmediato siguiente.",
                "listItem4": "Combinador hermano general: Selecciona todos los hermanos siguientes.",
                "title1": "Selectores de Agrupación",
                "paragraph3": "Los selectores de agrupación usan comas para aplicar los mismos estilos a múltiples elementos, optimizando el código CSS.",
                "codeTitle1": "Ejemplo de Selectores de Agrupación",
                "title2": "Combinadores Descendiente e Hijo",
                "paragraph4": "Los combinadores descendientes apuntan a elementos anidados dentro de otros, mientras que los combinadores hijo seleccionan solo los hijos directos de un elemento.",
                "codeTitle2": "Ejemplo de Combinadores Descendiente e Hijo",
                "title3": "Combinadores de Hermanos",
                "paragraph5": "Los combinadores de hermanos adyacentes y generales seleccionan elementos que siguen a otros en el mismo nivel de padre, útiles para ajustes específicos de diseño.",
                "codeTitle3": "Ejemplo de Combinadores de Hermanos",
                "tableTitle": "Tipos de Selectores Combinadores",
                "tableHeader1": "Combinador",
                "tableHeader2": "Sintaxis",
                "tableHeader3": "Descripción",
                "tableRow1Col1": "Descendiente",
                "tableRow1Col2": "ancestro descendiente { ... }",
                "tableRow1Col3": "Selecciona todos los descendientes de un elemento",
                "tableRow2Col1": "Hijo",
                "tableRow2Col2": "padre > hijo { ... }",
                "tableRow2Col3": "Selecciona solo los hijos directos",
                "tableRow3Col1": "Hermano Adyacente",
                "tableRow3Col2": "elemento + hermano { ... }",
                "tableRow3Col3": "Selecciona el hermano inmediato siguiente",
                "tableRow4Col1": "Hermano General",
                "tableRow4Col2": "elemento ~ hermano { ... }",
                "tableRow4Col3": "Selecciona todos los hermanos siguientes"
            },
            "page3": {
                "pageTitle": "Selectores de Atributos",
                "paragraph1": "Los selectores de atributos apuntan a elementos HTML según sus atributos o valores de atributos, ofreciendo un control de estilo preciso.",
                "paragraph2": "Estos selectores son útiles para estilizar elementos como entradas de formularios, enlaces o imágenes con atributos específicos.",
                "listItem1": "Selector de presencia: Apunta a elementos con un atributo específico.",
                "listItem2": "Selector de valor exacto: Apunta a elementos con un valor de atributo exacto.",
                "listItem3": "Selectores de contención: Apuntan a elementos con atributos que contienen palabras o prefijos específicos.",
                "listItem4": "Selectores de subcadena: Apuntan a elementos con atributos que comienzan, terminan o contienen un valor.",
                "title1": "Selectores de Presencia y Valor Exacto",
                "paragraph3": "El selector de presencia [attr] apunta a elementos con el atributo especificado, mientras que [attr=value] apunta a elementos con un valor de atributo exacto.",
                "codeTitle1": "Ejemplo de Selectores de Presencia y Valor Exacto",
                "title2": "Selectores de Contención de Palabra y Prefijo",
                "paragraph4": "[attr~=value] apunta a elementos con un atributo que contiene una palabra específica, y [attr|=value] apunta a elementos con un atributo que comienza con un valor (separado por guiones).",
                "codeTitle2": "Ejemplo de Selectores de Contención de Palabra y Prefijo",
                "title3": "Selectores de Coincidencia de Subcadena",
                "paragraph5": "Selectores como [attr^=value], [attr$=value] y [attr*=value] apuntan a elementos según subcadenas de valores de atributos (comienza con, termina con o contiene).",
                "codeTitle3": "Ejemplo de Selectores de Coincidencia de Subcadena",
                "tableTitle": "Tipos de Selectores de Atributos",
                "tableHeader1": "Selector",
                "tableHeader2": "Sintaxis",
                "tableHeader3": "Descripción",
                "tableRow1Col1": "Presencia",
                "tableRow1Col2": "[attr]",
                "tableRow1Col3": "Apunta a elementos con el atributo",
                "tableRow2Col1": "Valor Exacto",
                "tableRow2Col2": "[attr=value]",
                "tableRow2Col3": "Apunta a elementos con el valor de atributo exacto",
                "tableRow3Col1": "Contiene Palabra",
                "tableRow3Col2": "[attr~=value]",
                "tableRow3Col3": "Apunta a elementos con la palabra en una lista separada por espacios",
                "tableRow4Col1": "Comienza Con",
                "tableRow4Col2": "[attr^=value]",
                "tableRow4Col3": "Apunta a elementos con atributo que comienza con el valor"
            },
            "page4": {
                "pageTitle": "Formatos de Color: HEX, RGB, HSL, rgba, hsla",
                "paragraph1": "CSS soporta múltiples formatos de color para definir colores en elementos, cada uno con características y casos de uso únicos.",
                "paragraph2": "Comprender estos formatos permite un control preciso del color y efectos de transparencia.",
                "listItem1": "HEX: Código de color hexadecimal, compacto y ampliamente utilizado.",
                "listItem2": "RGB: Define colores usando valores de rojo, verde y azul.",
                "listItem3": "HSL: Usa matiz, saturación y luminosidad para una selección de color intuitiva.",
                "listItem4": "rgba: RGB con un canal alfa para transparencia.",
                "listItem5": "hsla: HSL con un canal alfa para transparencia.",
                "title1": "Colores HEX",
                "paragraph3": "Los colores HEX usan un código hexadecimal de seis dígitos (o abreviatura de tres dígitos) con prefijo # para definir colores.",
                "codeTitle1": "Ejemplo de Color HEX",
                "title2": "Colores RGB y HSL",
                "paragraph4": "RGB usa valores numéricos para rojo, verde y azul, mientras que HSL usa matiz, saturación y luminosidad para ajustes de color más intuitivos.",
                "codeTitle2": "Ejemplo de Colores RGB y HSL",
                "title3": "Colores rgba y hsla",
                "paragraph5": "rgba y hsla extienden RGB y HSL al añadir un canal alfa para controlar la transparencia, ideal para superposiciones y efectos.",
                "codeTitle3": "Ejemplo de Colores rgba y hsla",
                "tableTitle": "Tipos de Formatos de Color",
                "tableHeader1": "Formato",
                "tableHeader2": "Sintaxis",
                "tableHeader3": "Descripción",
                "tableRow1Col1": "HEX",
                "tableRow1Col2": "#RRGGBB o #RGB",
                "tableRow1Col3": "Código de color hexadecimal",
                "tableRow2Col1": "RGB",
                "tableRow2Col2": "rgb(rojo, verde, azul)",
                "tableRow2Col3": "Valores de rojo, verde, azul (0-255)",
                "tableRow3Col1": "HSL",
                "tableRow3Col2": "hsl(matiz, saturación%, luminosidad%)",
                "tableRow3Col3": "Matiz (0-360), saturación (0-100%), luminosidad (0-100%)",
                "tableRow4Col1": "rgba",
                "tableRow4Col2": "rgba(rojo, verde, azul, alfa)",
                "tableRow4Col3": "RGB con alfa (0-1) para transparencia",
                "tableRow5Col1": "hsla",
                "tableRow5Col2": "hsla(matiz, saturación%, luminosidad%, alfa)",
                "tableRow5Col3": "HSL con alfa (0-1) para transparencia"
            }
        },
        "chapter3": {
            "title": "Capítulo 3: Texto y Fuentes",
            "page1": {
                "pageTitle": "Familia de Fuentes, Tamaño, Peso, Estilo",
                "paragraph1": "Las propiedades de fuente en CSS permiten personalizar la apariencia del texto, incluyendo la tipografía, el tamaño, el grosor y el estilo.",
                "paragraph2": "Estas propiedades son esenciales para crear contenido web visualmente atractivo y legible.",
                "listItem1": "font-family: Especifica la tipografía o pila de fuentes de respaldo.",
                "listItem2": "font-size: Establece el tamaño del texto.",
                "listItem3": "font-weight: Controla el grosor del texto.",
                "listItem4": "font-style: Define el estilo del texto, como itálico o normal.",
                "title1": "Familia de Fuentes",
                "paragraph3": "La propiedad font-family establece la tipografía del texto, con fuentes de respaldo en caso de que la principal no esté disponible.",
                "codeTitle1": "Ejemplo de Familia de Fuentes",
                "title2": "Tamaño y Peso de Fuente",
                "paragraph4": "El tamaño de fuente ajusta las dimensiones del texto, mientras que el peso de fuente controla el grosor, desde ligero hasta negrita.",
                "codeTitle2": "Ejemplo de Tamaño y Peso de Fuente",
                "title3": "Estilo de Fuente",
                "paragraph5": "El estilo de fuente permite aplicar estilos itálico, oblicuo o normal al texto para énfasis o distinción.",
                "codeTitle3": "Ejemplo de Estilo de Fuente",
                "tableTitle": "Resumen de Propiedades de Fuente",
                "tableHeader1": "Propiedad",
                "tableHeader2": "Descripción",
                "tableHeader3": "Valores de Ejemplo",
                "tableRow1Col1": "font-family",
                "tableRow1Col2": "Establece la tipografía con fuentes de respaldo",
                "tableRow1Col3": "Arial, Helvetica, sans-serif",
                "tableRow2Col1": "font-size",
                "tableRow2Col2": "Establece el tamaño del texto",
                "tableRow2Col3": "16px, 1.2em, 2rem",
                "tableRow3Col1": "font-weight",
                "tableRow3Col2": "Controla el grosor del texto",
                "tableRow3Col3": "normal, bold, 700",
                "tableRow4Col1": "font-style",
                "tableRow4Col2": "Establece el estilo itálico o normal",
                "tableRow4Col3": "normal, italic, oblique"
            },
            "page2": {
                "pageTitle": "Alineación, Decoración y Transformación de Texto",
                "paragraph1": "Las propiedades de texto en CSS permiten controlar la alineación, decoración y transformación del texto, mejorando la presentación visual del contenido.",
                "paragraph2": "Estas propiedades son cruciales para estilizar el texto y mejorar la legibilidad y la coherencia del diseño.",
                "listItem1": "text-align: Controla la alineación horizontal del texto.",
                "listItem2": "text-decoration: Añade o elimina líneas decorativas en el texto.",
                "listItem3": "text-transform: Modifica la capitalización del texto.",
                "title1": "Alineación de Texto",
                "paragraph3": "La propiedad text-align establece la alineación horizontal del texto dentro de un elemento, como izquierda, derecha, centro o justificado.",
                "codeTitle1": "Ejemplo de Alineación de Texto",
                "title2": "Decoración de Texto",
                "paragraph4": "La decoración de texto aplica efectos como subrayado, tachado o elimina el subrayado predeterminado de los enlaces.",
                "codeTitle2": "Ejemplo de Decoración de Texto",
                "title3": "Transformación de Texto",
                "paragraph5": "La transformación de texto cambia la capitalización del texto, como convertir a mayúsculas, minúsculas o capitalizar la primera letra de cada palabra.",
                "codeTitle3": "Ejemplo de Transformación de Texto",
                "tableTitle": "Resumen de Propiedades de Texto",
                "tableHeader1": "Propiedad",
                "tableHeader2": "Descripción",
                "tableHeader3": "Valores de Ejemplo",
                "tableRow1Col1": "text-align",
                "tableRow1Col2": "Establece la alineación horizontal del texto",
                "tableRow1Col3": "left, right, center, justify",
                "tableRow2Col1": "text-decoration",
                "tableRow2Col2": "Añade o elimina líneas decorativas",
                "tableRow2Col3": "underline, line-through, none",
                "tableRow3Col1": "text-transform",
                "tableRow3Col2": "Modifica la capitalización del texto",
                "tableRow3Col3": "uppercase, lowercase, capitalize"
            },
            "page3": {
                "pageTitle": "Altura de Línea, Espaciado de Letras",
                "paragraph1": "Las propiedades line-height y letter-spacing en CSS permiten controlar el espaciado vertical y horizontal del texto, respectivamente, mejorando la legibilidad y el atractivo visual.",
                "paragraph2": "Estas propiedades son esenciales para ajustar la tipografía en el diseño web, asegurando que el texto sea cómodo de leer y estéticamente agradable.",
                "listItem1": "Line-height ajusta el espacio vertical entre líneas de texto.",
                "listItem2": "Letter-spacing controla el espacio horizontal entre caracteres.",
                "listItem3": "Ambas propiedades aceptan varias unidades, como píxeles, porcentajes o valores sin unidad.",
                "title1": "Altura de Línea",
                "paragraph3": "La propiedad line-height establece la altura de una caja de línea, afectando el espacio entre líneas de texto. Puede especificarse como número, porcentaje o valor de longitud (por ejemplo, px, rem).",
                "codeTitle1": "Ejemplo de Altura de Línea",
                "title2": "Espaciado de Letras",
                "paragraph4": "La propiedad letter-spacing ajusta el espacio entre caracteres en un texto. Los valores positivos aumentan el espaciado, mientras que los negativos lo disminuyen.",
                "codeTitle2": "Ejemplo de Espaciado de Letras",
                "title3": "Combinando Altura de Línea y Espaciado de Letras",
                "paragraph5": "Usar line-height y letter-spacing juntos puede crear una tipografía equilibrada y visualmente atractiva para diferentes necesidades de diseño.",
                "codeTitle3": "Ejemplo Combinado",
                "note": "Nota: Usa line-height y letter-spacing con cuidado para evitar que el texto quede demasiado apretado o excesivamente espaciado, lo que puede afectar la legibilidad.",
                "tableTitle": "Valores de Altura de Línea y Espaciado de Letras",
                "tableHeader1": "Propiedad",
                "tableHeader2": "Valores Comunes",
                "tableHeader3": "Descripción",
                "tableRow1Col1": "line-height",
                "tableRow1Col2": "normal, 1.5, 2, 120%",
                "tableRow1Col3": "Establece la altura de una caja de línea, afectando el espaciado vertical.",
                "tableRow2Col1": "letter-spacing",
                "tableRow2Col2": "normal, 2px, -1px",
                "tableRow2Col3": "Ajusta el espacio entre caracteres en el texto.",
                "tableRow3Col1": "Combinado",
                "tableRow3Col2": "Varía",
                "tableRow3Col3": "Usar juntos para una tipografía equilibrada."
            },
            "page4": {
                "pageTitle": "Uso de Google Fonts y @font-face",
                "paragraph1": "Google Fonts y la regla @font-face en CSS permiten usar fuentes personalizadas en tu sitio web, mejorando la tipografía y la consistencia de la marca.",
                "paragraph2": "Estos métodos ofrecen flexibilidad para elegir fuentes, desde bibliotecas gratuitas como Google Fonts hasta archivos de fuentes alojados localmente, permitiendo diseños únicos.",
                "listItem1": "Google Fonts ofrece una amplia biblioteca de fuentes gratuitas y optimizadas para la web.",
                "listItem2": "@font-face permite definir fuentes personalizadas al vincular archivos de fuentes.",
                "listItem3": "Ambos métodos admiten fuentes de respaldo para una mejor compatibilidad.",
                "title1": "Uso de Google Fonts",
                "paragraph3": "Google Fonts se puede incluir mediante una etiqueta <link> o @import en CSS, proporcionando acceso fácil a una variedad de fuentes sin necesidad de alojarlas tú mismo.",
                "codeTitle1": "Ejemplo de Google Fonts",
                "title2": "Uso de @font-face",
                "paragraph4": "La regla @font-face permite definir una fuente personalizada especificando su origen, como archivos WOFF o WOFF2, alojados en tu servidor.",
                "codeTitle2": "Ejemplo de @font-face",
                "title3": "Combinando Google Fonts y @font-face",
                "paragraph5": "Puedes combinar Google Fonts y @font-face para usar tanto fuentes alojadas como personalizadas, garantizando flexibilidad y opciones de respaldo para tu tipografía.",
                "codeTitle3": "Ejemplo Combinado",
                "note": "Nota: Asegúrate de que los archivos de fuentes estén optimizados para la web (por ejemplo, formato WOFF2) e incluye fuentes de respaldo para mantener la compatibilidad entre navegadores.",
                "tableTitle": "Google Fonts vs @font-face",
                "tableHeader1": "Método",
                "tableHeader2": "Características Clave",
                "tableHeader3": "Caso de Uso",
                "tableRow1Col1": "Google Fonts",
                "tableRow1Col2": "Gratuito, fácil de usar, alojado por Google",
                "tableRow1Col3": "Añade rápidamente fuentes profesionales sin alojarlas.",
                "tableRow2Col1": "@font-face",
                "tableRow2Col2": "Fuentes personalizadas, control total, alojadas localmente",
                "tableRow2Col3": "Usa fuentes únicas o propietarias para la marca.",
                "tableRow3Col1": "Combinado",
                "tableRow3Col2": "Mezcla de fuentes alojadas y personalizadas",
                "tableRow3Col3": "Tipografía flexible con opciones de respaldo."
            }
        },
        "chapter4": {
            "title": "Capítulo 4: El Modelo de Caja"
        },
        "chapter5": {
            "title": "Capítulo 5: Fondos y Bordes"
        },
        "chapter6": {
            "title": "Capítulo 6: Display, Posición y Z-Index"
        },
        "chapter7": {
            "title": "Capítulo 7: Diseño Flexbox"
        },
        "chapter8": {
            "title": "Capítulo 8: Diseño de Cuadrícula CSS"
        },
        "chapter9": {
            "title": "Capítulo 9: Diseño Responsivo"
        },
        "chapter10": {
            "title": "Capítulo 10: Transiciones, Transformaciones y Animaciones"
        },
        "chapter11": {
            "title": "Capítulo 11: Pseudoclases y Pseudoelementos"
        },
        "chapter12": {
            "title": "Capítulo 12: CSS Moderno y Mejores Prácticas"
        }
    },
    "searchPage": {
        "search": "Buscar:"
    },
    "registerPage": {
        "email": "Correo electrónico",
        "username": "Nombre de usuario",
        "password1": "Contraseña",
        "password2": "Confirmar contraseña",
        "birthday": "Fecha de nacimiento",
        "registerButton": "Crear cuenta",
        "emptyEmailError": "Por favor, introduce tu dirección de correo electrónico.",
        "emptyUsernameError": "Por favor, introduce un nombre de usuario.",
        "emptyPasswordError": "Por favor, introduce una contraseña.",
        "invalidDateError": "Por favor, introduce una fecha de nacimiento válida.",
        "passwordNotEqualError": "Las contraseñas no coinciden.",
        "emailExsistsError": "Esta dirección de correo electrónico ya está registrada."
    }
}