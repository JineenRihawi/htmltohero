{
    "direction": "ltr",
    "footer": {
        "text": "HTMLtoHero, adım adım öğreticiler ve etkileşimli alıştırmalar yoluyla web geliştirme öğretmeye adanmış bir platformdur. HTML, CSS ve JavaScript'i kolay ve ilgi çekici bir şekilde öğrenin.",
        "copyright": "Telif Hakkı Cenin Rihavi 2025©"
    },
    "header": {
        "html": "HTML",
        "htmlTutorials": "Eğitimler",
        "htmlExercises": "Alıştırmalar",
        "css": "CSS",
        "cssTutorials": "Eğitimler",
        "cssExercises": "Alıştırmalar",
        "js": "JavaScript",
        "jsTutorials": "Eğitimler",
        "jsExercises": "Alıştırmalar",
        "codeEditor": "Kod Editörü",
        "search": "Ara",
        "login": "Giriş Yap",
        "profile": "Profil",
        "logout": "Çıkış Yap"
    },
    "mainpage": {
        "discovercontainer": {
            "discover": "Keşfet",
            "search": "Ara"
        },
        "htmlcontainer": {
            "html": "HTML",
            "description": "HTML (Hiper Metin İşaretleme Dili), tüm web sitelerinin temelidir. İçeriğinizi basit etiketler ve öğeler kullanarak yapılandırır. İster tamamen yeni başlayan biri olun ister becerilerinizi tazelemek isteyin, web geliştirme temellerini sağlam bir şekilde oluşturmak için buradan başlayın."
        },
        "csscontainer": {
            "css": "CSS",
            "description": "CSS (Basamaklı Stil Sayfaları), web sitenize renkler, düzenler ve tasarımla hayat katar. HTML'inizin nasıl göründüğünü ve hissettirdiğini kontrol eder. Sayfalarınızı nasıl biçimlendireceğinizi ve duyarlı, güzel hale getireceğinizi öğrenin."
        },
        "jscontainer": {
            "js": "JAVASCRIPT",
            "description": "JavaScript, web sitenize etkileşim ve dinamik özellikler ekler. Tıklama ile tepki veren düğmelerden, canlı form doğrulamasına ve animasyonlara kadar — JavaScript sayfalarınıza hayat verir. Daha akıllı web uygulamaları oluşturmak için öğrenmeye başlayın."
        }
    },
    "notFoundPage": {
        "title": "HTMLtoHero - Bulunamadı",
        "errorText": "Hata 404",
        "smallText": "Sayfa Bulunamadı!"
    },
    "loginPage": {
        "email": "E-posta",
        "password": "Şifre",
        "loginButton": "Giriş Yap",
        "createNewAccount": "Yeni Hesap Oluştur",
        "emptyEmailError": "Lütfen e-posta adresinizi girin.",
        "emptyPasswordError": "Lütfen şifrenizi girin.",
        "invalidEmailError": "Yanlış e-posta.",
        "invalidPasswordError": "Yanlış şifre."
    },
    "profile": {
        "profileContainer": {
            "name": "İsim",
            "birthday": "Doğum Günü",
            "accountCreationDate": "Hesap Oluşturma Tarihi",
            "level": "Seviye"
        },
        "learningContainer": {
            "continueLearning": "Öğrenmeye Devam Et...",
            "html": "HTML",
            "css": "CSS",
            "js": "JavaScript"
        },
        "exercisingContainer": {
            "continueExercising": "Alıştırmalara Devam Et...",
            "html": "HTML",
            "css": "CSS",
            "js": "JavaScript"
        }
    },
    "codeeditor": {
        "previewButton": "Önizleme"
    },
    "htmlTutorials": {
        "markAsCompleted": "Tamamlandı olarak işaretle",
        "chapter1": {
            "title": "Bölüm 1: HTML'e Giriş",
            "page1": {
                "pageTitle": "HTML Nedir?",
                "title1": "HTML Nedir?",
                "paragraph1": "HTML, yani Hiper Metin İşaretleme Dili, web geliştirmenin temel taşı ve ziyaret ettiğiniz her web sitesinin omurgasıdır. Web sayfalarının içeriğini oluşturmak ve yapılandırmak için kullanılan standart bir dildir ve Chrome, Firefox ve Safari gibi tarayıcıların içeriği doğru bir şekilde yorumlayıp görüntülemesini sağlar.",
                "title2": "Web'in Yapı Taşları",
                "paragraph2": "HTML bir programlama dili değildir — bir işaretleme dilidir, yani metni açıklamak ve tarayıcılara içeriği nasıl işleyeceklerini söylemek için kullanılır. Bu açıklamalar, <html>, <head> ve <body> gibi etiketler kullanılarak yazılan HTML öğeleri şeklinde gelir.",
                "paragraph3": "HTML, tüm web içeriği için yapı sağlar. Başlıklar, paragraflar, resimler, bağlantılar ve daha fazlası için öğelerle, her web projesinin başlangıç noktasıdır. HTML'i CSS ve JavaScript ile birleştirerek, geliştiriciler görsel olarak çarpıcı ve etkileşimli web siteleri oluşturabilir.",
                "title3": "HTML Ne Yapabilir?",
                "listTitle1": "HTML, web sayfalarının yapısını oluşturmanıza olanak tanır:",
                "list1Item1": "Başlıklar ve Paragraflar: Metin içeriğini düzenlemek için <h2> ile <h6> arasında başlıklar ve <p> için paragraflar kullanın.",
                "list1Item2": "Resimler ve Multimedya: İlgi çekici bir kullanıcı deneyimi için görseller, ses ve video ekleyin.",
                "list1Item3": "Bağlantılar: Sayfalar ve harici siteler arasında gezinmek için <a> etiketlerini kullanın.",
                "list1Item4": "Listeler: İçeriği sıralı (<ol>) veya sırasız (<ul>) listelerle düzenleyin.",
                "list1Item5": "Formlar: Etkileşimli formlar ve giriş alanlarıyla kullanıcı girdisi toplayın.",
                "paragraph4": "HTML ayrıca <header>, <footer> ve <article> gibi anlamsal öğeleri destekleyerek erişilebilirliği ve SEO'yu iyileştirir.",
                "title4": "Neden HTML Öğrenmelisiniz?",
                "listTitle2": "HTML, web geliştirmenin temelidir ve kendi web sitelerinizi oluşturmanın ilk adımıdır. İşte neden önemli olduğu:",
                "list2Item1": "Öğrenmesi Kolay: HTML basit ve yeni başlayanlar için uygundur.",
                "list2Item2": "Çok Yönlülük: Tüm web projeleri için başlangıç noktasıdır.",
                "list2Item3": "Kariyer Fırsatları: HTML'i anlamak, web geliştirme ve tasarımda çeşitli roller için kapıları açar.",
                "paragraph5": "HTML öğrenmek, web geliştirmenin alfabesini öğrenmek gibidir. Fikirlerinizi çevrimiçi olarak hayata geçirmek için size araçlar sağlar ve daha ileri teknolojilere dalmak için sağlam bir temel sunar.",
                "title5": "HTML Yapısını Görselleştirme",
                "title6": "Sonuç",
                "paragraph6": "HTML sadece teknik bir araç değil; web'de fikirleri hayata geçiren bir dildir. İster kişisel bir blog, bir portföy, ister tam teşekküllü bir web sitesi oluşturmak isteyin, HTML'i ustalaşmak sonsuz olasılıkların kapısını aralar. CSS ve JavaScript ile birleştirildiğinde, modern, ilgi çekici ve dinamik web siteleri oluşturmak için güçlü bir üçlü haline gelir. Hadi başlayın, deneyin ve web geliştirme kahramanı olma yolculuğunuza başlayın!"
            }
        },
        "chapter2": {
            "title": "Bölüm 2: HTML Belge Yapısı",
            "page1": {
                "pageTitle": "<!DOCTYPE html> Bildirimini Anlama",
                "title1": "<!DOCTYPE html> Bildirimini Anlama",
                "paragraph1": "<!DOCTYPE> bildirimi, herhangi bir HTML belgesinin önemli bir parçasıdır. Bir HTML belgesinde görünmesi gereken ilk şeydir ve web tarayıcısına hangi HTML sürümünün beklendiğini söyler. Bu olmadan, tarayıcılar sayfayı yanlış şekilde görüntüleyebilir, özellikle farklı HTML sürümleri arasında geçiş yaparken.",
                "title2": "<!DOCTYPE html> Nedir?",
                "paragraph2": "<!DOCTYPE html> bildirimi, belgenin bir HTML5 belgesi olduğunu belirtmek için kullanılır. Belge türünü ve kullanılan HTML sürümünü tanımlar ve tarayıcının sayfayı standart modda işlemesini sağlar, eski yöntemleri kullanarak içeriği görüntülemek için kullanılan tuhaflık modundan kaçınır.",
                "title3": "<!DOCTYPE html> Neden Önemlidir?",
                "list1Item1": "Tarayıcı İşleme: Tarayıcının beklenen HTML sürümünü anlamasına yardımcı olur. Bu, modern HTML öğeleri ve özelliklerinin doğru şekilde işlenmesini sağlar.",
                "list1Item2": "Standart Mod ve Tuhaflık Modu: <!DOCTYPE html> olmadan, bazı tarayıcılar sayfayı tuhaflık modunda işleyebilir, bu da düzen ve stilin beklendiği gibi çalışmamasına neden olabilir.",
                "list1Item3": "HTML5: HTML5 ile <!DOCTYPE html>, önceki sürümlere göre daha basittir. HTML 4.01 gibi eski sürümlerde doctype daha uzun ve daha fazla bilgi içeriyordu. HTML5 bunu sadece <!DOCTYPE html> kullanarak basitleştirdi.",
                "title4": "<!DOCTYPE html> Nasıl Kullanılır?",
                "paragraph3": "Bildiri, belgenin en başında, <html> etiketinden önce yer almalıdır. Bu, HTML belgenizin ilk satırıdır.",
                "codeTitle1": "Temel Yapı:",
                "listTitle2": "Hatırlanması Gereken Önemli Noktalar:",
                "list2Item1": "HTML belgenizin en üstünde her zaman <!DOCTYPE html> kullanın.",
                "list2Item2": "Bu, belgenin HTML5 olduğunu bildirir; bu, en yeni ve en yaygın kullanılan HTML sürümüdür.",
                "list2Item3": "<!DOCTYPE html>, tarayıcıların sayfayı doğru şekilde yorumlamasına ve görüntülemesine yardımcı olur."
            },
            "page2": {
                "pageTitle": "<html>, <head> ve <body> Öğeleri",
                "title1": "<html>, <head> ve <body> Öğeleri",
                "title2": "<html> Öğesi",
                "paragraph1": "<html> öğesi, bir HTML belgesinin kök öğesidir. Başlık ve gövde bölümleri de dahil olmak üzere sayfanın tüm içeriğini kapsar. Her HTML belgesi bu öğeyle başlamalıdır ve diğer tüm öğeler bunun içinde yer almalıdır.",
                "codeTitle1": "Sözdizimi:",
                "listTitle1": "<html> öğesi iki ana bölümü içermelidir:",
                "list1Item1": "<head> bölümü: Belge hakkında meta bilgileri içerir, örneğin başlık, karakter kodlaması ve CSS dosyaları ve betikler gibi harici kaynaklara bağlantılar.",
                "list1Item2": "<body> bölümü: Sayfanın görünür içeriğini içerir, örneğin metin, resimler, videolar ve diğer öğeler.",
                "title3": "<head> Öğesi",
                "paragraph2": "<head> öğesi, HTML belgesi hakkında meta bilgileri içermek için kullanılır. Sayfanın kendisinde herhangi bir içerik göstermez, ancak tarayıcı ve arama motorları için önemli bilgiler sağlar.",
                "listTitle2": "<head> İçinde Sıkça Kullanılan Öğeler:",
                "list2Item1": "<meta> Karakter kodlaması veya yazar bilgisi gibi meta verileri belirtir.",
                "list2Item2": "<title> Sayfanın başlığını tanımlar, bu başlık tarayıcının başlık çubuğunda veya sekmesinde görünür.",
                "list2Item3": "<link> Stil sayfaları veya favicon gibi harici kaynaklara bağlantı vermek için kullanılır.",
                "list2Item4": "<style> Belge için iç CSS stillerini içerir.",
                "list2Item5": "<script> Harici veya satır içi JavaScript kodunu tanımlar.",
                "codeTitle2": "Örnek:",
                "list3Item1": "<meta charset=\"UTF-8\"> Belge için karakter kodlamasını belirtir. UTF-8, modern web sayfaları için en yaygın kodlama olup geniş bir karakter yelpazesini destekler.",
                "list3Item2": "<meta name=\"author\" content=\"John Doe\"> Web sayfasının yazarı hakkında bilgi sağlar; genellikle kullanıcılar için görünmez, ancak arama motorları için faydalıdır.",
                "list3Item3": "<title> <title> etiketi içindeki içerik, tarayıcı sekmesinde görüntülenir.",
                "title4": "<body> Öğesi",
                "paragraph3": "<body> öğesi, kullanıcının göreceği gerçek içeriği içerir. Bu, metin, başlıklar, resimler, bağlantılar ve diğer HTML öğeleri gibi tüm öğeleri kapsar.",
                "codeTitle3": "Örnek:",
                "list4Item1": "<h1>: <h1> etiketi, sayfadaki ana başlığı temsil eder.",
                "list4Item2": "<p>: <p> etiketi, bir metin paragrafı için kullanılır.",
                "paragraph4": "<body> içindeki her şey, kullanıcıların web sayfasını ziyaret ettiğinde gördüğü şeydir.",
                "listTitle5": "Hatırlanması Gereken Önemli Noktalar:",
                "list5Item1": "<html> öğesi, hem başlık hem de gövde bölümlerini kapsayan tüm HTML belgesini sarar.",
                "list5Item2": "<head> öğesi, CSS dosyaları ve betikler gibi harici kaynaklara bağlantılar ve belgenin başlığı gibi meta verileri içerir.",
                "list5Item3": "<body> öğesi, kullanıcıların etkileşimde bulunduğu görünür içeriği, örneğin başlıklar, paragraflar, resimler ve bağlantılar içerir."
            },
            "page3": {
                "pageTitle": "<meta> Etiketleriyle Meta Verileri Tanımlama",
                "title1": "Meta Verilere Giriş",
                "paragraph1": "HTML'deki meta veriler, web sayfasında görüntülenmeyen belge hakkında bilgi sağlar. Genellikle HTML belgesinin <head> bölümünde <meta> etiketi kullanılarak eklenir. Meta veriler, tarayıcılar, arama motorları ve diğer web hizmetleri tarafından sayfanın içeriğini ve bağlamını anlamak için kullanılır.",
                "title2": "<meta> Etiketlerinin Yaygın Kullanımları",
                "paragraph2": "<meta> etiketi çok yönlüdür ve çeşitli amaçlar için kullanılabilir. İşte bazı yaygın kullanımlar:",
                "list1Item1": "Metnin doğru görüntülenmesini sağlamak için <meta charset='UTF-8'> ile karakter kodlamasını belirtme.",
                "list1Item2": "Arama motoru optimizasyonu (SEO) için açıklama, anahtar kelimeler ve yazar gibi belge meta verilerini tanımlama.",
                "list1Item3": "<meta name='viewport'> ile duyarlı tasarım için görünüm ayarlarını kontrol etme.",
                "title3": "<meta> Etiket Örnekleri",
                "paragraph3": "Aşağıda, HTML belgesinin <head> bölümünde <meta> etiketlerinin nasıl kullanıldığına dair bir örnek verilmiştir. Bu örnek, karakter kodlaması, açıklama, anahtar kelimeler, yazar ve görünüm ayarlarını içerir.",
                "codeTitle1": "Örnek: <meta> Etiketlerini Kullanma",
                "title4": "Meta Veriler için En İyi Uygulamalar",
                "paragraph4": "Meta verilerden en iyi şekilde yararlanmak için aşağıdaki en iyi uygulamaları dikkate alın:",
                "list2Item1": "Metnin tarayıcılarda doğru şekilde görüntülenmesini sağlamak için her zaman charset meta etiketini ekleyin.",
                "list2Item2": "SEO ve erişilebilirliği iyileştirmek için anlamlı açıklamalar ve anahtar kelimeler kullanın."
            },
            "page4": {
                "pageTitle": "<title> Etiketi ile Sayfa Başlığını Ayarlama",
                "title1": "<title> Etiketine Giriş",
                "paragraph1": "HTML'deki <title> etiketi, tarayıcının başlık çubuğunda veya sekmesinde görünen web sayfasının başlığını tanımlamak için kullanılır. <head> bölümünde yer alan önemli bir öğedir ve kullanıcı deneyimi ile arama motoru optimizasyonu (SEO) açısından önemli bir rol oynar.",
                "title2": "<title> Etiketinin Amacı",
                "paragraph2": "<title> etiketi birkaç önemli işlevi yerine getirir. İşte bazı temel amaçlar:",
                "list1Item1": "Web sayfasının başlığını tarayıcının sekmesinde veya başlık çubuğunda görüntüler.",
                "list1Item2": "Kullanıcıların sayfanızı tanımlamasına yardımcı olan arama motoru sonuçları için bir başlık sağlar.",
                "list1Item3": "Ekran okuyucular için bağlam sağlayarak erişilebilirliği iyileştirir.",
                "title3": "<title> Etiketini Kullanma Örneği",
                "paragraph3": "Aşağıda, HTML belgesinin <head> bölümünde <title> etiketinin açıklayıcı bir sayfa başlığı ayarlamak için nasıl kullanıldığına dair bir örnek verilmiştir.",
                "codeTitle1": "Örnek: Sayfa Başlığını Ayarlama",
                "title4": "<title> Etiketi için En İyi Uygulamalar",
                "paragraph4": "<title> etiketinden en iyi şekilde yararlanmak için aşağıdaki en iyi uygulamaları dikkate alın:",
                "list2Item1": "Başlığı kısa tutun, ideal olarak 60 karakterin altında, böylece arama sonuçlarında tamamen görüntülenir.",
                "list2Item2": "SEO ve kullanıcı gezinmesini iyileştirmek için her sayfa için benzersiz ve açıklayıcı başlıklar kullanın."
            },
            "page5": {
                "pageTitle": "Karakter Kodlaması: <meta charset=\"UTF-8\">",
                "title1": "Karakter Kodlamasına Giriş",
                "paragraph1": "HTML'deki <meta charset=\"UTF-8\"> etiketi, web sayfasının karakter kodlamasını belirtir ve metnin doğru görüntülenmesini sağlar. UTF-8, modern web geliştirme için standart kodlamadır ve farklı tarayıcılarda ve cihazlarda özel semboller ve emojiler dahil geniş bir karakter yelpazesini destekler.",
                "title2": "<meta charset=\"UTF-8\">'nin Önemi",
                "paragraph2": "<meta charset=\"UTF-8\"> etiketinin dahil edilmesi, metnin doğru şekilde işlenmesi için gereklidir. İşte neden önemli olduğu:",
                "list1Item1": "Özel karakterleri (ör. café) ve emojileri (ör. 😊) destekler.",
                "list1Item2": "Bozuk metin veya yerine geçen karakterler (�) gibi görüntüleme sorunlarını önler.",
                "list1Item3": "Tarayıcılarda ve platformlarda tutarlı işleme sağlar.",
                "title3": "<meta charset=\"UTF-8\"> Kullanımı",
                "paragraph3": "Aşağıda, bir web sayfasında özel karakterleri desteklemek için <meta charset=\"UTF-8\"> etiketinin nasıl kullanıldığına dair bir örnek verilmiştir.",
                "codeTitle1": "Örnek: UTF-8 ile Özel Karakterler",
                "title4": "HTML Varlıklarını İşleme",
                "paragraph4": "UTF-8, ayrılmış karakterleri veya sembolleri görüntülemek için kullanılan özel kodlar olan HTML varlıklarını da destekler. Aşağıdaki örnek, yaygın HTML varlıklarını işlemek için UTF-8 kullanan bir web sayfasını gösterir.",
                "codeTitle2": "Örnek: UTF-8 ile HTML Varlıkları",
                "title5": "Diğer Karakter Kodlamaları",
                "paragraph5": "UTF-8 tercih edilen seçenek olsa da, özellikle eski sistemlerle uğraşırken diğer kodlamalar da mevcuttur. Bunları anlamak faydalı olabilir:",
                "list2Item1": "ISO-8859-1: Batı Avrupa dillerini destekler ancak birçok Latin dışı karakteri eksik bırakır.",
                "list2Item2": "UTF-16: Karakter başına daha fazla bayt kullanır, web kullanımı için daha az verimlidir.",
                "list2Item3": "ASCII: 128 karakterle sınırlıdır, modern web siteleri için uygun değildir.",
                "title6": "Kodlama Sorunlarını Giderme",
                "paragraph6": "Yanlış veya eksik karakter kodlaması, görüntüleme sorunlarına yol açabilir. İşte yaygın sorunlar ve çözümleri:",
                "list3Item1": "Bozuk metin veya � sembolleri: <head> bölümünün başında <meta charset=\"UTF-8\"> ekleyin.",
                "list3Item2": "Tutarlı olmayan tarayıcı işleme: Sunucu başlıklarının bildirilen UTF-8 kodlamasıyla eşleştiğinden emin olun."
            },
            "page6": {
                "pageTitle": "HTML Dosyasının Temel Yapısı",
                "title1": "HTML Yapısına Giriş",
                "paragraph1": "Her HTML dosyası, bir web sayfasının temelini oluşturan temel bir yapı izler. Bu yapı, <!DOCTYPE html>, <html>, <head> ve <body> gibi temel öğeleri içerir ve içeriği ve meta verileri tarayıcıların doğru şekilde işlemesi için düzenler.",
                "title2": "HTML Yapısının Ana Bileşenleri",
                "paragraph2": "Temel HTML yapısı birkaç kritik bileşenden oluşur. Rollerini anlamak, geçerli web sayfaları oluşturmak için gereklidir:",
                "list1Item1": "<!DOCTYPE html>: Belgenin HTML5 olduğunu bildirir ve tarayıcıların onu doğru şekilde yorumlamasını sağlar.",
                "list1Item2": "<html>: Tüm diğer öğeleri içeren kök öğe, erişilebilirlik için bir lang özelliği ile.",
                "list1Item3": "<head> ve <body>: Meta verileri (ör. başlık, karakter kodlaması) görünür içerikten ayırır.",
                "title3": "Temel HTML Yapısı Örneği",
                "paragraph3": "Aşağıdaki örnek, temel yapısal öğelerle birlikte en az bir HTML dosyasını gösterir.",
                "codeTitle1": "Örnek: En Az HTML Yapısı",
                "title4": "Geliştirilmiş HTML Yapısı",
                "paragraph4": "Temel yapıyı, <header> ve <main> gibi anlamsal öğeler ve satır içi CSS ekleyerek geliştirebilirsiniz. Aşağıda, satır içi CSS ve anlamsal etiketlerle bir örnek verilmiştir.",
                "codeTitle2": "Örnek: Stillerle Yapılandırılmış HTML",
                "title5": "HTML Kodunu Düzenleme İpuçları",
                "paragraph5": "Temiz ve düzenli HTML yazmak, okunabilirliği ve sürdürülebilirliği artırır. Şu en iyi uygulamaları izleyin:",
                "list2Item1": "İç içe geçmeyi net bir şekilde göstermek için tutarlı girintileme (ör. 2 veya 4 boşluk) kullanın.",
                "list2Item2": "Karmaşık kod bölümlerini açıklamak için yorumlar ekleyin.",
                "list2Item3": "Erişilebilirliği artırmak için <header>, <main> ve <footer> gibi anlamsal öğeler kullanın.",
                "title6": "Yaygın Yapısal Hatalar",
                "paragraph6": "HTML'inizin geçerli ve işlevsel olduğundan emin olmak için şu yaygın hatalardan kaçının:",
                "list3Item1": "<!DOCTYPE html> öğesini atlama: Tarayıcıların tuhaflık modunda işlemesine neden olabilir, bu da tutarsız stile yol açar.",
                "list3Item2": "Etiketleri yanlış iç içe geçirme: Örneğin, etiketleri yanlış sırayla kapatma sayfa düzenini bozabilir."
            }
        },
        "chapter3": {
            "title": "Bölüm 3: HTML'de Metinle Çalışma",
            "page1": {
                "pageTitle": "Başlıklar: <h1> - <h6>",
                "title1": "Başlık Kullanımı: <h1> - <h6>",
                "paragraph1": "HTML'deki başlıklar, <h1> ile <h6> etiketleriyle tanımlanır ve web sayfasındaki içeriği yapılandırmak için önemlidir. Hiyerarşi oluştururlar; <h1> en önemli (genellikle sayfa başlığı) ve <h6> en az önemlidir. Başlıklar, kullanıcıların gezinmesine yardımcı olur, ekran okuyucular için erişilebilirlik sağlar ve arama motoru optimizasyonu (SEO) için önemli konuları işaret eder.",
                "title2": "Başlıkların Önemi",
                "paragraph2": "Başlıklar, içeriği net bir yapıya ayırarak kullanıcıların taramasını ve anlamasını kolaylaştırır. Erişilebilirlik için kritik öneme sahiptirler, çünkü ekran okuyucular sayfayı özetlemek için bunları kullanır. Arama motorları da içeriği indekslemek için başlıklara öncelik verir; <h1> en fazla ağırlığa sahiptir. Başlıkları doğru kullanmak, hem kullanılabilirliği hem de bulunabilirliği artırır.",
                "list1Item1": "Daha iyi gezinme için mantıksal bir içerik hiyerarşisi oluşturun.",
                "list1Item2": "Ekran okuyucu kullanıcıları için erişilebilirliği destekleyin.",
                "list1Item3": "Önemli konuları vurgulayarak SEO'yu güçlendirin.",
                "title3": "Başlık Hiyerarşisi Oluşturma",
                "paragraph3": "Başlıkları etkili kullanmak için, ana başlık için <h1> ile başlayın, ardından bölümler için <h2>, alt bölümler için <h3> kullanın ve böyle devam edin. Net bir yapı için seviyeleri atlamaktan (örneğin, <h1>'den <h3>'e geçmek) kaçının. Aşağıdaki örnek, uygun bir başlık hiyerarşisine sahip basit bir web sayfasını gösterir.",
                "codeTitle1": "Örnek: Temel Başlık Yapısı",
                "title4": "Başlıkları Stilize Etme",
                "paragraph4": "Başlıklar, varsayılan tarayıcı stillerine (örneğin, <h1> için daha büyük yazı tipi) sahiptir, ancak görsel çekicilik için CSS ile özelleştirilebilir. Tutarlı stil, hiyerarşiyi güçlendirir. Aşağıdaki örnek, bir blog sayfasında başlıkların CSS ile nasıl stilize edildiğini ve içeriği düzenlediğini gösterir.",
                "codeTitle2": "Örnek: Blogda Stilize Edilmiş Başlıklar",
                "note1": "Erişilebilirlik İpucu: Ekran okuyucular ve arama motorlarının içeriği doğru yorumlaması için başlıkları sırayla kullanın ve her sayfada yalnızca bir <h1> kullanın.",
                "title5": "Yaygın Başlık Hataları",
                "paragraph5": "Başlıkların yanlış kullanımı, kullanıcıları ve erişilebilirliği olumsuz etkiler. İçeriğin net ve etkili kalması için aşağıdaki yaygın hatalardan kaçının. Örneğin, başlıkları yapı yerine stil için kullanmak veya seviyeleri atlamak gezinme ve SEO'yu bozabilir.",
                "list2Item1": "Başlıkları stil için kullanma: Görsel efektler için CSS kullanın, <h1> veya <h2> değil.",
                "list2Item2": "Seviyeleri atlama: Netlik için sırayı (<h1>, <h2>, <h3>) takip edin.",
                "list2Item3": "Birden fazla <h1> etiketi: Odak için her sayfada bir <h1> kullanın.",
                "title6": "Etkili Başlıklar için İpuçları",
                "paragraph6": "Başlıkları etkili kullanmak için, açıklayıcı ve kısa tutun, bölüm içeriğini özetleyin. Ana konuyu tanımlamak için her sayfada yalnızca bir <h1> kullanın. Yapının tüm kullanıcılar için net olduğundan emin olmak için erişilebilirlik araçlarıyla test edin.",
                "list3Item1": "Başlık metnini kısa ve bölüme uygun tutun.",
                "list3Item2": "Başlık gezinmesini kontrol etmek için erişilebilirlik araçları kullanın."
            },
            "page2": {
                "pageTitle": "Paragraflar: <p>",
                "title1": "Paragraflarla Çalışma: <p>",
                "paragraph1": "HTML'deki <p> etiketi, metin bloklarını düzenlemek ve okunabilirliği artırmak için paragrafları tanımlar. Makaleler, açıklamalar veya girişler gibi içeriği sunmak için temel bir unsurdur ve metnin görsel olarak ayrılmasını sağlar.",
                "title2": "<p> Etiketinin Amacı",
                "paragraph2": "Paragraflar, metni yönetilebilir parçalara ayırarak kullanıcı deneyimini iyileştirir. <p> etiketi, metnin etrafına varsayılan boşluklar (kenar boşlukları) ekler, içeriği daha az karmaşık hale getirir. Ayrıca semantiktir, ekran okuyucular ve arama motorlarının içeriğin yapısını anlamasına yardımcı olur.",
                "list1Item1": "Metin bloklarını ayırarak okunabilirliği artırır.",
                "list1Item2": "Ekran okuyucu gezinmesi için erişilebilirliği destekler.",
                "list1Item3": "Özelleştirilmiş görünüm için CSS stilini destekler.",
                "title3": "Paragrafları Kullanma",
                "paragraph3": "<p> etiketi kullanımı basittir: Metni <p> ve </p> arasına sarın. Genellikle <body> bölümünde başlıklar veya diğer elementlerden sonra yer alır. Aşağıdaki örnek, bir web sitesini tanıtan paragraflarla basit bir web sayfasını gösterir.",
                "codeTitle1": "Örnek: Temel Paragraf Kullanımı",
                "title4": "Paragrafları Stilize Etme",
                "paragraph4": "Paragrafları, boşluk, yazı tipi veya renkleri ayarlamak için CSS ile stilize edebilirsiniz, böylece görsel olarak çekici hale gelirler. Tutarlı stil, paragrafların sitenizin tasarımına uygun olmasını sağlar. Aşağıdaki örnek, temiz ve okunabilir bir düzen için CSS ile stilize edilmiş paragrafları gösterir.",
                "codeTitle2": "Örnek: Stilize Edilmiş Paragraflar",
                "note1": "Erişilebilirlik İpucu: Gerçek paragraflar için <p> kullanın, ilgisiz içeriği stilize etmek için değil, ekran okuyucular için semantik netliği koruyun.",
                "title5": "Yaygın Paragraf Hataları",
                "paragraph5": "<p> etiketinin yanlış kullanımı, okunabilirlik ve erişilebilirliği etkileyebilir. Paragrafların etkili ve düzgün yapılandırılmış olması için bu hatalardan kaçının.",
                "list2Item1": "Metin dışı içerik için <p> kullanma: Düzen için <div> veya diğer etiketleri kullanın.",
                "list2Item2": "Aşırı satır sonu (<br>) kullanımı: Birden fazla <br> yerine ayrı fikirler için <p> kullanın.",
                "title6": "Daha İyi Paragraflar için İpuçları",
                "paragraph6": "Tek bir ana fikri ileten net, kısa paragraflar yazın. Mantıksal bir akış oluşturmak için <p> ile başlıkları birleştirin. Farklı cihazlarda okunabilirlik için içeriğinizi test edin.",
                "list3Item1": "Daha iyi okunabilirlik için paragrafları kısa ve odaklı tutun.",
                "list3Item2": "İçeriği etkili bir şekilde düzenlemek için başlıklarla eşleştirin."
            },
            "page3": {
                "pageTitle": "Metin Biçimlendirme: <b>, <i>, <strong>, <em>",
                "title1": "Metin Biçimlendirme Temelleri",
                "paragraph1": "HTML, metni stilize etmek ve vurgulamak için <b>, <i>, <strong> ve <em> gibi etiketler sunar, okunabilirliği ve anlamı artırır.",
                "title2": "<b> ve <i> ile Görsel Biçimlendirme",
                "paragraph2": "<b> etiketi metni kalın yapar ve <i> etiketi metni italik yapar. Bunlar, semantik anlam olmadan görsel stil için kullanılır.",
                "list1Item1": "<b>: Vurgu veya dikkat çekmek için metni kalın yapar.",
                "list1Item2": "<i>: Genellikle stil amaçlı metni italik yapar.",
                "codeTitle1": "Örnek: <b> ve <i> Kullanımı",
                "title3": "<strong> ve <em> ile Semantik Biçimlendirme",
                "paragraph3": "<strong> ve <em> etiketleri semantik anlam katar. <strong> önem belirtir (kalın), <em> ise vurgu önerir (italik).",
                "codeTitle2": "Örnek: <strong> ve <em> Kullanımı",
                "note1": "Erişilebilirlik için <strong> ve <em> tercih edin, çünkü ekran okuyuculara anlam iletirler.",
                "title4": "Hangi Etiketi Ne Zaman Kullanmalı",
                "paragraph4": "Amaca göre etiket seçin: görsel stil veya semantik önem. Şu ipuçlarını göz önünde bulundurun:",
                "list2Item1": "Anahtar kelimeler gibi yalnızca görsel değişiklikler için <b> ve <i> kullanın.",
                "list2Item2": "Erişilebilirliği ve anlamı iyileştirmek için <strong> ve <em> kullanın."
            },
            "page4": {
                "pageTitle": "Satır Sonları: <br>",
                "title1": "<br> Etiketini Anlama",
                "paragraph1": "HTML'deki <br> etiketi, tek bir satır sonu ekler ve yeni bir paragraf başlatmadan metin düzenini kontrol etmenizi sağlar.",
                "title2": "Basit Satır Sonları için <br> Kullanımı",
                "paragraph2": "Okunabilirliği artırmak için adresler veya listeler gibi metin bloklarında satır sonu eklemek için <br> etiketini kullanın.",
                "list1Item1": "<br>, kapanış etiketi gerektirmeyen kendi kendine kapanan bir etikettir.",
                "list1Item2": "<p> gibi tek bir element içinde küçük kesmeler için idealdir.",
                "codeTitle1": "Örnek: Temel Satır Sonları",
                "title3": "<br> ile Stilize Etme",
                "paragraph3": "Metni düzgün bir şekilde biçimlendirmek için <br> ile CSS'yi birleştirin, satır sonlarının tasarım hedeflerinize uygun olduğundan emin olun.",
                "codeTitle2": "Örnek: Stilize Edilmiş Satır Sonları",
                "note1": "Boşluk için <br> etiketini aşırı kullanmaktan kaçının; daha iyi kontrol için CSS kenar boşlukları veya dolgu kullanın.",
                "title4": "<br> için En İyi Uygulamalar",
                "paragraph4": "Temiz ve erişilebilir HTML için <br> etiketini dikkatli kullanın.",
                "list2Item1": "Adresler veya şiirler gibi içeriğe bağlı kesmeler için <br> kullanın.",
                "list2Item2": "Birden fazla <br> yerine düzen ayarlamaları için CSS'ye güvenin."
            },
            "page5": {
                "pageTitle": "Yatay Çizgiler: <hr>",
                "title1": "<hr> Etiketine Giriş",
                "paragraph1": "HTML'deki <hr> etiketi, web sayfasında içeriği görsel olarak ayırmak için yatay bir çizgi oluşturur.",
                "title2": "Bölüm Ayrımı için <hr> Kullanımı",
                "paragraph2": "<hr> etiketi, paragrafları veya bölümleri ayırmak için basit bir yoldur ve düzen akışını etkilemez.",
                "list1Item1": "<hr>, kapanış etiketi gerektirmeyen kendi kendine kapanan bir etikettir.",
                "list1Item2": "Varsayılan olarak tam genişlikte bir yatay çizgi oluşturur.",
                "codeTitle1": "Örnek: Temel Yatay Çizgi",
                "title3": "<hr> Etiketini Stilize Etme",
                "paragraph3": "CSS ile <hr> görünümünü, örneğin rengini veya kalınlığını değiştirerek web sitenizin tasarımına uyumlu hale getirebilirsiniz.",
                "codeTitle2": "Örnek: Stilize Edilmiş Yatay Çizgi",
                "note1": "Sayfayı kalabalıklaştırmamak için <hr> etiketini dikkatli kullanın; daha karmaşık düzenler için CSS kenarlıklarını düşünün.",
                "title4": "<hr> için En İyi Uygulamalar",
                "paragraph4": "<hr> etiketi, içerik düzenini ve okunabilirliği artırmak için amaçlı kullanılmalıdır.",
                "list2Item1": "Makaleler veya konular gibi farklı bölümleri ayırmak için <hr> kullanın.",
                "list2Item2": "Daha iyi görsel entegrasyon için <hr> etiketini CSS ile özelleştirin."
            },
            "page6": {
                "pageTitle": "HTML'de Yorumlar: <!-- -->",
                "title1": "HTML Yorumlarını Anlama",
                "paragraph1": "HTML yorumları, <!-- --> olarak yazılır ve geliştiricilerin not eklemesine veya içeriği web sayfasında görünmeden gizlemesine olanak tanır.",
                "title2": "Düzen için Yorum Kullanımı",
                "paragraph2": "Yorumlar, özellikle büyük projelerde kodu belgelendirmeye yardımcı olur, anlaşılmasını ve bakımını kolaylaştırır.",
                "list1Item1": "Yorumlar web sayfasında görünmez.",
                "list1Item2": "<!-- ve --> içinde birden fazla satıra yayılabilir.",
                "codeTitle1": "Örnek: Temel Yorumlar",
                "title3": "Stilize Sayfalarda Yorumlar",
                "paragraph3": "Yorumlar, karmaşık HTML dosyalarında bölümleri etiketlemek veya gelecekteki değişiklikleri not etmek için kullanışlıdır, CSS uygulandığında bile.",
                "codeTitle2": "Örnek: Stillerle Yorumlar",
                "note1": "Yorumları iç içe geçirmekten (<!-- içinde başka bir -->) kaçının, çünkü bu hatalara neden olabilir.",
                "title4": "Yorumlar için En İyi Uygulamalar",
                "paragraph4": "Kodu karmaşıklaştırmadan netliği artırmak için yorumları stratejik kullanın.",
                "list2Item1": "Karmaşık bölümleri açıklamak veya yer tutucuları işaretlemek için yorum ekleyin.",
                "list2Item2": "Okunabilir kodu korumak için yorumları kısa tutun."
            }
        },
        "chapter4": {
            "title": "Bölüm 4: Bağlantılar ve Gezinme",
            "page1": {
                "pageTitle": "<a href=\"...\"> ile Bağlantı Oluşturma",
                "title1": "HTML Bağlantılarına Giriş",
                "paragraph1": "<a> etiketi, href özniteliği ile web sayfalarını veya kaynakları bağlayan köprüler oluşturur.",
                "title2": "Temel Bağlantı Oluşturma",
                "paragraph2": "Harici web sitelerine, dahili sayfalara veya e-posta adreslerine bağlanmak için href ile <a> etiketini kullanın.",
                "list1Item1": "href özniteliği, bağlantının hedef URL'sini belirtir.",
                "list1Item2": "<a> ve </a> arasındaki metin, tıklanabilir bağlantı metnidir.",
                "codeTitle1": "Örnek: Temel Bağlantılar",
                "title3": "Bağlantıları CSS ile Stilize Etme",
                "paragraph3": "CSS, renkleri değiştirerek, alt çizgileri kaldırarak veya üzerine gelme efektleri ekleyerek bağlantıları daha iyi bir kullanıcı deneyimi için geliştirebilir.",
                "codeTitle2": "Örnek: Stilize Edilmiş Bağlantılar",
                "note1": "Bağlantıların geçerli hedeflere işaret ettiğinden emin olmak için her zaman test edin.",
                "title4": "Bağlantılar için En İyi Uygulamalar",
                "paragraph4": "Gezinmeyi ve kullanıcı katılımını iyileştirmek için net ve erişilebilir bağlantılar oluşturun.",
                "list2Item1": "'Buraya tıklayın' gibi belirsiz terimlerden kaçınarak açıklayıcı bağlantı metni kullanın.",
                "list2Item2": "Mümkün olduğunda güvenli bağlantılar için https:// kullanın."
            },
            "page2": {
                "pageTitle": "Dahili ve Harici Bağlantılar",
                "title1": "Bağlantı Türlerini Anlama",
                "paragraph1": "Bağlantılar, web siteniz içindeki sayfalara işaret eden dahili veya diğer web sitelerine bağlanan harici olabilir ve her biri farklı amaçlara hizmet eder.",
                "title2": "Dahili ve Harici Bağlantı Temelleri",
                "paragraph2": "Dahili bağlantılar göreli URL'ler kullanır, harici bağlantılar ise http:// veya https:// ile başlayan mutlak URL'ler kullanır.",
                "list1Item1": "Dahili bağlantılar (örneğin, /hakkinda) siteniz içinde gezinir.",
                "list1Item2": "Harici bağlantılar (örneğin, https://ornek.com) diğer sitelere bağlanır.",
                "codeTitle1": "Örnek: Dahili ve Harici Bağlantılar",
                "title3": "Bağlantı Türlerini Farklı Stilize Etme",
                "paragraph3": "Dahili ve harici bağlantıları görsel olarak ayırmak için CSS sınıflarını kullanarak kullanıcı deneyimini ve netliği artırın.",
                "codeTitle2": "Örnek: Stilize Edilmiş Dahili ve Harici Bağlantılar",
                "note1": "Güvenlik için harici bağlantılarda her zaman https:// kullanın.",
                "title4": "Bağlantı Türleri için En İyi Uygulamalar",
                "paragraph4": "Gezinmeyi ve kullanıcı güvenini artırmak için doğru bağlantı türünü seçin.",
                "list2Item1": "İlgili içerik için kullanıcıları sitenizde tutmak için dahili bağlantılar kullanın.",
                "list2Item2": "Daha iyi kullanıcı deneyimi için harici bağlantıları yeni sekmelerde açmak için target='_blank' kullanın."
            },
            "page3": {
                "pageTitle": "Gezinme Çubuğu Temelleri (<nav> Kullanımı)",
                "title1": "Gezinme Çubuğu Nedir?",
                "paragraph1": "HTML'deki <nav> etiketi, kullanıcıların web sitesinde sayfalara arasında gezinmesine yardımcı olmak için bağlantıları gruplandıran bir gezinme çubuğu oluşturur.",
                "title2": "Basit Bir Gezinme Çubuğu Oluşturma",
                "paragraph2": "Basit bir gezinme çubuğu, Ana Sayfa veya Hakkında gibi önemli bölümlere bağlantılar içeren <a> etiketlerini barındıran <nav> etiketini kullanır.",
                "list1Item1": "<nav>, erişilebilirliği artıran semantik bir etikettir.",
                "list1Item2": "Gezinme için href öznitelikli <a> etiketlerini içerir.",
                "codeTitle1": "Örnek: Basit Gezinme Çubuğu",
                "title3": "Gezinme Çubuklarını Genişletme",
                "paragraph3": "Yapıyı net ve düzenli tutarak ek sayfalar eklemek için <nav> etiketine daha fazla bağlantı ekleyebilirsiniz.",
                "codeTitle2": "Örnek: Genişletilmiş Gezinme Çubuğu",
                "note1": "Daha iyi kullanıcı deneyimi için <nav> içinde anlamlı bağlantı metni kullanın.",
                "title4": "Gezinme Çubukları için İpuçları",
                "paragraph4": "Etkili gezinme çubukları basit ve sezgiseldir, kullanıcıları zahmetsizce yönlendirir.",
                "list2Item1": "Kalabalıktan kaçınmak için bağlantıları temel sayfalara sınırlayın.",
                "list2Item2": "Kolay erişim için <nav> etiketini üstte veya yanda konumlandırın."
            },
            "page4": {
                "pageTitle": "Çapa Bağlantıları: Aynı Sayfada Belirli Bölümlere Bağlantı",
                "title1": "Çapa Bağlantıları Nedir?",
                "paragraph1": "Çapa bağlantıları, aynı web sayfasında belirli bölümlere atlamak için bir ID ve # işaretiyle <a> etiketini kullanır.",
                "title2": "Temel Çapa Bağlantıları Oluşturma",
                "paragraph2": "Sayfadaki farklı bölümlere gezinmek için <a href='#id'> kullanarak 'id' özniteliği olan elementlere bağlanın.",
                "list1Item1": "href değeri, # ile başlar ve hedef elementin ID'sini içerir.",
                "list1Item2": "ID'ler bir sayfada benzersiz olmalıdır.",
                "codeTitle1": "Örnek: Temel Çapa Bağlantıları",
                "title3": "Gezinme için Çapa Bağlantıları Kullanma",
                "paragraph3": "Çapa bağlantıları, bir içindekiler tablosu oluşturabilir veya bölümlere hızlı erişim sağlayarak kullanıcı gezinmesini iyileştirir.",
                "codeTitle2": "Örnek: Genişletilmiş Çapa Bağlantıları",
                "note1": "Gezinme hatalarını önlemek için ID'lerin açıklayıcı ve benzersiz olduğundan emin olun.",
                "title4": "Çapa Bağlantıları için İpuçları",
                "paragraph4": "Kullanıcıları bunaltmadan uzun sayfalarda gezinmeyi iyileştirmek için çapa bağlantıları kullanın.",
                "list2Item1": "Bölüm erişimi için çapa bağlantılarını bir <nav> içinde yerleştirin.",
                "list2Item2": "Sayfa başına kolay dönüş için 'Başa dön' bağlantıları ekleyin."
            },
            "page5": {
                "pageTitle": "Bağlantıları Yeni Sekmelerde Açmak için target=\"_blank\" Kullanımı",
                "title1": "target='_blank' Özniteliği Nedir?",
                "paragraph1": "<a> etiketindeki target='_blank' özniteliği, bağlantılı sayfaları yeni bir tarayıcı sekmesinde açar ve mevcut sayfayı erişilebilir tutar.",
                "title2": "Harici Bağlantılar için target='_blank' Kullanımı",
                "paragraph2": "Kullanıcı deneyimini iyileştirmek için harici web sitelerini yeni sekmelerde açmak için <a> etiketlerine target='_blank' ekleyin.",
                "list1Item1": "target='_blank', herhangi bir <a> etiketinin href özniteliğiyle çalışır.",
                "list1Item2": "Kullanıcıları sitenizde tutmak için genellikle harici bağlantılarda kullanılır.",
                "codeTitle1": "Örnek: Temel target='_blank' Bağlantıları",
                "title3": "Gezinmede target='_blank' Entegrasyonu",
                "paragraph3": "Dahili bağlantıları aynı sekmede tutarken, harici bağlantılar için <nav> içinde target='_blank' kullanın.",
                "codeTitle2": "Örnek: target='_blank' ile Gezinme",
                "note1": "Çok fazla sekme açmaktan kaçınmak için target='_blank' etiketini dikkatli kullanın.",
                "title4": "target='_blank' Kullanımı için İpuçları",
                "paragraph4": "Kullanılabilirlik ve gezinme dengesini sağlamak için target='_blank' etiketini dikkatli uygulayın.",
                "list2Item1": "Güvenilir ve ilgili sitelere harici bağlantılar için kullanın.",
                "list2Item2": "Bağlantıların yeni sekmelerde açıldığını kullanıcılara bildirin."
            }
        },
        "chapter5": {
            "title": "Bölüm 5: HTML'de Listeler",
            "page1": {
                "pageTitle": "Sırasız Listeler: <ul> ve <li>",
                "title1": "Sırasız Listeler Nedir?",
                "paragraph1": "<ul> etiketi HTML'de sırasız bir liste oluşturur ve her liste öğesini tanımlayan <li> etiketleri varsayılan olarak madde işaretleriyle görüntülenir.",
                "title2": "Temel Sırasız Liste Oluşturma",
                "paragraph2": "Sıralamanın önemli olmadığı listeler için öğeleri gruplamak için <ul> ve her giriş için <li> kullanın.",
                "list1Item1": "<ul>, tüm listeyi sarar ve <li>, tek tek öğeleri tanımlar.",
                "list1Item2": "Her <li>, bir madde işareti olarak görüntülenir.",
                "codeTitle1": "Örnek: Temel Sırasız Liste",
                "title3": "Sırasız Listeleri İç İçe Yerleştirme",
                "paragraph3": "İçeriği hiyerarşik olarak düzenlemek için <li> etiketleri içine <ul> etiketleri yerleştirerek alt listeler oluşturabilirsiniz.",
                "codeTitle2": "Örnek: İç İçe Sırasız Liste",
                "note1": "Doğru yapıyı korumak için her <li>'nin doğrudan bir <ul> içinde olduğundan emin olun.",
                "title4": "Sırasız Listeler için İpuçları",
                "paragraph4": "Sırasız listeler, menüler, özellikler veya sıralı olmayan öğeler için harikadır.",
                "list2Item1": "Okunabilirlik için liste öğelerini kısa tutun.",
                "list2Item2": "Karmaşık yapılar oluşturmamak için iç içe geçmeyi dikkatli kullanın."
            },
            "page2": {
                "pageTitle": "Sıralı Listeler: <ol> ve <li>",
                "title1": "Sıralı Listeler Nedir?",
                "paragraph1": "<ol> etiketi HTML'de sıralı bir liste oluşturur ve her öğeyi tanımlayan <li> etiketleri varsayılan olarak numaralarla görüntülenir.",
                "title2": "Temel Sıralı Liste Oluşturma",
                "paragraph2": "Sıralamanın önemli olduğu listeler, örneğin adımlar veya sıralamalar için öğeleri gruplamak için <ol> ve her giriş için <li> kullanın.",
                "list1Item1": "<ol>, listeyi sarar ve <li>, tek tek öğeleri tanımlar.",
                "list1Item2": "Her <li>, sırayla numaralandırılır.",
                "codeTitle1": "Örnek: Temel Sıralı Liste",
                "title3": "Sıralı Listeleri İç İçe Yerleştirme",
                "paragraph3": "Ayrıntılı anahatlar veya hiyerarşik adımlar için <li> etiketleri içine <ol> etiketleri yerleştirerek alt listeler oluşturun.",
                "codeTitle2": "Örnek: İç İçe Sıralı Liste",
                "note1": "Doğru numaralandırma için <li> etiketlerinin doğrudan <ol> içinde olduğundan emin olun.",
                "title4": "Sıralı Listeler için İpuçları",
                "paragraph4": "Sıralı listeler, talimatlar, sıralamalar veya sıralı içerik için idealdir.",
                "list2Item1": "Kolay okuma için öğeleri net ve kısa tutun.",
                "list2Item2": "Alt adımlar netliği artırdığında iç içe geçmeyi kullanın."
            },
            "page3": {
                "pageTitle": "Tanım Listeleri: <dl>, <dt> ve <dd>",
                "title1": "Tanım Listeleri Nedir?",
                "paragraph1": "<dl> etiketi, terimler için <dt> ve açıklamaları için <dd> ile bir tanım listesi oluşturur, sözlükler veya SSS'ler için idealdir.",
                "title2": "Temel Tanım Listesi Oluşturma",
                "paragraph2": "Terimleri ve açıklamaları gruplamak için <dl>, her terim için <dt> ve tanımı için <dd> kullanın.",
                "list1Item1": "<dt>, terimi tanımlar ve <dd>, açıklamasını sağlar.",
                "list1Item2": "Tek bir <dt> için birden fazla <dd> kullanılabilir.",
                "codeTitle1": "Örnek: Temel Tanım Listesi",
                "title3": "Birden Fazla Açıklama Kullanımı",
                "paragraph3": "Tek bir <dt>, ek detaylar veya alternatif açıklamalar sağlamak için birden fazla <dd> etiketine sahip olabilir.",
                "codeTitle2": "Örnek: Genişletilmiş Tanım Listesi",
                "note1": "Doğru yapıyı korumak için <dt> ve <dd> çiftlerini <dl> içinde tutun.",
                "title4": "Tanım Listeleri için İpuçları",
                "paragraph4": "Tanım listeleri, terimleri ve anlamlarını net bir şekilde sunmak için harikadır.",
                "list2Item1": "Netlik için <dt>'de kısa terimler kullanın.",
                "list2Item2": "Mantıksal akışı sürdürmek için ilgili terimleri gruplayın."
            },
            "page4": {
                "pageTitle": "Listeleri İç İçe Yerleştirme",
                "title1": "Liste İç İçe Yerleştirme Nedir?",
                "paragraph1": "Liste iç içe yerleştirme, hiyerarşik yapılar oluşturmak için bir listenin içine başka bir liste, <ul>, <ol> veya <dl> yerleştirmeyi içerir.",
                "title2": "Basit İç İçe Listeler Oluşturma",
                "paragraph2": "İlgili öğeleri ana öğenin altında düzenlemek için bir <li> içine <ul> veya <ol> yerleştirerek alt listeler oluşturun.",
                "list1Item1": "İç içe listeler bir <li> etiketi içinde olmalıdır.",
                "list1Item2": "Alt listeler, ana listenin yapısını miras alır.",
                "codeTitle1": "Örnek: Basit İç İçe Liste",
                "title3": "Liste Türlerini Karıştırma",
                "paragraph3": "Numaralı ve madde işaretli öğelerle anahatlar gibi karmaşık hiyerarşileri temsil etmek için iç içe yapılarda <ul> ve <ol> birleştirin.",
                "codeTitle2": "Örnek: Karışık İç İçe Liste",
                "note1": "Okunabilirliği sürdürmek için iç içe geçme seviyelerini sığ tutun.",
                "title4": "İç İçe Listeler için İpuçları",
                "paragraph4": "İç içe listeler, karmaşık bilgileri düzenlemeye yardımcı olur ancak karışıklığı önlemek için dikkatli kullanılmalıdır.",
                "list2Item1": "İç içe geçmeyi iki veya üç seviye ile sınırlayın.",
                "list2Item2": "Alt listelerin ana öğeyle mantıksal olarak ilişkili olduğundan emin olun."
            }
        },
        "chapter6": {
            "title": "Bölüm 6: Görüntüler ve Medya",
            "page1": {
                "pageTitle": "Görüntü ekleme",
                "title1": "HTML Görüntüleri Nedir?",
                "paragraph1": "<img> etiketi, HTML'de görüntüleri gömmek için kullanılır; görüntü kaynağı için 'src' ve erişilebilirlik metni için 'alt' kullanılır.",
                "title2": "Temel Bir Görüntü Ekleme",
                "paragraph2": "Görüntü dosyasının yolunu belirtmek için 'src' ve görüntüyü tarif etmek için 'alt' ile <img> etiketini kullanın.",
                "list1Item1": "'src', yerel veya çevrimiçi görüntülere işaret edebilir.",
                "list1Item2": "'alt', erişilebilirliği ve SEO'yu iyileştirir.",
                "codeTitle1": "Örnek: Temel Görüntü",
                "title3": "Birden Fazla Görüntü Kullanma",
                "paragraph3": "Birden fazla görüntü göstermek için her biri kendi 'src' ve 'alt' özelliklerine sahip birkaç <img> etiketi ekleyin.",
                "codeTitle2": "Örnek: Birden Fazla Görüntü",
                "note1": "Erişilebilirlik için her zaman 'alt' özelliğini ekleyin.",
                "title4": "Görüntü Ekleme İpuçları",
                "paragraph4": "Görüntüler görsel çekiciliği artırır ancak amaçlı kullanılmalıdır.",
                "list2Item1": "Netlik için açıklayıcı 'alt' metni kullanın.",
                "list2Item2": "Görüntü dosyalarının web sayfası tarafından erişilebilir olduğundan emin olun."
            },
            "page2": {
                "pageTitle": "Görüntü özellikleri: src, alt, width, height",
                "title1": "Görüntü Özellikleri Nedir?",
                "paragraph1": "<img> etiketi, görüntü kaynağı, açıklama ve boyutları tanımlamak için src, alt, width ve height gibi özellikleri kullanır.",
                "title2": "Temel Görüntü Özelliklerini Kullanma",
                "paragraph2": "Görüntü yolunu src, erişilebilirlik için alt ve piksel cinsinden boyutları kontrol etmek için width/height ile ayarlayın.",
                "list1Item1": "src ve alt, işlevsellik ve erişilebilirlik için gereklidir.",
                "list1Item2": "width ve height, tutarlı görüntüleme sağlar.",
                "codeTitle1": "Örnek: Temel Görüntü Özellikleri",
                "title3": "Birden Fazla Görüntüye Özellik Uygulama",
                "paragraph3": "Bağlama uygun farklı width ve height değerlerini kullanarak birden fazla görüntü için net alt metni koruyun.",
                "codeTitle2": "Örnek: Birden Fazla Görüntü Özelliği",
                "note1": "Yükleme sırasında düzen kaymalarını önlemek için width ve height belirtin.",
                "title4": "Görüntü Özellikleri için İpuçları",
                "paragraph4": "Görüntü özelliklerinin doğru kullanımı, erişilebilirliği ve sayfa performansını artırır.",
                "list2Item1": "Ekran okuyucular için doğru alt metni kullanın.",
                "list2Item2": "Width ve height değerlerini görüntünün en boy oranına uygun tutun."
            },
            "page3": {
                "pageTitle": "<video> elementi ile video gömme",
                "title1": "<video> Elementi Nedir?",
                "paragraph1": "<video> etiketi, MP4 ve WebM gibi formatları destekleyen ve oynatma kontrolleri sunan HTML'de video içeriğini gömer.",
                "paragraph1a": "HTML5'te tanıtılan bu etiket, Flash gibi harici eklentilere bağımlı olmadan videoları dahil etmenin yerel bir yolunu sunar.",
                "title2": "Temel Bir Video Ekleme",
                "paragraph2": "Video dosyasını belirtmek için src özelliği ve kullanıcı etkileşimi için controls ile <video> etiketini kullanın.",
                "paragraph2a": "Elementi desteklemeyen tarayıcılar için etiketler arasına yedek metin ekleyin.",
                "list1Item1": "Controls özelliği, oynatma, duraklatma ve ses düğmeleri ekler.",
                "list1Item2": "src, video dosyasının yolunu belirtir.",
                "codeTitle1": "Örnek: Temel Video",
                "title3": "Gelişmiş Video Özelliklerini Kullanma",
                "paragraph3": "Width, height, autoplay ve muted gibi özellikleri ekleyin veya birden fazla format için <source> etiketlerini kullanın.",
                "paragraph3a": "Birden fazla <source> etiketi, farklı format desteği olan tarayıcılarda uyumluluğu sağlar.",
                "codeTitle2": "Örnek: Gelişmiş Video",
                "note1": "Uyumluluğu sağlamak için videoları birden fazla tarayıcıda test edin.",
                "title4": "Videoları Gömme İpuçları",
                "paragraph4": "Videolar etkileşimi artırır ancak performans için dikkatli uygulanmalıdır.",
                "paragraph4a": "Yükleme sürelerini ve bant genişliği kullanımını azaltmak için video dosyalarını optimize edin.",
                "list2Item1": "Erişilebilirlik için yedek metin sağlayın.",
                "list2Item2": "Geniş uyumluluk için MP4 gibi desteklenen formatları kullanın."
            },
            "page4": {
                "pageTitle": "<audio> elementi ile ses gömme",
                "title1": "<audio> Elementi Nedir?",
                "paragraph1": "<audio> etiketi, MP3 ve OGG gibi formatları destekleyen ve oynatma kontrolleri sunan HTML'de ses içeriğini gömer.",
                "paragraph1a": "HTML5'te tanıtılan bu etiket, eski eklenti tabanlı yöntemlerin yerini alan yerel bir ses çözümü sağlar.",
                "title2": "Temel Bir Ses Dosyası Ekleme",
                "paragraph2": "Ses dosyasını belirtmek için src özelliği ve kullanıcı oynatımı için controls ile <audio> etiketini kullanın.",
                "paragraph2a": "Ses desteği olmayan tarayıcılar için etiketler arasına yedek metin ekleyin.",
                "list1Item1": "Controls özelliği, oynatma, duraklatma ve ses kontrolleri ekler.",
                "list1Item2": "src, ses dosyasının yolunu tanımlar.",
                "codeTitle1": "Örnek: Temel Ses",
                "title3": "Gelişmiş Ses Özelliklerini Kullanma",
                "paragraph3": "Autoplay ve loop gibi özellikleri ekleyin veya birden fazla ses formatı için <source> etiketlerini kullanın.",
                "paragraph3a": "Birden fazla <source> etiketi, farklı format desteği olan tarayıcılarda uyumluluğu artırır.",
                "codeTitle2": "Örnek: Gelişmiş Ses",
                "note1": "Erişilebilirlik ve uyumluluk için her zaman yedek metin ekleyin.",
                "title4": "Ses Gömme İpuçları",
                "paragraph4": "Ses, kullanıcı deneyimini zenginleştirir ancak performans için optimize edilmelidir.",
                "paragraph4a": "Yükleme sürelerini ve bant genişliği kullanımını en aza indirmek için ses dosyalarını sıkıştırın.",
                "list2Item1": "Geniş çapta desteklenen MP3 gibi formatları kullanın.",
                "list2Item2": "Farklı tarayıcılarda ses oynatımını test edin."
            },
            "page5": {
                "pageTitle": "Harici içeriği <iframe> etiketi ile gömme",
                "title1": "<iframe> Etiketi Nedir?",
                "paragraph1": "<iframe> etiketi, web sayfaları, haritalar veya videolar gibi harici içeriği bir HTML belgesine gömer.",
                "paragraph1a": "Ayrı bir tarama bağlamı oluşturarak üçüncü taraf içeriğinin sorunsuz entegrasyonunu sağlar.",
                "title2": "<iframe> ile Temel İçerik Gömme",
                "paragraph2": "Harici içeriğin URL'sini belirtmek için src özelliği ve görüntüleme boyutunu ayarlamak için width ve height kullanın.",
                "paragraph2a": "Yaygın kullanımlar arasında haritalar veya sosyal medya araçlarının doğrudan bir sayfaya gömülmesi yer alır.",
                "list1Item1": "src, gömülü içeriğin URL'sini tanımlar.",
                "list1Item2": "width ve height, iframe'in boyutlarını kontrol eder.",
                "codeTitle1": "Örnek: Temel Iframe",
                "title3": "Birden Fazla Iframe Gömme",
                "paragraph3": "Aynı sayfada videolar ve formlar gibi farklı içerik türlerini gömmek için birden fazla <iframe> etiketi kullanın.",
                "paragraph3a": "Title özelliği eklemek, iframe'in amacını tarif ederek erişilebilirliği artırır.",
                "codeTitle2": "Örnek: Gelişmiş Iframe",
                "note1": "Güvenlik risklerini önlemek için harici içeriğin güvenilir kaynaklardan olduğundan emin olun.",
                "title4": "Iframe Kullanımı için İpuçları",
                "paragraph4": "Iframe'ler içerik gömmek için güçlüdür ancak performansı korumak için dikkatli kullanılmalıdır.",
                "paragraph4a": "Gömülü içeriğin hizmet şartlarına uyduğunuzdan emin olun.",
                "list2Item1": "Tam ekran desteği için allowfullscreen özelliğini kullanın.",
                "list2Item2": "Tutarlı görüntüleme için iframe'leri farklı tarayıcılarda test edin."
            }
        },
        "chapter7": {
            "title": "Bölüm 7: HTML'de Tablolar",
            "page1": {
                "pageTitle": "<table> ile tablo oluşturma",
                "title1": "<table> Etiketi Nedir?",
                "paragraph1": "<table> etiketi, HTML'de verileri satır ve sütunlara düzenleyerek yapılandırılmış tablolar oluşturur.",
                "paragraph1a": "Satırlar için <tr>, başlık hücreleri için <th> ve veri hücreleri için <td> kullanır; programlar veya envanterler için idealdir.",
                "paragraph1b": "Tablolar, tablo verilerini açık ve erişilebilir bir şekilde sunmak için tasarlanmış anlamsal öğelerdir.",
                "title2": "Basit Bir Tablo Oluşturma",
                "paragraph2": "Başlamak için <table>, her satır için <tr>, başlıklar için <th> ve veri hücreleri için <td> kullanın.",
                "paragraph2a": "Temel bir tablo genellikle bir başlık satırı ve birkaç veri satırından oluşur.",
                "paragraph2b": "Tablolar, zaman çizelgeleri veya etkinlik planları gibi bilgileri sunmak için idealdir.",
                "list1Item1": "<th>, genellikle varsayılan olarak kalın ve ortalanmış başlıklar tanımlar.",
                "list1Item2": "<td>, tablodaki her hücrenin verilerini içerir.",
                "codeTitle1": "Örnek: Basit Tablo",
                "title3": "Çok Satırlı Tablo Oluşturma",
                "paragraph3": "Ek satırlar oluşturmak için birden fazla <tr> etiketi ekleyin, her biri gerektiğinde <td> veya <th> içerir.",
                "paragraph3a": "Hizalamayı korumak için her satırın aynı sayıda hücreye sahip olduğundan emin olun.",
                "paragraph3b": "Çok satırlı tablolar, ürün listeleri veya çalışan kayıtları gibi büyük veri kümeleri için kullanışlıdır.",
                "codeTitle2": "Örnek: Çok Satırlı Tablo",
                "title4": "Farklı Sütunlarla Tablo Ekleme",
                "paragraph4": "Tablolar, farklı veri türlerine uygun olarak değişen sütun sayılarına sahip olabilir.",
                "paragraph4a": "Örneğin, bir tablo adlar, roller ve departmanlar için sütunlar içerebilir.",
                "paragraph4b": "Tablo yapısını her zaman verinin organizasyonuna uygun şekilde planlayın.",
                "codeTitle3": "Örnek: Çalışan Tablosu",
                "note1": "Anlamsal HTML uygulamalarını takip etmek için tabloları yalnızca veri için kullanın, düzen için değil.",
                "title5": "Tablo Oluşturma İpuçları",
                "paragraph5": "Tablolar veri sunumu için güçlüdür ancak netlik için dikkatli tasarlanmalıdır.",
                "paragraph5a": "Doğru işaretleme, özellikle ekran okuyucular için erişilebilirliği sağlar.",
                "paragraph5b": "Karmaşık yapılarla kullanıcıları bunaltmamak için tabloları basit tutun.",
                "list2Item1": "Her sütun için <th> ile başlıklar ekleyin.",
                "list2Item2": "Satırlarda tutarlı hücre sayısını koruyun."
            },
            "page2": {
                "pageTitle": "Tablo satırları: <tr>",
                "title1": "<tr> Etiketi Nedir?",
                "paragraph1": "<tr> etiketi, HTML tablosunda bir satırı tanımlar ve başlık veya veri hücreleri içerir.",
                "paragraph1a": "Her <tr>, tablonun yapısını oluşturan <th> başlıkları veya <td> verileri içerir.",
                "paragraph1b": "Satırlar, içeriği yatay olarak düzenleyen tabloların omurgasıdır.",
                "title2": "Temel Bir Tablo Satırı Oluşturma",
                "paragraph2": "Bir satır oluşturmak için <table> içinde <tr> kullanın ve hücreler için <th> veya <td> ekleyin.",
                "paragraph2a": "Basit bir tablo, başlıklar için bir <tr> ve veriler için ek <tr> içerebilir.",
                "paragraph2b": "Tutarlılık için her <tr> etiketinin aynı sayıda hücreye sahip olduğundan emin olun.",
                "list1Item1": "<tr>, tek bir satırdaki tüm hücreleri sarar.",
                "list1Item2": "Başlıklar için ilk <tr> içinde <th> kullanın.",
                "codeTitle1": "Örnek: Temel Tablo Satırları",
                "title3": "Birden Fazla Tablo Satırı Kullanma",
                "paragraph3": "Birden fazla veri satırı içeren tablolar oluşturmak için birkaç <tr> etiketi ekleyin.",
                "paragraph3a": "Her <tr>, bir etkinlik veya satış gibi benzersiz bir kaydı temsil edebilir.",
                "paragraph3b": "Tablo hizasını korumak için <tr> etiketlerinde tutarlı hücre sayıları kullanın.",
                "codeTitle2": "Örnek: Çok Satırlı Tablo",
                "title4": "Başlık Odaklı Satırlar",
                "paragraph4": "Veri ağırlıklı tablolarda sütunları net bir şekilde etiketlemek için <th> ile <tr> kullanın.",
                "paragraph4a": "Başlık satırları, özellikle raporlarda veya özetlerde okunabilirliği artırır.",
                "paragraph4b": "Başlık <tr> etiketini önce yerleştirin, ardından veri <tr> etiketlerini ekleyin.",
                "codeTitle3": "Örnek: Başlık Odaklı Tablo",
                "note1": "Hizasızlığı önlemek için her <tr> etiketinin aynı sayıda hücreye sahip olduğundan emin olun.",
                "title5": "Tablo Satırları için İpuçları",
                "paragraph5": "Tablo satırları, HTML tablolarında verileri net bir şekilde düzenlemek için gereklidir.",
                "paragraph5a": "Doğru satır yapısı, erişilebilirliği ve kullanıcı anlayışını iyileştirir.",
                "list2Item1": "Her mantıksal veri satırı için bir <tr> kullanın.",
                "list2Item2": "Tüm <tr> etiketlerinde tutarlı hücre sayısını koruyun."
            },
            "page3": {
                "pageTitle": "Tablo başlıkları: <th>",
                "title1": "<th> Etiketi Nedir?",
                "paragraph1": "<th> etiketi, HTML tablosunda genellikle ilk satırda kullanılan başlık hücrelerini tanımlar.",
                "paragraph1a": "Başlıklar, tablo verilerine bağlam sağlar ve tabloları anlamayı kolaylaştırır.",
                "paragraph1b": "<td>'den farklı olarak, <th> hücreleri genellikle varsayılan olarak kalın ve ortalanmış olur.",
                "title2": "Temel Tablo Başlıkları Oluşturma",
                "paragraph2": "Tablonun sütunları için başlık hücreleri oluşturmak için <tr> içinde <th> kullanın.",
                "paragraph2a": "Tablonun yapısını etiketlemek için <th> etiketlerini ilk <tr> içine yerleştirin.",
                "paragraph2b": "Başlıklar, programlar veya veri özetlerinde netlik için çok önemlidir.",
                "list1Item1": "<th> etiketleri başlık satırında kullanılır.",
                "list1Item2": "Her sütundaki verileri tarif eder.",
                "codeTitle1": "Örnek: Temel Tablo Başlıkları",
                "title3": "Çok Sütunlu Tablolarda Başlıklar",
                "paragraph3": "Her birini net bir şekilde etiketlemek için birden fazla sütun içeren tablolarda <th> kullanın.",
                "paragraph3a": "Her <th>, aşağıdaki <td> hücreleriyle hizalanan bir sütuna karşılık gelir.",
                "paragraph3b": "Bu yaklaşım, finansal veya envanter tabloları için idealdir.",
                "codeTitle2": "Örnek: Çok Sütunlu Başlıklar",
                "title4": "Erişilebilirlik ile Başlıklar",
                "paragraph4": "Tablo erişilebilirliğini iyileştirmek için <th> etiketlerine scope özelliği ekleyin.",
                "paragraph4a": "scope='col' özelliği, başlığın bir sütuna uygulandığını belirtir.",
                "paragraph4b": "Bu, ekran okuyucuların tabloyu doğru bir şekilde yorumlamasına yardımcı olur.",
                "codeTitle3": "Örnek: Erişilebilir Başlıklar",
                "note1": "Anlamsal ve erişilebilir tablolar sağlamak için başlıklar için her zaman <th> kullanın.",
                "title5": "Tablo Başlıkları için İpuçları",
                "paragraph5": "Tablo başlıkları, HTML tablolarında veri netliğini ve erişilebilirliği artırır.",
                "paragraph5a": "Net başlıklar, kullanıcıların ve yardımcı teknolojilerin tablo içeriğini anlamasına yardımcı olur.",
                "list2Item1": "Sütun başlıkları için <th> etiketini ilk satıra yerleştirin.",
                "list2Item2": "Erişilebilirlik için scope özelliğini kullanın."
            },
            "page4": {
                "pageTitle": "Tablo verileri: <td>",
                "title1": "<td> Etiketi Nedir?",
                "paragraph1": "<td> etiketi, HTML tablosunda her hücrenin içeriğini tutan veri hücrelerini tanımlar.",
                "paragraph1a": "<tr> içinde kullanılan <td> etiketleri, metin, sayı veya tarih gibi verileri depolar.",
                "paragraph1b": "<th>'den farklı olarak, <td> hücreleri genellikle varsayılan olarak kalın veya ortalanmış değildir.",
                "title2": "Temel Tablo Verileri Oluşturma",
                "paragraph2": "Başlık satırından sonra veri hücreleri eklemek için <tr> içinde <td> etiketlerini yerleştirin.",
                "paragraph2a": "Her <td>, bir tablo satırındaki tek bir veri parçasını temsil eder.",
                "paragraph2b": "Basit tablolar, alışveriş öğeleri gibi listeler veya temel kayıtlar için <td> kullanır.",
                "list1Item1": "<td> etiketleri tablonun veri içeriğini tutar.",
                "list1Item2": "Veri satırlarında <th> başlıklarını takip eder.",
                "codeTitle1": "Örnek: Temel Tablo Verileri",
                "title3": "Çok Satırlı Tablolarda Veriler",
                "paragraph3": "Birden fazla veri satırı ile tabloları doldurmak için birkaç <tr> etiketinde <td> kullanın.",
                "paragraph3a": "Her <td>, başlık satırı tarafından tanımlanan bir sütunla hizalanır.",
                "paragraph3b": "Bu, sipariş geçmişi veya günlükler gibi ayrıntılı kayıtlar için kullanışlıdır.",
                "codeTitle2": "Örnek: Çok Satırlı Veriler",
                "title4": "Karışık İçerikli Veriler",
                "paragraph4": "<td> etiketi, metin, tarih veya sayı gibi çeşitli içerik türlerini tutabilir.",
                "paragraph4a": "<td> etiketlerinde karışık içerik, proje takibi veya raporlar için tabloları destekler.",
                "paragraph4b": "<td> içeriğinin sütun başlığına açık ve ilgili olduğundan emin olun.",
                "codeTitle3": "Örnek: Karışık İçerikli Veriler",
                "note1": "Tablo okunabilirliğini korumak için <td> içeriğini kısa tutun.",
                "title5": "Tablo Verileri için İpuçları",
                "paragraph5": "Tablo veri hücreleri, HTML tablolarında bilgileri net bir şekilde sunmak için anahtardır.",
                "paragraph5a": "İyi yapılandırılmış <td> etiketleri, tablo kullanılabilirliğini ve netliğini artırır.",
                "list2Item1": "<td> hücrelerini ilgili <th> başlıklarıyla hizalayın.",
                "list2Item2": "<td> etiketlerinde kısa, kesin veriler kullanın."
            },
            "page5": {
                "pageTitle": "Tablo özellikleri: colspan, rowspan",
                "title1": "colspan ve rowspan Nedir?",
                "paragraph1": "colspan ve rowspan özellikleri, HTML tablosunda hücrelerin birden fazla sütun veya satır boyunca yayılmasını sağlar.",
                "paragraph1a": "<td> veya <th> ile kullanılan bu özellikler, karmaşık tablo düzenleri oluşturmak için hücreleri birleştirir.",
                "paragraph1b": "Bu özellikler, verileri özetlemek veya ilgili içeriği gruplamak için kullanışlıdır.",
                "title2": "Sütun Yayılımı için colspan Kullanma",
                "paragraph2": "colspan özelliği, bir hücrenin bir satırda birden fazla sütun boyunca yayılmasını sağlar.",
                "paragraph2a": "colspan değerini, hücrenin kapsaması gereken sütun sayısına ayarlayın.",
                "paragraph2b": "Bu, birden fazla sütuna uygulanan başlıklar veya özet hücreleri için idealdir.",
                "list1Item1": "colspan, hücreleri yatay olarak birleştirir.",
                "list1Item2": "<tr> içinde <td> veya <th> ile kullanın.",
                "codeTitle1": "Örnek: Temel Colspan",
                "title3": "Satır Yayılımı için rowspan Kullanma",
                "paragraph3": "rowspan özelliği, bir hücrenin tabloda birden fazla satır boyunca yayılmasını sağlar.",
                "paragraph3a": "rowspan değerini, hücrenin işgal etmesi gereken satır sayısına ayarlayın.",
                "paragraph3b": "Bu, birkaç girdiyi kapsayan bir kategori gibi verileri gruplamak için kullanışlıdır.",
                "codeTitle2": "Örnek: Temel Rowspan",
                "title4": "colspan ve rowspan Birleştirme",
                "paragraph4": "Gelişmiş düzenler için bir tabloda hem colspan hem de rowspan kullanın.",
                "paragraph4a": "Bunların birleştirilmesi, hem satırları hem de sütunları kapsayan hücreler oluşturur.",
                "paragraph4b": "Bu, özetler veya organizasyon şemaları için yaygındır.",
                "codeTitle3": "Örnek: Colspan ve Rowspan Birleşimi",
                "note1": "Tablo hizasızlığını önlemek için colspan ve rowspan değerlerini dikkatle planlayın.",
                "title5": "Tablo Özellikleri için İpuçları",
                "paragraph5": "colspan ve rowspan, tablo esnekliğini artırır ancak hassas planlama gerektirir.",
                "paragraph5a": "Tüm kullanıcılar için netlik ve erişilebilirlik sağlamak için tabloları test edin.",
                "list2Item1": "Netlik için colspan ve rowspan değerlerini dikkatli kullanın.",
                "list2Item2": "Tablo yapısını korumak için hücre sayılarını doğrulayın."
            },
            "page6": {
                "pageTitle": "Altyazılar ekleme: <caption>",
                "title1": "<caption> Etiketi Nedir?",
                "paragraph1": "<caption> etiketi, HTML tablosuna bir başlık veya açıklama ekler ve doğrudan <table> etiketinden sonra yer alır.",
                "paragraph1a": "Tablonun amacını veya içeriğini özetleyerek daha iyi anlaşılmasını sağlar.",
                "paragraph1b": "Altyazılar, ekran okuyucuların tablonun amacını iletmesine yardımcı olarak erişilebilirliği artırır.",
                "title2": "Temel Bir Altyazı Oluşturma",
                "paragraph2": "İçeriğini tarif eden basit bir başlık eklemek için tablonun üstünde <caption> kullanın.",
                "paragraph2a": "Doğru yapı için <table> öğesinin ilk alt öğesi olarak yerleştirin.",
                "paragraph2b": "Temel altyazılar, programlar veya planlar gibi küçük tablolar için idealdir.",
                "list1Item1": "<caption>, <table> içindeki ilk öğedir.",
                "list1Item2": "Tablonun amacını tarif eder.",
                "codeTitle1": "Örnek: Temel Altyazı",
                "title3": "Açıklayıcı Altyazılar Kullanma",
                "paragraph3": "Finansal veriler gibi karmaşık tabloları açıklığa kavuşturmak için ayrıntılı altyazılar yazın.",
                "paragraph3a": "Açıklayıcı altyazılar, kullanıcıların tablonun odak noktasını hızlıca kavramasına yardımcı olur.",
                "paragraph3b": "Bu, raporlar veya çok sütunlu veri kümeleri için kullanışlıdır.",
                "codeTitle2": "Örnek: Açıklayıcı Altyazı",
                "title4": "Karmaşık Tablolarda Altyazılar",
                "paragraph4": "Performans ölçümleri veya anketler gibi karmaşık tabloları özetlemek için altyazılar kullanın.",
                "paragraph4a": "Net bir altyazı, tablodaki çeşitli veri noktalarını bir araya getirir.",
                "paragraph4b": "Netlik için altyazıların kısa ama bilgilendirici olduğundan emin olun.",
                "codeTitle3": "Örnek: Karmaşık Tablo ile Altyazı",
                "note1": "Erişilebilirlik ve tablo netliğini iyileştirmek için her zaman <caption> ekleyin.",
                "title5": "Altyazılar için İpuçları",
                "paragraph5": "Tablo altyazıları, HTML tablolarında kullanılabilirliği ve erişilebilirliği artırır.",
                "paragraph5a": "Etkili altyazılar, tabloları tüm kullanıcılar için daha sezgisel hale getirir.",
                "list2Item1": "Altyazıları kısa ve açıklayıcı tutun.",
                "list2Item2": "<caption> öğesini hemen <table> sonrasına yerleştirin."
            }
        },
        "chapter8": {
            "title": "Bölüm 8: Formlar ve Giriş Öğeleri",
            "page1": {
                "pageTitle": "Temel form yapısı",
                "title1": "<form> Etiketi Nedir?",
                "paragraph1": "<form> etiketi, HTML'de kullanıcıların veri girip göndermesine olanak tanıyan etkileşimli bir form oluşturur.",
                "paragraph1a": "Verilerin nereye ve nasıl gönderileceğini tanımlamak için action ve method gibi özellikler kullanır.",
                "paragraph1b": "Formlar, oturum açma veya geri bildirim gönderimi gibi kullanıcı etkileşimleri için gereklidir.",
                "title2": "Basit Bir Form Oluşturma",
                "paragraph2": "Temel bir giriş formu oluşturmak için <form> ile <input> ve <label> etiketlerini kullanın.",
                "paragraph2a": "Action özelliği, form verilerini işlemek için URL'yi belirtir.",
                "paragraph2b": "Method özelliği, örneğin POST, verilerin nasıl gönderileceğini belirler.",
                "list1Item1": "<label> etiketleri, girişlere bağlanarak erişilebilirliği artırır.",
                "list1Item2": "<input type='submit'>, bir gönder düğmesi oluşturur.",
                "codeTitle1": "Örnek: Basit Form",
                "title3": "Birden Fazla Girişli Formlar",
                "paragraph3": "Daha karmaşık veri toplama için bir <form> içinde birden fazla <input> öğesi ekleyin.",
                "paragraph3a": "Doğru veri işleme için her girişin benzersiz bir id ve name değerine sahip olması gerekir.",
                "paragraph3b": "Bu, oturum açma formları veya çeşitli alanlar gerektiren anketler için kullanışlıdır.",
                "codeTitle2": "Örnek: Oturum Açma Formu",
                "title4": "Farklı Giriş Türlerine Sahip Formlar",
                "paragraph4": "Çeşitli form ihtiyaçları için email veya textarea gibi çeşitli <input> türlerini kullanın.",
                "paragraph4a": "Textarea öğesi, yorumlar için ideal olan çok satırlı metin girişine izin verir.",
                "paragraph4b": "Farklı giriş türleri, kullanıcı deneyimini ve veri doğruluğunu artırır.",
                "codeTitle3": "Örnek: Geri Bildirim Formu",
                "note1": "Erişilebilirlik ve net kullanıcı rehberliği için her zaman etiketler ekleyin.",
                "title5": "Form Oluşturma İpuçları",
                "paragraph5": "Formlar, etkileşimli web sayfalarının temel bir parçasıdır ve dikkatli tasarım gerektirir.",
                "paragraph5a": "Net yapı ve etiketleme, kullanılabilirliği ve erişilebilirliği iyileştirir.",
                "list2Item1": "Action ve method özelliklerini uygun şekilde kullanın.",
                "list2Item2": "Her girişi açıklayıcı bir etiketle eşleştirin."
            },
            "page2": {
                "pageTitle": "Giriş türleri",
                "title1": "Giriş Türleri Nedir?",
                "paragraph1": "Giriş türleri, HTML form <input> öğelerinde kullanıcıların girebileceği veri türünü tanımlar.",
                "paragraph1a": "Text veya email gibi type özelliği, giriş davranışını ve doğrulamasını kontrol eder.",
                "paragraph1b": "Farklı giriş türleri, kullanıcı deneyimini artırır ve doğru veri toplanmasını sağlar.",
                "title2": "Metin ve E-posta Girişleri",
                "paragraph2": "Metin ve e-posta giriş türleri, sırasıyla serbest metin ve e-posta adreslerini toplar.",
                "paragraph2a": "Metin girişleri, adlar veya kullanıcı adları için çok yönlüdür, e-posta girişleri ise e-posta formatlarını doğrular.",
                "paragraph2b": "Bunlar, kayıt veya iletişim formlarında yaygındır.",
                "list1Item1": "type='text', genel metin girişine izin verir.",
                "list1Item2": "type='email', e-posta formatı doğrulamasını zorunlu kılar.",
                "codeTitle1": "Örnek: Metin ve E-posta Girişleri",
                "title3": "Onay Kutusu Girişleri",
                "paragraph3": "Onay kutusu giriş türü, kullanıcıların bir setten birden fazla seçenek seçmesine olanak tanır.",
                "paragraph3a": "Onay kutuları, tercihler veya çoktan seçmeli sorular için idealdir.",
                "paragraph3b": "Her onay kutusu, gruplanmış veriler için benzersiz bir id ve ortak bir name değerine sahiptir.",
                "codeTitle2": "Örnek: Onay Kutusu Girişleri",
                "title4": "Radyo Düğmesi Girişleri",
                "paragraph4": "Radyo düğmesi giriş türü, kullanıcıların bir gruptan tek bir seçenek seçmesine izin verir.",
                "paragraph4a": "Radyo düğmeleri, anket yanıtları gibi karşılıklı olarak özel seçenekler için kullanılır.",
                "paragraph4b": "Bir gruptaki tüm radyo girişleri aynı name özelliğini paylaşır.",
                "codeTitle3": "Örnek: Radyo Düğmesi Girişleri",
                "note1": "Daha iyi doğrulama için toplanacak veriye uygun giriş türlerini seçin.",
                "title5": "Giriş Türleri için İpuçları",
                "paragraph5": "Doğru giriş türünü seçmek, form işlevselliğini ve kullanıcı etkileşimini iyileştirir.",
                "paragraph5a": "Net etiketler ve uygun türler, doğru veri gönderimini sağlar.",
                "list2Item1": "Veri doğrulaması için özel giriş türleri kullanın.",
                "list2Item2": "İlgili onay kutularını veya radyo düğmelerini aynı name ile gruplayın."
            },
            "page3": {
                "pageTitle": "Form öğelerini <label> ile etiketleme",
                "title1": "<label> Etiketi Nedir?",
                "paragraph1": "<label> etiketi, bir form öğesine açıklayıcı metni ilişkilendirerek kullanılabilirliği ve erişilebilirliği artırır.",
                "paragraph1a": "For özelliği kullanılarak bir girişin id'sine bağlanır ve formların gezinmesini kolaylaştırır.",
                "paragraph1b": "Etiketler, ekran okuyucuların ve kullanıcıların her girişin amacını anlamasını sağlar.",
                "title2": "Metin Girişleriyle Temel Etiketleme",
                "paragraph2": "Adlar veya e-postalar gibi alanları net bir şekilde tarif etmek için metin girişleriyle <label> kullanın.",
                "paragraph2a": "For özelliği, doğru ilişkilendirme için girişin id'siyle eşleşmelidir.",
                "paragraph2b": "Bu, iletişim veya kayıt formlarında yaygındır.",
                "list1Item1": "For özelliği, <label> etiketini bir girişin id'sine bağlar.",
                "list1Item2": "Etiketler, form netliğini iyileştirir.",
                "codeTitle1": "Örnek: Temel Etiket Formu",
                "title3": "Select ve Textarea Öğelerini Etiketleme",
                "paragraph3": "Açılır menüler veya yorum alanlarını tarif etmek için <select> ve <textarea> ile etiketler kullanın.",
                "paragraph3a": "Net etiketler, anketler veya geri bildirim formlarındaki karmaşık girişleri anlamaya yardımcı olur.",
                "paragraph3b": "Her etiketin girişin amacını doğru bir şekilde yansıttığından emin olun.",
                "codeTitle2": "Örnek: Anket Formu",
                "title4": "Onay Kutuları ve Radyo Düğmelerini Etiketleme",
                "paragraph4": "Çoktan seçmeli seçenekleri açıklığa kavuşturmak için onay kutuları ve radyo düğmeleriyle <label> kullanın.",
                "paragraph4a": "Bu girişler için etiketler, özellikle ekran okuyucular için erişilebilirliği artırır.",
                "paragraph4b": "Bu, etkinlik kayıtları veya tercih formları için kullanışlıdır.",
                "codeTitle3": "Örnek: Kayıt Formu",
                "note1": "Formların erişilebilir ve kullanıcı dostu olmasını sağlamak için her zaman <label> etiketleri kullanın.",
                "title5": "Etiketler için İpuçları",
                "paragraph5": "Etiketler, net ve erişilebilir HTML formları için gereklidir.",
                "paragraph5a": "Doğru etiketleme, kullanıcı deneyimini ve form işlevselliğini artırır.",
                "list2Item1": "For özelliğini giriş id'siyle eşleştirin.",
                "list2Item2": "Etiketleri kısa ve açıklayıcı tutun."
            },
            "page4": {
                "pageTitle": "Form gönderimi: method=\"GET\", method=\"POST\"",
                "title1": "Form Gönderim Yöntemleri Nedir?",
                "paragraph1": "<form> etiketindeki method özelliği, form verilerinin sunucuya nasıl gönderileceğini belirtir.",
                "paragraph1a": "İki temel yöntem GET ve POST'tur ve her biri farklı davranışlara sahiptir.",
                "paragraph1b": "Doğru yöntemi seçmek, formun amacına ve veri hassasiyetine bağlıdır.",
                "title2": "method=\"GET\" Kullanma",
                "paragraph2": "GET yöntemi, form verilerini URL'ye sorgu parametreleri olarak ekler.",
                "paragraph2a": "Verilerin URL'de göründüğü arama sorguları gibi hassas olmayan veriler için uygundur.",
                "paragraph2b": "GET, URL uzunluğuyla sınırlıdır ve büyük veriler için kullanılmamalıdır.",
                "list1Item1": "GET, verileri URL'ye ekler.",
                "list1Item2": "Aramalar gibi idempotent istekler için kullanın.",
                "codeTitle1": "Örnek: GET Yöntemi Formu",
                "title3": "method=\"POST\" Kullanma",
                "paragraph3": "POST yöntemi, form verilerini HTTP istek gövdesinde gönderir ve URL'den gizler.",
                "paragraph3a": "Oturum açma bilgileri veya geri bildirim gibi hassas veya büyük veriler için idealdir.",
                "paragraph3b": "POST daha güvenlidir ve katı boyut sınırları yoktur.",
                "codeTitle2": "Örnek: POST Yöntemi Formu",
                "title4": "Uygulamalarda GET ve POST Birleştirme",
                "paragraph4": "Bazı uygulamalar, aynı arayüzde farklı amaçlar için hem GET hem de POST kullanır.",
                "paragraph4a": "Örneğin, GET verileri alır (örneğin, bir profili görüntüleme), POST ise verileri günceller (örneğin, bir profili düzenleme).",
                "paragraph4b": "Bu yaklaşım, veri alımı ile veri değişikliğini ayırır.",
                "codeTitle3": "Örnek: GET ve POST Birleşimi",
                "note1": "Kullanıcı gizliliğini korumak için hassas veriler için POST kullanın.",
                "title5": "Form Gönderimi için İpuçları",
                "paragraph5": "Doğru form gönderim yöntemini seçmek, güvenliği ve işlevselliği artırır.",
                "paragraph5a": "Yöntem seçerken her zaman veri hassasiyetini ve istek amacını göz önünde bulundurun.",
                "list2Item1": "Güvenli, görünür veri alımı için GET kullanın.",
                "list2Item2": "Güvenli veri gönderimi için POST kullanın."
            },
            "page5": {
                "pageTitle": "Giriş alanlarına yer tutucular ekleme",
                "title1": "Yer Tutucular Nedir?",
                "paragraph1": "HTML'deki placeholder özelliği, <input> veya <textarea> alanlarında ipucu metni sağlar.",
                "paragraph1a": "Kullanıcı yazmaya başladığında kaybolan geçici metin görüntüler.",
                "paragraph1b": "Yer tutucular, formu karmaşıklaştırmadan kullanıcıları beklenen giriş konusunda yönlendirir.",
                "title2": "Basit Girişlerde Yer Tutucular Kullanma",
                "paragraph2": "Giriş formatını önermek için metin veya e-posta gibi <input> öğelerine placeholder ekleyin.",
                "paragraph2a": "Örneğin, bir ad alanında 'Adınızı girin' gibi bir yer tutucu görünebilir.",
                "paragraph2b": "Bu, iletişim formları veya tek alanlı girişler için kullanışlıdır.",
                "list1Item1": "Yer tutucu metni kısa ve net olmalıdır.",
                "list1Item2": "Metin tabanlı giriş türleri için kullanın.",
                "codeTitle1": "Örnek: Temel Yer Tutucu Formu",
                "title3": "Karmaşık Formlarda Yer Tutucular",
                "paragraph3": "Her alanın amacını açıklığa kavuşturmak için birden fazla giriş içeren formlarda yer tutucular kullanın.",
                "paragraph3a": "Örneğin, bir e-posta alanı 'adiniz@ornek.com' gösterebilir.",
                "paragraph3b": "Bu, kayıt veya oturum açma formlarında kullanılabilirliği artırır.",
                "codeTitle2": "Örnek: Çoklu Yer Tutucu Formu",
                "title4": "Textarea ile Yer Tutucular",
                "paragraph4": "Placeholder özelliği, çok satırlı girişler için <textarea> ile de çalışır.",
                "paragraph4a": "Geri bildirim formları için ideal olan 'Geri bildiriminizi paylaşın' gibi içerikler önerir.",
                "paragraph4b": "Textarea yer tutucuları, etiketlerin yerini almadan kullanıcıları yönlendirir.",
                "codeTitle3": "Örnek: Textarea ile Yer Tutucu",
                "note1": "Yer tutucuları ipucu olarak kullanın, <label> etiketlerinin yerine geçmez.",
                "title5": "Yer Tutucular için İpuçları",
                "paragraph5": "Düşünceli kullanıldığında yer tutucular form kullanılabilirliğini iyileştirir.",
                "paragraph5a": "Netlik ve erişilebilirlik için etiketlerle birleştirin.",
                "list2Item1": "Yer tutucu metnini kısa ve açıklayıcı tutun.",
                "list2Item2": "Talimatlar için yalnızca yer tutuculara güvenmekten kaçının."
            },
            "page6": {
                "pageTitle": "Temel form doğrulama özellikleri (required, pattern)",
                "title1": "Form Doğrulama Özellikleri Nedir?",
                "paragraph1": "HTML form doğrulama özellikleri, kullanıcı girişinin gönderilmeden önce belirli gereksinimleri karşıladığından emin olur.",
                "paragraph1a": "Required ve pattern gibi özellikler, JavaScript olmadan istemci tarafı doğrulamayı mümkün kılar.",
                "paragraph1b": "Hataları erken yakalayarak kullanıcı deneyimini iyileştirirler.",
                "title2": "Required Özelliğini Kullanma",
                "paragraph2": "Required özelliği, form gönderilmeden önce bir alanın doldurulmasını zorunlu kılar.",
                "paragraph2a": "<input>, <select> ve <textarea> öğeleriyle çalışır.",
                "paragraph2b": "Alan boşsa tarayıcılar varsayılan bir hata mesajı görüntüler.",
                "list1Item1": "required, alanların boş olmamasını sağlar.",
                "list1Item2": "Çoğu giriş türüne uygulanır.",
                "codeTitle1": "Örnek: Zorunlu Alan Formu",
                "title3": "Pattern Özelliğini Kullanma",
                "paragraph3": "Pattern özelliği, giriş doğrulaması için bir düzenli ifade belirtir.",
                "paragraph3a": "Girişin, telefon numaraları veya kullanıcı adları gibi belirli bir formata uymasını sağlar.",
                "paragraph3b": "Daha katı doğrulamalar için genellikle required ile birlikte kullanılır.",
                "codeTitle2": "Örnek: Pattern Doğrulama Formu",
                "title4": "Required ve Pattern Birleştirme",
                "paragraph4": "Sağlam form doğrulaması için required ve pattern özelliklerini birlikte kullanın.",
                "paragraph4a": "Bu, alanların hem doldurulmasını hem de doğru formatta olmasını sağlar.",
                "paragraph4b": "Hassas veriler gerektiren geri bildirim veya kayıt formları için idealdir.",
                "codeTitle3": "Örnek: Birleşik Doğrulama Formu",
                "note1": "Formun ihtiyaçlarını karşıladığından emin olmak için doğrulama özelliklerini her zaman test edin.",
                "title5": "Form Doğrulama için İpuçları",
                "paragraph5": "Doğrulama özellikleri, form güvenilirliğini ve kullanıcı deneyimini artırır.",
                "paragraph5a": "En iyi sonuçlar için net etiketler ve yer tutucularla birleştirin.",
                "list2Item1": "Zorunlu alanlar için required kullanın.",
                "list2Item2": "Doğruluk için pattern regex'ini test edin."
            }
        },
        "chapter9": {
            "title": "Bölüm Dokuz: Anlamsal HTML",
            "page1": {
                "pageTitle": "Anlamsal HTML'nin Önemi",
                "title1": "Anlamsal HTML Nedir?",
                "paragraph1": "Anlamsal HTML, HTML etiketlerinin yalnızca görünüm yerine içeriğin anlamını veya amacını iletmek için kullanılması anlamına gelir. Anlamsal etiketler, anlamlarını insan ve makine tarafından okunabilir bir şekilde tanımlar.",
                "paragraph1a": "Anlamsal HTML kullanımı, erişilebilirliği, arama motoru optimizasyonunu (SEO) ve site bakımını iyileştirir. Arama motorlarının sayfanızın yapısını ve içeriğini anlamasına yardımcı olarak sıralamayı iyileştirebilir.",
                "paragraph1b": "Anlamsal elementlere örnek olarak <header>, <nav>, <main>, <article>, <section> ve <footer> verilebilir. Bu etiketler, içerdikleri içeriğe bağlam sağlar.",
                "title2": "Neden Anlamsal HTML Kullanmalı?",
                "paragraph2": "Anlamsal HTML, kodu daha okunabilir ve bakımı kolay hale getirir. Ayrıca, ekran okuyuculara bağımlı olan engelli bireyler için web sitenizin erişilebilir olmasını sağlar.",
                "paragraph2a": "Anlamsal elementler kullanarak, geliştiricilerin anlaması ve düzenlemesi kolay mantıklı bir yapı oluşturabilirsiniz. Bu, özellikle işbirlikçi projelerde önemlidir.",
                "list1Item1": "Ekran okuyucular ve yardımcı teknolojiler için erişilebilirliği artırır.",
                "list1Item2": "Net bir içerik yapısı sağlayarak SEO'yu iyileştirir.",
                "codeTitle1": "Örnek: Anlamsal HTML Yapısı",
                "title3": "Anlamsal HTML vs Anlamsal Olmayan HTML",
                "paragraph3": "Anlamsal olmayan HTML, içeriğin belirli bir anlamını iletmeyen <div> ve <span> gibi genel etiketler kullanır. Bu, kodu anlamayı zorlaştırabilir ve erişilebilirliği azaltabilir.",
                "paragraph3a": "Aşağıdaki örnek, aynı sayfa yapısının <div> etiketleriyle anlamsal olmayan bir versiyonunu gösterir, bu da netliği ve erişilebilirliği azaltır.",
                "codeTitle2": "Örnek: Anlamsal Olmayan HTML Yapısı",
                "note1": "Erişim ve SEO'yu iyileştirmek ve kodu daha bakımı kolay hale getirmek için her zaman genel etiketler yerine anlamsal elementleri tercih edin.",
                "title4": "Anlamsal HTML için En İyi Uygulamalar",
                "paragraph4": "Anlamsal HTML'den en iyi şekilde yararlanmak için, her içerik parçası için uygun etiketi kullanın ve <div> gibi genel etiketlerin aşırı kullanımından kaçının.",
                "paragraph4a": "HTML yapınızın içeriğinizin hiyerarşisini mantıklı bir şekilde yansıttığından emin olun. Bu, hem kullanıcıların hem de arama motorlarının sitenizde etkili bir şekilde gezinmesine yardımcı olur.",
                "list2Item1": "Sayfa bölgelerini tanımlamak için <header>, <main> ve <footer> gibi anlamsal etiketler kullanın.",
                "list2Item2": "Her şey için <div> kullanmaktan kaçının; uygun bir anlamsal etiket olmadığında stil amaçlı kullanın."
            },
            "page2": {
                "pageTitle": "Anlamsal Elementler",
                "title1": "Anlamsal Elementlere Giriş",
                "paragraph1": "HTML'deki anlamsal elementler, geliştiriciler ve tarayıcılar için anlamlarını ve amaçlarını açıkça tanımlayan etiketlerdir. Web sayfasının farklı bölümlerini düzenli bir şekilde temsil etmek için bir yol sağlarlar.",
                "paragraph1a": "Bu elementler, arama motorlarının, ekran okuyucuların ve geliştiricilerin içeriği anlamasını kolaylaştırarak anlamlı bir belge yapısı oluşturmaya yardımcı olur.",
                "paragraph1b": "Yaygın anlamsal elementler arasında <header>, <nav>, <main>, <section>, <article>, <aside> ve <footer> bulunur. Her biri içeriği düzenlemede belirli bir rol oynar.",
                "title2": "Temel Anlamsal Elementler",
                "paragraph2": "Anlamsal elementler, belirli içerik türlerini temsil etmek için tasarlanmıştır. Örneğin, <header> giriş içeriğini tanımlar, <nav> ise gezinme bağlantıları için kullanılır.",
                "paragraph2a": "Bu elementlerin doğru kullanımı, web sitenizin erişilebilirliğini ve SEO'sunu artırır, çünkü içerdikleri içeriğe bağlam sağlar.",
                "list1Item1": "<section>: Bir bölüm veya tema gibi ilgili içeriği gruplandırır.",
                "list1Item2": "<article>: Bir blog yazısı gibi bağımsız, kendi kendine yeterli içeriği temsil eder.",
                "codeTitle1": "Örnek: Yaygın Anlamsal Elementlerin Kullanımı",
                "title3": "Özel Anlamsal Elementler",
                "paragraph3": "Bazı anlamsal elementler, örneğin <figure> ve <figcaption>, resimler veya diyagramlar gibi özel amaçlar için kullanılır.",
                "paragraph3a": "Bu elementler, açıklamaları medyaya bağlayarak erişilebilirliği ve kullanıcılar ile yardımcı teknolojiler için netliği artırır.",
                "codeTitle2": "Örnek: Figure ve Figcaption Kullanımı",
                "note1": "Kullanıcı deneyimini ve makine okunabilirliğini iyileştirmek için içeriğin amacını doğru bir şekilde yansıtan anlamsal elementler seçin.",
                "title4": "Anlamsal Elementleri Ne Zaman Kullanmalı",
                "paragraph4": "İçeriğin yapısını ve anlamını tanımlamak için mümkün olduğunda anlamsal elementler kullanın. <div> gibi genel etiketlere güvenmekten kaçının.",
                "paragraph4a": "Anlamsal elementler, içeriğin hiyerarşisini ve ilişkilerini yansıtacak şekilde kullanılmalı, böylece HTML daha erişilebilir hale gelir.",
                "list2Item1": "Yan çubuklar gibi ana içeriğe dolaylı olarak ilgili içerik için <aside> kullanın.",
                "list2Item2": "Netliği korumak için her anlamsal elementi amaçlanan bağlamında kullanın."
            },
            "page3": {
                "pageTitle": "<div> ve <span> Anlamsal Olmayan Konteynerler",
                "title1": "<div> ve <span> Elementleri Nedir?",
                "paragraph1": "<div> ve <span> elementleri, HTML'de temel olarak içerik gruplandırma ve stil için kullanılan anlamsal olmayan etiketlerdir. Anlamsal elementlerin aksine, içerdikleri içeriğe özel bir anlam katmazlar.",
                "paragraph1a": "<div>, genellikle düzen amaçlı içerik bölümlerini gruplandırmak için kullanılan bir blok seviyesinde elementtir. <span>, daha büyük bir element içinde küçük metin parçalarını stil veya işleme için kullanılan satır içi bir elementtir.",
                "paragraph1b": "Bu elementler, anlamsal etiketlerin uygun olmadığı durumlarda gereklidir, ancak erişilebilirliği ve HTML netliğini azaltmamak için dikkatli kullanılmalıdır.",
                "title2": "Düzen için <div> Kullanımı",
                "paragraph2": "<div> elementi, özellikle CSS veya JavaScript ile birleştirildiğinde düzen için konteyner oluşturmak için yaygın olarak kullanılır.",
                "paragraph2a": "CSS Grid veya Flexbox ile karmaşık düzenler oluştururken, anlamsal bir elementin uygun olmadığı içeriği gruplandırmak için idealdir.",
                "list1Item1": "Stil amaçlı düzen konteynerleri oluşturmak için <div> kullanın.",
                "list1Item2": "<header> veya <section> gibi anlamsal bir element daha uygun olduğunda <div> kullanmaktan kaçının.",
                "codeTitle1": "Örnek: Düzen için <div> Kullanımı",
                "title3": "Satır İçi İçerik için <span> Kullanımı",
                "paragraph3": "<span> elementi, bir paragraf veya başlık gibi daha büyük bir element içindeki belirli metin parçalarına stil veya komut dosyası uygulamak için kullanılır.",
                "paragraph3a": "Vurgulama, stil veya olay dinleyicilerini çevreleyen yapıya etki etmeden küçük içerik parçalarına bağlamak için özellikle kullanışlıdır.",
                "codeTitle2": "Örnek: Satır İçi Stil için <span> Kullanımı",
                "note1": "<div> ve <span>'i yalnızca anlamsal elementler uygun olmadığında kullanın, çünkü aşırı kullanım HTML'yi daha az erişilebilir ve bakımı zor hale getirebilir.",
                "title4": "Anlamsal Olmayan Elementler için En İyi Uygulamalar",
                "paragraph4": "Temiz ve erişilebilir kod sağlamak için, <div> ve <span> kullanımını yalnızca stil veya komut dosyası ana hedef olduğunda ve anlamsal bir alternatif olmadığında sınırlayın.",
                "paragraph4a": "HTML'nin içeriğin yapısını ve amacını etkili bir şekilde ilettiğinden emin olmak için her zaman önce anlamsal elementleri düşünün.",
                "list2Item1": "Yapısal düzen için anlamsal etiketler uygun olmadığında <div> kullanın.",
                "list2Item2": "Satır içi stil veya komut dosyası için <span> kullanın, ancak vurgu için <em> veya <strong> gibi anlamsal etiketleri tercih edin."
            },
            "page4": {
                "pageTitle": "Metin Alıntıları için <blockquote> ve <cite> Elementleri",
                "title1": "<blockquote> ve <cite> Elementlerine Giriş",
                "paragraph1": "<blockquote> ve <cite> elementleri, alıntılanan içeriği ve kaynağını temsil etmek için kullanılan anlamsal HTML etiketleridir. Kullanıcılar ve tarayıcılar için anlamlı bir şekilde alıntıları yapılandırır.",
                "paragraph1a": "<blockquote>, genellikle başka bir kaynaktan alıntılanan bir içerik bölümünü belirtmek için kullanılan bir blok seviyesi elementtir. <cite>, alıntının kaynağını veya yazarını belirtmek için kullanılır.",
                "paragraph1b": "Bu elementler, alıntılanan içeriği net bir şekilde işaretleyerek erişilebilirliği artırır ve ekran okuyucuların bağlamı aktarmasını kolaylaştırır.",
                "title2": "Alıntılar için <blockquote> Kullanımı",
                "paragraph2": "<blockquote> elementi, genellikle tarayıcılar tarafından varsayılan olarak girintili olarak görüntülenen uzun alıntıları sunmak için kullanılır. Paragraflar, listeler veya diğer elementleri içerebilir.",
                "paragraph2a": "Kitaplardan, konuşmalardan veya makalelerden alıntılar için yaygın olarak kullanılır ve kaynağı belgelemek için <cite> elementini içerebilir.",
                "list1Item1": "Görsel olarak ayırt edilmesi gereken genişletilmiş alıntılar için <blockquote> kullanın.",
                "list1Item2": "Kaynağı belgelemek için <blockquote> içinde veya sonrasında <cite> ekleyin.",
                "codeTitle1": "Örnek: Temel <blockquote> ve <cite> Kullanımı",
                "title3": "Cite Özelliği Kullanımı",
                "paragraph3": "<blockquote> elementi, alıntının kaynağını bir URL veya referans ile sağlamak için cite özelliğini içerebilir, bu da anlamsal değeri artırır.",
                "paragraph3a": "Cite özelliği kullanıcılar için görünür olmasa da, tarayıcılar veya yardımcı teknolojiler tarafından kullanılabilen meta veri sağlar.",
                "codeTitle2": "Örnek: Cite Özelliği ile <blockquote>",
                "note1": "Alıntılar için <div> gibi genel elementler yerine her zaman <blockquote> kullanın ve uygun belge için <cite> veya cite özelliği ekleyin.",
                "title4": "Alıntılar için En İyi Uygulamalar",
                "paragraph4": "Netlik ve erişilebilirlik sağlamak için, alıntılanan içeriği ve kaynağını işaretlemek için <blockquote> ve <cite>'i uygun şekilde kullanın, anlamsal olmayan alternatiflerden kaçının.",
                "paragraph4a": "Alıntıların doğru olduğundan ve kaynağın açıkça belgelendiğinden emin olun, bu da güvenilirlik ve kullanılabilirliği korur.",
                "list2Item1": "Orijinal kaynağı bağlamak için mümkün olduğunda <blockquote> içinde cite özelliği kullanın.",
                "list2Item2": "Bağımsız belge için <cite>'i <blockquote> dışında veya satır içi belge için içinde kullanın."
            }
        },
        "chapter10": {
            "title": "Bölüm On: HTML5 Özellikleri",
            "page1": {
                "pageTitle": "HTML5'te Yeni Anlamsal Elementler",
                "title1": "HTML5 Anlamsal Elementlerine Giriş",
                "paragraph1": "HTML5, HTML'nin önceki sürümlerinde kullanılan genel <div> etiketlerinin yerini almak için web içeriğine daha iyi yapı ve anlam sağlamak amacıyla bir dizi yeni anlamsal element tanıttı.",
                "paragraph1a": "Bu elementler, erişilebilirliği, arama motoru optimizasyonunu ve kod okunabilirliğini iyileştirir, çünkü web sayfasının farklı bölümlerinin rolünü açıkça tanımlar.",
                "paragraph1b": "HTML5'teki temel anlamsal elementler arasında <header>, <nav>, <main>, <section>, <article>, <aside> ve <footer> bulunur, diğerleri arasında.",
                "title2": "Yaygın HTML5 Anlamsal Elementleri",
                "paragraph2": "<header>, <nav> ve <main> gibi HTML5 anlamsal elementleri, web sayfasının ana bölümlerini tanımlar, böylece geliştiricilerin ve tarayıcıların içerik hiyerarşisini anlamasını kolaylaştırır.",
                "paragraph2a": "Örneğin, <section> ilgili içeriği bir araya getirir, <article> ise bir blog yazısı veya haber gibi bağımsız içeriği temsil eder.",
                "list1Item1": "<header>: Sayfanın veya bölümün başında giriş içeriğini veya gezinme araçlarını tanımlar.",
                "list1Item2": "<aside>: Yan çubuklar veya bildirimler gibi ana içeriğe dolaylı olarak ilgili içeriği temsil eder.",
                "codeTitle1": "Örnek: Yaygın HTML5 Anlamsal Elementleri",
                "title3": "Etkileşimli Anlamsal Elementler",
                "paragraph3": "HTML5, kullanıcıların içeriğin görünürlüğünü değiştirmesine olanak tanıyan <details> ve <summary> gibi etkileşimli anlamsal elementler de tanıttı, bu da kullanıcı deneyimini geliştirir.",
                "paragraph3a": "Bu elementler, SSS'ler, katlanabilir listeler veya genişletilebilir bir arayüzden yararlanan herhangi bir içerik için özellikle kullanışlıdır.",
                "codeTitle2": "Örnek: <details> ve <summary> Kullanımı",
                "note1": "Erişilebilirliği ve bakımı iyileştirmek için mümkün olduğunda genel <div> etiketleri yerine HTML5 anlamsal elementlerini kullanın.",
                "title4": "HTML5 Anlamsallığı için En İyi Uygulamalar",
                "paragraph4": "HTML5 anlamsal elementlerinden en iyi şekilde yararlanmak için, bunları amaçlarına uygun kullanın ve gereksiz yere anlamsal olmayan elementlerle karıştırmaktan kaçının.",
                "paragraph4a": "Her elementin sayfa yapısında içeriğin rolünü yansıttığından emin olun, bu da erişilebilirliği ve SEO'yu geliştirir.",
                "list2Item1": "Sayfanın ana içeriğini, başlıklar ve altlıklar hariç, içermek için <main> kullanın.",
                "list2Item2": "Etkileşimli içeriği düzenlemek ve kullanılabilirliği artırmak için <details> ve <summary> birleştirin."
            },
            "page2": {
                "pageTitle": "Çizim için <canvas> Elementi",
                "title1": "<canvas> Elementine Giriş",
                "paragraph1": "HTML5'te tanıtılan <canvas> elementi, JavaScript kullanılarak grafiklerin, animasyonların ve etkileşimli içeriğin çizilebileceği bir web sayfasında dikdörtgen bir alan sağlar. Şekiller, resimler ve metinleri dinamik olarak çizmek için boş bir tuval görevi görür.",
                "paragraph1a": "Diğer HTML elementlerinden farklı olarak, <canvas> kendi başına içerik veya stile sahip değildir; grafikleri oluşturmak ve işlemek için JavaScript'e dayanır, bu da onu oyunlar, veri görselleştirme ve yaratıcı uygulamalar için güçlü bir araç yapar.",
                "paragraph1b": "<canvas> elementi, HTML veya CSS üzerinden ayarlanabilen bir genişlik ve yüksekliğe ihtiyaç duyar, ancak çizim alanını tanımlamak için HTML özellikleri tercih edilir, böylece ölçeklendirme sorunları önlenir.",
                "paragraph1c": "Bu element, modern tarayıcılarda yaygın olarak desteklenir ve basit grafiklerden karmaşık oyunlara kadar birçok web tabanlı uygulamanın ayrılmaz bir parçasıdır.",
                "title2": "<canvas> Elementini Kurma",
                "paragraph2": "<canvas> elementini kullanmak için, HTML'de bir id özelliği ile eklenmeli ve genişlik ve yükseklik özellikleri kullanılarak boyutları tanımlanmalıdır. Bu özellikler, çizim yüzeyinin çözünürlüğünü belirler.",
                "paragraph2a": "Boyutlar belirtilmezse, tuval varsayılan olarak 300 piksel genişlik ve 150 piksel yükseklik alır. CSS ile boyutlandırma, grafikleri bozabilecek tuvalin gerilmesine neden olabilir, bu nedenle HTML özellikleri önerilir.",
                "paragraph2b": "<canvas> elementi içindeki içerik, tarayıcı tuval elementini desteklemediğinde gösterilen yedek içerik olarak işlev görür, böylece eski tarayıcılarda erişilebilirlik sağlanır.",
                "list1Item1": "Tuvalin çözünürlüğünü net bir şekilde tanımlamak için her zaman HTML'de genişlik ve yükseklik özelliklerini belirtin.",
                "list1Item2": "JavaScript'te kolayca referans vermek için bir id özelliği ekleyin.",
                "list1Item3": "<canvas>'i desteklemeyen tarayıcılar için anlamlı yedek içerik sağlayın.",
                "codeTitle1": "Örnek: Temel <canvas> Kurulumu",
                "title3": "Yedek İçerik Sağlama",
                "paragraph3": "<canvas> elementi, tarayıcı tuval elementini desteklemediğinde gösterilen metin veya resimler gibi yedek içeriğin eklenmesine olanak tanır. Bu, eski tarayıcılarda kullanıcılar için zarif bir bozulma sağlar.",
                "paragraph3a": "Yedek içerik, kullanıcıları tarayıcılarını güncellemeye teşvik eden bir mesaj veya amaçlanan çizimle benzer bilgileri ileten statik bir resim içerebilir.",
                "paragraph3b": "Bu uygulama, desteklenmeyen ortamlarda bile bir tür içeriğin her zaman mevcut olmasını sağlayarak erişilebilirliği ve kullanıcı deneyimini geliştirir.",
                "codeTitle2": "Örnek: Yedek İçerikli <canvas>",
                "title4": "<canvas> için Erişilebilirliği Artırma",
                "paragraph4": "<canvas> içeriği dinamik olarak oluşturulduğundan ve doğal olarak erişilebilir olmadığından, yardımcı teknolojiler için tuvalin amacını tanımlamak için aria-label veya role gibi erişilebilirlik özellikleri eklenmelidir.",
                "paragraph4a": "Örneğin, bir grafik çizmek için kullanılan bir tuval, grafik türünü ve içeriğini tanımlayan bir aria-label özelliği ve ekran okuyucular için bir resim olarak işlev gördüğünü belirten role='img' içermelidir.",
                "paragraph4b": "Ek olarak, alternatif metin açıklamaları veya yedek içerik sağlamak, engelli kullanıcıların tuvalin amacını anlamasını sağlar.",
                "codeTitle3": "Örnek: Erişilebilirlik Özellikli <canvas>",
                "note1": "Tüm tarayıcılar ve yardımcı teknolojilerle kapsayıcılığı ve uyumluluğu sağlamak için <canvas> elementlerinde her zaman yedek içerik ve erişilebilirlik özellikleri ekleyin.",
                "title5": "<canvas> Kullanımı için En İyi Uygulamalar",
                "paragraph5": "<canvas> elementini etkili bir şekilde kullanmak için, uygun boyutları belirleyerek, yedek içerik sağlayarak ve karmaşık grafiklerin performans etkilerini göz önünde bulundurarak uyumluluğu, performansı ve erişilebilirliği sağlayın.",
                "paragraph5a": "Tuval tabanlı projenizi planlarken, hedef kitlenizi ve olası tarayıcı desteklerini, ayrıca grafiklerin karmaşıklığının işleme performansını etkileyebileceğini dikkate alın.",
                "paragraph5b": "Farklı cihazlar ve tarayıcılarda işleme test etmek, özellikle dokunmatik etkileşimlerin farklılık gösterebileceği mobil cihazlarda tutarlı davranış sağlamak için çok önemlidir.",
                "list2Item1": "Ölçeklendirme sorunlarını önlemek için HTML özelliklerini genişlik ve yükseklik için kullanın.",
                "list2Item2": "Erişilebilirlik için aria-label ve role özelliklerini ekleyin.",
                "list2Item3": "Performans ve uyumluluğu sağlamak için tuval işleme testini birden fazla cihazda yapın.",
                "list2Item4": "Eski tarayıcılar veya yardımcı teknolojileri desteklemek için ayrıntılı yedek içerik sağlayın."
            },
            "page3": {
                "pageTitle": "HTML5 Form Giriş Türleri: Tarih, Saat, Sayı, Aralık vb.",
                "title1": "HTML5 Form Giriş Türlerine Giriş",
                "paragraph1": "HTML5, form işlevselliğini geliştirmek, kullanıcı deneyimini iyileştirmek ve özel JavaScript doğrulamasına olan ihtiyacı azaltmak için <input> elementi için birkaç yeni giriş türü tanıttı.",
                "paragraph1a": "Bu giriş türleri, tarih seçiciler, kaydırıcılar ve renk seçiciler gibi yerleşik doğrulama ve kullanıcı dostu arayüzler sunarak formları daha sezgisel ve erişilebilir hale getirir.",
                "paragraph1b": "HTML5'teki yaygın giriş türleri arasında tarih, saat, sayı, aralık, arama, renk, e-posta, telefon ve URL bulunur, her biri belirli veri giriş ihtiyaçları için tasarlanmıştır.",
                "title2": "Tarih ve Saat Giriş Türleri",
                "paragraph2": "Tarih ve saat giriş türleri (tarih, saat, yerel tarih-saat, ay, hafta), kullanıcıların tarayıcının yerel kontrollerini, örneğin takvim veya saat seçicilerini kullanarak tarih ve saat seçmesine olanak tanır.",
                "paragraph2a": "Bu girişler, girilen verilerin biçimini otomatik olarak doğrular, hataları azaltır ve farklı tarayıcılar ve cihazlarda tutarlılığı sağlar.",
                "paragraph2b": "Örneğin, <input type='date'> bir takvim arayüzü sunar, <input type='time'> ise saat seçici sağlar, bu da mobil cihazlarda kullanılabilirliği artırır.",
                "list1Item1": "<input type='date'>: Kullanıcıların bir takvim arayüzünden tarih seçmesini sağlar.",
                "list1Item2": "<input type='time'>: Saat ve dakika seçimi için bir saat seçici sunar.",
                "list1Item3": "<input type='datetime-local'>: Tek bir kontrolde tarih ve saat seçimini birleştirir.",
                "codeTitle1": "Örnek: Tarih ve Saat Girişleri",
                "title3": "Sayı ve Aralık Giriş Türleri",
                "paragraph3": "Sayı ve aralık giriş türleri, sayısal veriler için tasarlanmıştır ve farklı kullanıcı arayüzleri sunar: sayı, bir artırma/azaltma aracı ile bir metin alanı sağlar, aralık ise bir kaydırıcı sunar.",
                "paragraph3a": "Her iki tür de değerlerin aralığını ve hassasiyetini kontrol etmek için min, max ve step gibi özellikleri destekler, böylece doğru veri toplanmasını sağlar.",
                "paragraph3b": "Bu girişler, miktarlar, derecelendirmeler veya diğer sayısal değerler gerektiren formlar için idealdir, çünkü girişi basitleştirir ve yanlış girişleri azaltır.",
                "codeTitle2": "Örnek: Sayı ve Aralık Girişleri",
                "title4": "Diğer HTML5 Giriş Türleri",
                "paragraph4": "Arama, renk, e-posta, telefon ve URL gibi ek HTML5 giriş türleri, özel giriş yöntemleri ve doğrulama sunarak belirli kullanım durumlarına hitap eder.",
                "paragraph4a": "<input type='search'> bazı tarayıcılarda bir temizleme düğmesi içerir, <input type='color'> ise renk seçimi için bir renk seçici sunar.",
                "paragraph4b": "Bu girişler, <input type='email'> için e-posta doğrulaması gibi beklenen veri türüyle giriş yöntemini hizalayarak kullanıcı deneyimini geliştirir.",
                "codeTitle3": "Örnek: Arama ve Renk Girişleri",
                "note1": "Tarayıcının yerel doğrulamasından ve kullanıcı dostu arayüzlerden yararlanmak için HTML5 giriş türlerini kullanın, ancak tutarlı davranışı sağlamak için her zaman farklı tarayıcılarda test edin.",
                "title5": "HTML5 Giriş Türleri için En İyi Uygulamalar",
                "paragraph5": "HTML5 giriş türlerinin etkinliğini en üst düzeye çıkarmak için, uygun özelliklerle (required, min, max, pattern gibi) birleştirin ve açık etiketler ve talimat metinleri sağlayın.",
                "paragraph5a": "Erişilebilirliği, aria-label veya bağlantılı <label> elementleriyle sağlayın ve sınırlı desteği olan tarayıcılar için yedek mekanizmalar sunun.",
                "paragraph5b": "Giriş kontrollerinin (örneğin, tarih seçiciler, kaydırıcılar) doğru görüntülendiğinden ve kullanılabilir olduğundan emin olmak için formları farklı cihazlarda test edin.",
                "list2Item1": "Beklenen veri biçimiyle eşleşen tarih veya sayı gibi özel giriş türleri kullanın.",
                "list2Item2": "Geçerli değerleri kontrol etmek için sayı ve aralık girişlerinde min, max ve step özelliklerini ekleyin.",
                "list2Item3": "Kullanıcıları beklenen giriş biçimleri hakkında yönlendirmek için placeholder özellikleri ekleyin.",
                "list2Item4": "Ekran okuyucular için uygun etiketler ve ARIA özellikleri ile erişilebilirliği sağlayın."
            },
            "page4": {
                "pageTitle": "HTML5 Yerel Depolama (localStorage ve sessionStorage Kullanımı)",
                "title1": "HTML5 Yerel Depolamaya Giriş",
                "paragraph1": "HTML5, web uygulamalarının çerezlere güvenmeden kullanıcının tarayıcısında veri depolamasına olanak tanıyan localStorage ve sessionStorage'ı içeren bir web depolama API'si tanıttı.",
                "paragraph1a": "Çerezlerin aksine, localStorage ve sessionStorage daha büyük depolama kapasitesi sunar (genellikle 5-10 MB) ve her HTTP isteğiyle veri göndermez, bu da performansı artırır.",
                "paragraph1b": "Bu API'ler, anahtar-değer çiftleri olarak veri depolar ve kullanımı basittir, tüm modern tarayıcılarda desteklenir, bu da onları kullanıcı tercihlerini veya geçici form verilerini kaydetmek için ideal hale getirir.",
                "title2": "Kalıcı Veriler için localStorage Kullanımı",
                "paragraph2": "localStorage, kullanıcı veya uygulama tarafından açıkça silinene kadar süresiz olarak veri depolar. Kullanıcı ayarlarını, örneğin temalar veya kullanıcı adları gibi, kaydetmek için idealdir.",
                "paragraph2a": "Veriler metin olarak saklanır, bu nedenle karmaşık veri yapıları kaydetmeden önce JSON.stringify ile serileştirilmeli ve geri alınırken JSON.parse ile çözülmelidir.",
                "paragraph2b": "localStorage'a erişim, setItem(), getItem(), removeItem() ve clear() gibi yöntemlerle JavaScript üzerinden basittir.",
                "list1Item1": "localStorage.setItem('key', 'value'): Belirtilen bir anahtar altında bir değer kaydeder.",
                "list1Item2": "localStorage.getItem('key'): Anahtarla ilişkili değeri alır.",
                "list1Item3": "localStorage.removeItem('key'): Belirli bir anahtar-değer çiftini siler.",
                "codeTitle1": "Örnek: localStorage ile Kullanıcı Adı Kaydetme",
                "title3": "Geçici Veriler için sessionStorage Kullanımı",
                "paragraph3": "sessionStorage, yalnızca tarayıcı sekmesi kapanana kadar veri depolar. Form girişleri gibi geçici veriler için kullanışlıdır.",
                "paragraph3a": "localStorage gibi, sessionStorage aynı yöntemleri (setItem(), getItem() vb.) kullanır, ancak verileri belirli bir sekme için izole eder, böylece sekmeler arasında çakışmalar önlenir.",
                "paragraph3b": "Bu, her sekmenin kendi geçici depolamasını gerektiren çok sekmeli senaryolar için sessionStorage'ı ideal hale getirir.",
                "codeTitle2": "Örnek: sessionStorage ile Geçici Notlar Kaydetme",
                "title4": "Depolamayı Yönetme ve Temizleme",
                "paragraph4": "Hem localStorage hem de sessionStorage, belirli anahtarları kaldırarak veya tüm verileri temizleyerek yönetilebilir. Bu, kullanıcı tercihlerini sıfırlamak veya depolama alanını boşaltmak için kullanışlıdır.",
                "paragraph4a": "clear() yöntemi tüm anahtar-değer çiftlerini kaldırır, removeItem() ise belirli anahtarları hedefler. Dikkatli yönetim, depolamanın aşırı dolmasını önler.",
                "paragraph4b": "Uygulamalar, özellikle kişisel tercihler gibi gizliliğe duyarlı veriler için kullanıcıların depolanan verileri temizleme seçenekleri sunmalıdır.",
                "codeTitle3": "Örnek: localStorage Verilerini Temizleme",
                "note1": "Kalıcı veriler için localStorage, geçici veriler için sessionStorage kullanın ve depolama sınırlarını ve kullanıcı gizliliğini her zaman uygun şekilde ele alın.",
                "title5": "Web Depolama için En İyi Uygulamalar",
                "paragraph5": "localStorage ve sessionStorage'ı etkili bir şekilde kullanmak için, güvenliği, performansı ve kullanıcıların depolanan veriler üzerinde kontrolünü sağlayan en iyi uygulamaları takip edin.",
                "paragraph5a": "Tarayıcı desteğini her zaman kontrol edin, depolama kota hatalarını ele alın ve depolamaya erişirken istisnaları yönetmek için try-catch blokları kullanın.",
                "paragraph5b": "Kullanıcıları veri depolama hakkında bilgilendirin ve GDPR gibi gizlilik düzenlemelerine uygun olarak verileri yönetme veya silme için açık seçenekler sunun.",
                "list2Item1": "Nesneleri veya dizileri işlemek için depolamadan önce JSON ile karmaşık verileri serileştirin.",
                "list2Item2": "Hataları sorunsuz bir şekilde yönetmek için try-catch bloğuyla depolama kullanılabilirliğini kontrol edin.",
                "list2Item3": "Depolama sınırlarına ulaşmayı önlemek için yalnızca temel bilgileri depolayın.",
                "list2Item4": "Gizliliği artırmak için kullanıcıların depolanan verileri temizlemesi için UI kontrolleri sağlayın."
            }
        },
        "chapter11": {
            "title": "Bölüm On Bir: HTML Varlıkları ve Özel Karakterler",
            "page1": {
                "pageTitle": "HTML Varlıkları Nedir?",
                "title1": "HTML Varlıklarına Giriş",
                "paragraph1": "HTML varlıkları, HTML'de özel anlamları olan veya doğrudan yazılması zor olan karakterleri temsil etmek için kullanılan özel kodlardır, örneğin ayrılmış karakterler veya özel semboller.",
                "paragraph1a": "Varlıklar, bir ve işareti (&) ile yazılır, ardından bir kod (ad veya numara) gelir ve noktalı virgül (;) ile biter. Örneğin, <, < işaretini (<) temsil eder.",
                "paragraph1b": "Varlıklar, özel karakterlerin doğru görüntülenmesini sağlar ve HTML'de ayrıştırma hatalarını önler, özellikle <, > ve & gibi karakterler için.",
                "title2": "Yaygın HTML Varlıkları",
                "paragraph2": "HTML yapısında veya sık kullanılan sembollerde kullanılan bazı karakterler, doğru görüntülenmeleri için varlık gerektirir. Yaygın varlıklar, ayrılmış karakterler ve sık kullanılan semboller için olanları içerir.",
                "paragraph2a": "Varlıklar, adlandırılmış kodlarla (örneğin, © için ©) veya sayısal kodlarla (örneğin, © için ©) yazılabilir, adlandırılmış kodlar daha okunabilirken sayısal kodlar daha geniş uyumluluk sağlar.",
                "list1Item1": "< veya <: < işaretini (<) temsil eder.",
                "list1Item2": "> veya >: > işaretini (>) temsil eder.",
                "list1Item3": "& veya &: Ve işaretini (&) temsil eder.",
                "codeTitle1": "Örnek: Yaygın HTML Varlıkları",
                "title3": "Özel Semboller ve İfadeler",
                "paragraph3": "HTML varlıkları, para birimi sembolleri, matematiksel semboller veya kesintisiz boşluklar gibi standart klavyelerde bulunmayan özel sembolleri görüntülemek için de kullanılır.",
                "paragraph3a": "Örneğin,   kesintisiz bir boşluk oluşturur, kelimeler arasında kesintiyi önler, € ise Euro sembolünü (€) gösterir.",
                "codeTitle2": "Örnek: Varlıklarla Özel Semboller",
                "note1": "Doğru görüntülenmeyi ve HTML'de ayrıştırma sorunlarını önlemek için ayrılmış karakterler ve özel semboller için her zaman HTML varlıklarını kullanın.",
                "title4": "HTML Varlıklarını Kullanma için En İyi Uygulamalar",
                "paragraph4": "HTML varlıklarını etkili bir şekilde kullanmak için, sembol için uygun varlığı seçin, mümkün olduğunda adlandırılmış varlıkları okunabilirlik için tercih edin ve HTML belgenizde uygun kodlamayı sağlayın.",
                "paragraph4a": "Varlıklar, özellikle kullanıcı tarafından oluşturulan metin gibi dinamik içerikte, siteler arası komut dosyası çalıştırma (XSS) gibi güvenlik sorunlarını önlemek için özel karakterleri kaçırmak için önemlidir.",
                "list2Item1": "Yaygın desteklendiğinde okunabilirlik için adlandırılmış varlıkları (örneğin, ©) kullanın.",
                "list2Item2": "Daha az yaygın semboller veya daha geniş uyumluluk için sayısal varlıkları (örneğin, ©) kullanın.",
                "list2Item3": "Geniş bir sembol yelpazesini doğal olarak desteklemek için belgenizin UTF-8 kodlamasını kullandığından emin olun."
            },
            "page2": {
                "pageTitle": "Yaygın HTML Varlıkları",
                "title1": "Yaygın HTML Varlıklarına Genel Bakış",
                "paragraph1": "HTML varlıkları, ayrılmış karakterleri ve özel sembolleri web içeriğinde görüntülemek için gereklidir. Bu sayfa, daha önce tanıtılan varlıkları temel alarak en sık kullanılan varlıkları keşfeder.",
                "paragraph1a": "Yaygın varlıklar, <, >, & ve çeşitli semboller gibi sembolleri temsil etmek için kullanılır, böylece HTML ayrıştırmasını bozmadan doğru görüntülenirler.",
                "paragraph1b": "Varlıklar, adlandırılmış kodlarla (örneğin, <) veya sayısal kodlarla (<) belirtilebilir, her iki format da aynı sonucu verir ancak okunabilirlik ve uyumluluk açısından farklıdır.",
                "title2": "Ayrılmış Karakterler için Varlıklar",
                "paragraph2": "HTML'de ayrılmış karakterler, örneğin <, >, & ve \", kod olarak değil metin olarak görüntülenmek için varlıklarla kaçırılmalıdır.",
                "paragraph2a": "Bu varlıklar, kod parçacıkları veya teknik belgelerde yapı hatalarını önlemek ve içeriğin amaçlandığı gibi görüntülenmesini sağlamak için çok önemlidir.",
                "list1Item1": "< veya <: < işaretini (<) görüntüler.",
                "list1Item2": "> veya >: > işaretini (>) görüntüler.",
                "list1Item3": "& veya &: Ve işaretini (&) görüntüler.",
                "list1Item4": "&quot; veya &#34;: Tırnak işaretini (\") görüntüler.",
                "codeTitle1": "Örnek: Ayrılmış Karakterler için Varlıklar"
            },
            "page3": {
                "pageTitle": "HTML'de Özel Sembolleri Varlıklarla Görüntüleme",
                "title1": "Özel Sembol Varlıklarına Giriş",
                "paragraph1": "HTML'deki özel sembol varlıkları, geliştiricilerin para birimi sembolleri, matematiksel semboller ve tipografik semboller gibi doğrudan yazılması zor veya doğru görüntülenmeyen karakterleri görüntülemesini sağlar.",
                "paragraph1a": "Bu varlıklar, uluslararası içerik, bilimsel belgeler veya markalaşma için özellikle kullanışlıdır; örneğin €, ½ veya ® gibi semboller gereklidir.",
                "paragraph1b": "Varlıklar, adlandırılmış kodlarla (örneğin, €) veya sayısal kodlarla (€) yazılabilir, böylece tarayıcılar ve platformlar arasında tutarlı görüntüleme sağlanır.",
                "title2": "Para Birimi ve Marka Sembolleri",
                "paragraph2": "Para birimi sembolleri (örneğin, €, £, ¥) ve marka sembolleri (örneğin, ®, ™), e-ticaret, yasal bildirimler ve markalaşmada bilgileri net bir şekilde iletmek için yaygın olarak kullanılır.",
                "paragraph2a": "Bu semboller için varlık kullanımı, kullanıcının klavye ayarları veya bölgesel ayarlarından bağımsız olarak doğru görüntülenmeyi sağlar.",
                "list1Item1": "€ veya €: Euro sembolünü (€) görüntüler.",
                "list1Item2": "® veya ®: Kayıtlı marka sembolünü (®) görüntüler.",
                "list1Item3": "™ veya ™: Ticari marka sembolünü (™) görüntüler.",
                "codeTitle1": "Örnek: Para Birimi ve Marka Varlıkları",
                "title3": "Matematiksel ve Tipografik Semboller",
                "paragraph3": "Matematiksel semboller (örneğin, ½, ×) ve tipografik semboller (örneğin, °), bilimsel içerik, tarifler veya teknik belgeler için gerekli olup netlik ve doğruluk sağlar.",
                "paragraph3a": "Varlıklar, font desteği veya kodlama sorunlarını önleyerek bu sembollerin doğru görüntülenmesini sağlar.",
                "codeTitle2": "Örnek: Matematiksel ve Tipografik Varlıklar",
                "title4": "Kesintisiz Boşluklar ve Düzen Kontrolü",
                "paragraph4": "Kesintisiz boşluk varlığı (  veya  ), kelimeler veya öğeler arasında kesintiyi önler, örneğin adlar veya başlıklarda uygun metin düzenini sağlar.",
                "paragraph4a": "Bu varlık, çok dilli içerik veya sıkı biçimlendirme gerektiren metinlerde görsel tutarlılığı korumak için özellikle kullanışlıdır.",
                "codeTitle3": "Örnek: Kesintisiz Boşluk Varlıkları",
                "note1": "Uluslararası veya teknik içerik için tarayıcılar arasında tutarlı sembol görüntülenmesini sağlamak için özel sembol varlıklarını kullanın.",
                "title5": "Özel Sembol Varlıkları için En İyi Uygulamalar",
                "paragraph5": "Özel sembol varlıklarını etkili bir şekilde kullanmak için, uygun varlık biçimini seçin, farklı tarayıcılarda görüntülemeyi test edin ve uygun belge kodlaması ile birleştirin.",
                "paragraph5a": "Sembolün doğrudan girilmesi güvenilir olmadığında veya sınırlı font özelliklerine sahip eski sistemleri desteklerken varlıklar kullanılmalıdır.",
                "list2Item1": "Yaygın semboller için kod okunabilirliğini artırmak için adlandırılmış varlıkları kullanın.",
                "list2Item2": "Tutarlı görüntülemeyi onaylamak için özel sembolleri farklı tarayıcılarda test edin.",
                "list2Item3": "Yaygın desteklenen semboller için varlıklara bağımlılığı azaltmak için UTF-8 kodlamasını kullanın."
            },
            "page4": {
                "pageTitle": "Karakter Kodlaması ve Önemi (UTF-8)",
                "title1": "Karakter Kodlamasına Giriş",
                "paragraph1": "Karakter kodlaması, metin karakterlerinin dijital sistemlerde nasıl temsil edildiğini tanımlar, böylece karakterler, harfler ve özel semboller platformlar arasında doğru görüntülenir.",
                "paragraph1a": "UTF-8, değişken uzunluklu bir kodlama olup, emojiler, Latin olmayan metinler ve özel semboller dahil tüm Unicode karakterlerini destekleyen web için en yaygın kullanılan kodlamadır.",
                "paragraph1b": "HTML'de, doğru kodlamayı (örneğin, UTF-8) belirtmek, görüntüleme hatalarını önlemek ve uluslararası içerikle uyumluluğu sağlamak için çok önemlidir.",
                "title2": "HTML'de UTF-8 Kullanımı",
                "paragraph2": "HTML'de UTF-8 kullanmak için, belgenin başında <meta charset='UTF-8'> etiketi eklenmelidir, bu da tarayıcılara içeriği UTF-8 kodlamasıyla yorumlamasını bildirir.",
                "paragraph2a": "UTF-8, modern web geliştirmede çoğu sembolün doğrudan girilmesini destekler, ayrılmış karakterler veya eski sistemlerle uyumluluk dışında HTML varlıklarına olan ihtiyacı azaltır.",
                "list1Item1": "Doğru sembol görüntülenmesini sağlamak için her HTML belgesinde <meta charset='UTF-8'> ekleyin.",
                "list1Item2": "€, 漢字 veya 😊 gibi sembolleri varlık olmadan doğal olarak desteklemek için UTF-8 kullanın.",
                "list1Item3": "Kodlama uyumsuzluklarını önlemek için sunucu ayarlarının da UTF-8 kullandığından emin olun.",
                "codeTitle1": "Örnek: HTML'de UTF-8 Kodlaması",
                "title3": "UTF-8 Olmayan Kodlama Sorunları",
                "paragraph3": "ISO-8859-1 gibi eski kodlamalar, Latin olmayan metinler veya € veya 日本語 gibi özel semboller için sınırlı destek sunar, bu da görüntüleme sorunlarına yol açar.",
                "paragraph3a": "Bu durumlarda, kodlama tarafından desteklenmeyen sembolleri görüntülemek için € gibi HTML varlıkları gereklidir, bu da UTF-8'in üstünlüğünü vurgular.",
                "codeTitle2": "Örnek: UTF-8 Olmayan Kodlama Sorunu",
                "title4": "UTF-8 ve HTML Varlıklarını Birleştirme",
                "paragraph4": "UTF-8 çoğu sembolü doğal olarak desteklerken, HTML varlıkları hala ayrılmış karakterler (<, >, &), kod netliği veya eski sistemlerle uyumluluk için kullanılır.",
                "paragraph4a": "Örneğin, tutarlılık veya sembolün doğrudan girilmesinin pratik olmadığı durumlarda é gibi varlıklar UTF-8 ile birlikte kullanılabilir.",
                "codeTitle3": "Örnek: UTF-8 ve Varlıkları Birleştirme",
                "note1": "Ayrılmış olmayan semboller için varlıklara bağımlılığı azaltmak ve uluslararası sembolleri desteklemek için HTML belgelerinde her zaman UTF-8 kodlamasını kullanın.",
                "title5": "Karakter Kodlaması için En İyi Uygulamalar",
                "paragraph5": "Sağlam karakter kodlaması sağlamak için, HTML'de her zaman UTF-8 bildirin, sunucuları ve veritabanlarını UTF-8 kullanacak şekilde yapılandırın ve içeriği farklı tarayıcılar ve cihazlarda test edin.",
                "paragraph5a": "Varlıkları dikkatli kullanın, temel olarak ayrılmış karakterler veya eski ortamları desteklemek için, temiz ve bakımı kolay kod korumak için.",
                "list2Item1": "Ayrıştırma sorunlarını önlemek için HTML başlığının başında <meta charset='UTF-8'> bildirin.",
                "list2Item2": "HTML, CSS, JavaScript ve arka uç sistemlerinde tutarlı bir şekilde UTF-8 kullanın.",
                "list2Item3": "Uygun görüntülemeyi doğrulamak için özel sembolleri farklı ortamlarda test edin."
            }
        },
        "chapter12": {
            "title": "Bölüm On İki: Meta Veriler ve SEO Temelleri",
            "page1": {
                "pageTitle": "SEO için Başlık Etiketlerinin Önemi",
                "title1": "Başlık Etiketleri ve SEO'ya Giriş",
                "paragraph1": "<h1> ile <h6> arasındaki başlık etiketleri, HTML'de içeriği yapılandırmak için çok önemlidir ve arama motorlarının içeriğin hiyerarşisini ve önemini anlamasına yardımcı olarak arama motoru optimizasyonunda (SEO) önemli bir rol oynar.",
                "paragraph1a": "Google gibi arama motorları, bir sayfanın ana ve alt konularını belirlemek için başlık etiketlerini kullanır, bu da arama sıralamasını etkileyebilir ve içeriğin keşfedilebilirliğini artırabilir.",
                "paragraph1b": "Başlık etiketlerini doğru kullanmak, arama niyetiyle uyumlu, net ve taranabilir içerik oluşturarak kullanıcı deneyimini ve SEO'yu geliştirir.",
                "title2": "Başlık Etiketleri SEO'yu Nasıl Etkiler",
                "paragraph2": "Başlık etiketleri, arama motorlarına içeriğin önemini bildirir, <h1> en yüksek ağırlığı taşır, ardından <h2>, <h3> vb. gelir, böylece mantıklı bir hiyerarşi oluşturur.",
                "paragraph2a": "İlgili anahtar kelimelerle iyi yapılandırılmış başlıklar, arama motorlarının içeriği doğru bir şekilde dizine eklemesine ve kullanıcı sorgularıyla eşleştirmesine yardımcı olarak görünürlüğü artırır.",
                "list1Item1": "Sayfanın ana konusunu tanımlamak için her sayfada tek bir <h1> etiketi kullanın.",
                "list1Item2": "Arama niyetiyle uyum sağlamak için başlıklarda ilgili anahtar kelimeleri doğal bir şekilde birleştirin.",
                "list1Item3": "İçerik yapısını yansıtmak için mantıklı bir hiyerarşi (h1 > h2 > h3) koruyun.",
                "codeTitle1": "Örnek: SEO Dostu Başlık Yapısı",
                "title3": "Anahtar Kelimelerle Başlıkları Optimize Etme",
                "paragraph3": "Hedeflenen anahtar kelimeleri başlık etiketlerine dahil etmek, belirli arama sorguları için sayfanın alaka düzeyini artırabilir, ancak okunabilirliği korumak ve cezalardan kaçınmak için anahtar kelime doldurmaktan kaçının.",
                "paragraph3a": "<h1> ve <h2> etiketlerindeki anahtar kelimeler özellikle etkilidir, çünkü sayfanın ana odak noktasını ve ana bölümlerini bildirir.",
                "codeTitle2": "Örnek: Anahtar Kelimelerle Optimize Edilmiş Başlıklar",
                "title4": "Yaygın Başlık Etiketi Hataları",
                "paragraph4": "Başlık etiketlerinin yanlış kullanımı, örneğin seviye atlama (<h1> doğrudan <h3>'e) veya stil için başlık kullanımı, arama motorlarını karıştırabilir ve SEO performansını olumsuz etkileyebilir.",
                "paragraph4a": "Bu hatalar, içerik hiyerarşisini bozar ve erişilebilirliği azaltabilir, bu da arama sıralamasını ve kullanıcı deneyimini olumsuz etkiler.",
                "codeTitle3": "Örnek: Yanlış Başlık Yapısı",
                "note1": "SEO ve kullanıcı deneyimini geliştirmek için içeriği mantıklı bir şekilde yapılandırmak için her zaman başlık etiketlerini anlamsal olarak kullanın.",
                "title5": "SEO için Başlık Etiketlerinde En İyi Uygulamalar",
                "paragraph5": "Başlık etiketlerinin SEO avantajlarını en üst düzeye çıkarmak için, bunları anlamsal olarak kullanın, anahtar kelimeleri stratejik olarak birleştirin ve içeriğin yapısını ve amacını yansıttığından emin olun.",
                "paragraph5a": "İçerik güncellemeleri sırasında başlık yapılarını düzenli olarak gözden geçirerek tutarlılığı ve SEO hedefleriyle uyumu koruyun.",
                "list2Item1": "Ana başlığı tanımlamak için her sayfada tek bir <h1> etiketi kullanın.",
                "list2Item2": "Başlıkların açıklayıcı ve kısa olduğundan emin olun, belirsiz terimlerden kaçının.",
                "list2Item3": "Taranabilirlik ve alaka düzeyini doğrulamak için başlık yapılarını SEO araçlarıyla test edin."
            },
            "page2": {
                "pageTitle": "Simge Gibi Harici Kaynakları Bağlamak için <link> Kullanımı",
                "title1": "<link> Etiketine Giriş",
                "paragraph1": "HTML'deki <link> etiketi, simgeler, stil sayfaları, yazı tipleri veya önceden yüklenmiş varlıklar gibi harici kaynakları bir web sayfasına bağlamak için kullanılır, işlevselliği ve görünümü geliştirir.",
                "paragraph1a": "<head> bölümünde yer alan <link> etiketi, ilişkiyi ve kaynağın yerini belirtmek için rel ve href gibi özellikler kullanır.",
                "paragraph1b": "Yaygın kullanımlar arasında markalaşma için simgeleri bağlama, stil için CSS dosyaları ve tipografi için harici yazı tipleri bulunur.",
                "title2": "Simgeyi Bağlamak için <link> Kullanımı",
                "paragraph2": "Simge, tarayıcı sekmelerinde, yer imlerinde ve geçmişte görüntülenen küçük bir simgedir ve uygun dosya yolu ve MIME türü ile <link rel='icon'> kullanılarak bağlanır.",
                "paragraph2a": "Simgeler, kullanıcı deneyimini ve marka tanınırlığını geliştirir ve PNG, ICO ve JPG gibi formatları destekler, ICO en uyumlu olanıdır.",
                "list1Item1": "Simgeyi belirtmek için rel='icon' kullanın.",
                "list1Item2": "ICO dosyaları için type='image/x-icon' veya PNG dosyaları için type='image/png' ekleyin.",
                "list1Item3": "Simgeyi erişilebilir bir dizinde, örneğin /images/favicon.png, yerleştirin.",
                "codeTitle1": "Örnek: Simge Bağlama",
                "title3": "Harici Stil Sayfalarını Bağlama",
                "paragraph3": "<link> etiketi, rel='stylesheet' ile harici CSS dosyalarını eklemek için yaygın olarak kullanılır, bu da web sayfaları arasında modüler ve yeniden kullanılabilir stil sağlar.",
                "paragraph3a": "Birden fazla stil sayfası bağlanabilir, <link> etiketlerinin sırası CSS kademe önceliğini belirler.",
                "codeTitle2": "Örnek: CSS Dosyalarını Bağlama",
                "title4": "Diğer Kaynakları Bağlama",
                "paragraph4": "Simgeler ve stil sayfalarının yanı sıra, <link>, web yazı tipleri, önceden yüklenmiş varlıklar veya rel='preconnect' veya rel='stylesheet' gibi özelliklerle DNS ön alımı gibi diğer kaynakları bağlayabilir.",
                "paragraph4a": "Örneğin, Google Fonts bağlama tipografiyi geliştirir, preconnect ise harici alanlarla erken bağlantılar kurarak performansı artırır.",
                "codeTitle3": "Örnek: Birden Fazla Kaynağı Bağlama",
                "note1": "Harici kaynakları verimli bir şekilde bağlamak için <link> etiketini kullanın, doğru rel değerlerini ve geçerli dosya yollarını sağlayarak optimum performansı garantileyin.",
                "title5": "<link> Kullanımı için En İyi Uygulamalar",
                "paragraph5": "<link> etiketinden en iyi şekilde yararlanmak için, uygun rel değerleri kullanın, kaynak dosya boyutlarını en aza indirin ve tarayıcılar arasında erişilebilirlik ve uyumluluğu sağlayın.",
                "paragraph5a": "Bağlı kaynakların doğru yüklendiğinden ve kullanıcı deneyimini geliştirirken gecikmelere neden olmadığından emin olmak için düzenli olarak test edin.",
                "list2Item1": "Simgeler için doğru MIME türlerini (örneğin, type='image/x-icon') belirtin.",
                "list2Item2": "Sayfa yükleme sürelerini azaltmak için bağlı kaynakların sayısını en aza indirin.",
                "list2Item3": "Performansı artırmak için güvenilir olduğunda CDN'de barındırılan kaynakları kullanın."
            }
        },
        "chapter13": {
            "title": "Bölüm On Üç: HTML Doğrulama ve Hata Ayıklama",
            "page1": {
                "pageTitle": "HTML Doğrulama Araçlarına Giriş (Örneğin, W3C Validator)",
                "title1": "HTML Doğrulama Araçları Nedir?",
                "paragraph1": "HTML doğrulama araçları, World Wide Web Consortium (W3C) tarafından belirlenen web standartlarına uygun olarak HTML kodunun sözdizimini ve doğruluğunu kontrol eden araçlardır, böylece hata içermediğinden ve uyumlu olduğundan emin olur.",
                "paragraph1a": "W3C Validator, eksik etiketler, yanlış iç içe geçmeler veya kullanımdan kaldırılmış elementler gibi sorunları analiz eden en yaygın kullanılan araçtır.",
                "paragraph1b": "Geçerli HTML, tarayıcı uyumluluğunu, erişilebilirliği ve arama motoru optimizasyonunu (SEO) iyileştirir, görüntüleme hatalarını azaltır ve kullanıcı deneyimini geliştirir.",
                "title2": "Neden W3C Validator Kullanmalı?",
                "paragraph2": "W3C Validator, geliştiricilerin HTML kodundaki hataları tespit etmesine ve düzeltmesine yardımcı olur, HTML5 gibi standartlara uygunluğu sağlayarak web projelerinde tutarlılık ve güvenilirlik artırır.",
                "paragraph2a": "Ayrıntılı hata raporları, uyarılar ve öneriler sunar, bu da kodu performans ve erişilebilirlik için optimize etmeyi ve düzeltmeyi kolaylaştırır.",
                "list1Item1": "Farklı tarayıcılarda uyumluluğu sağlamak için W3C standartlarına uygunluğu garantiler.",
                "list1Item2": "Eksik alt özellikleri gibi erişilebilirlik sorunlarını belirler.",
                "list1Item3": "Temiz ve hatasız kod sağlayarak SEO'yu iyileştirir.",
                "codeTitle1": "Örnek: Geçerli HTML Belgesi",
                "title3": "Yaygın Doğrulama Hataları",
                "paragraph3": "Doğrulama hataları genellikle eksik DOCTYPE bildirimlerinden, kapanmamış etiketlerden, yanlış özellik kullanımından veya resimler için alt gibi gerekli özelliklerin eksik olmasından kaynaklanır.",
                "paragraph3a": "Bu hatalar, tutarsız görüntülemeye, erişilebilirlik engellerine veya düşük SEO performansına yol açabilir, bu da doğrulamanın gerekliliğini vurgular.",
                "codeTitle2": "Örnek: Hatalı HTML",
                "title4": "Doğrulama Hatalarını Düzeltme",
                "paragraph4": "W3C Validator geri bildirimlerini kullanarak, geliştiriciler eksik etiketleri eklemek, elementleri doğru kapatmak veya geçerli HTML için gerekli özellikleri eklemek gibi sorunları düzeltebilir.",
                "paragraph4a": "Hataları düzeltmek, yalnızca uygunluğu sağlamakla kalmaz, aynı zamanda sayfa güvenilirliğini ve erişilebilirliğini artırarak kullanıcı deneyimini geliştirir.",
                "codeTitle3": "Örnek: Düzeltilmiş HTML Belgesi",
                "note1": "Yüksek kaliteli, erişilebilir ve SEO dostu web sayfaları sağlamak için HTML kodunuzu düzenli olarak W3C Validator ile doğrulayın.",
                "title5": "HTML Doğrulama için En İyi Uygulamalar",
                "paragraph5": "HTML doğrulama araçlarını etkili bir şekilde kullanmak için, kodu erken ve sık sık doğrulayın, tüm hataları ve uyarıları ele alın ve doğrulamayı geliştirme iş akışınıza entegre edin.",
                "paragraph5a": "Sağlam ve kullanıcı dostu bir web deneyimi sağlamak için doğrulamayı erişilebilirlik ve performans testi araçlarıyla birleştirin.",
                "list2Item1": "Hataları erken yakalamak için geliştirme sırasında HTML'yi doğrulayın.",
                "list2Item2": "Maksimum uygunluk için hem hataları hem de uyarıları ele alın.",
                "list2Item3": "Büyük projeler için CI/CD hatlarında otomatik doğrulamayı kullanın."
            },
            "page2": {
                "pageTitle": "Yaygın HTML Hataları ve Bunları Düzeltme",
                "title1": "Yaygın HTML Hatalarına Giriş",
                "paragraph1": "HTML hataları, kod W3C standartlarından saptığında meydana gelir ve görüntüleme sorunları, erişilebilirlik engelleri veya zayıf SEO performansı gibi sorunlara yol açar.",
                "paragraph1a": "W3C Validator gibi araçlar, bu hataları belirlemeye yardımcı olur ve uygulanabilir geri bildirimler sağlayarak geçerli ve sağlam HTML kodu sağlar.",
                "paragraph1b": "Yaygın hatalar arasında eksik DOCTYPE bildirimleri, kapanmamış etiketler ve gerekli özelliklerin eksik olması yer alır, bunların tümü doğru yapılandırma ile düzeltilebilir.",
                "title2": "Eksik DOCTYPE Bildirimi",
                "paragraph2": "Eksik bir DOCTYPE bildirimi, tarayıcıların sayfaları Quirks modunda görüntülemesine neden olur, bu da farklı tarayıcılarda tutarsız düzen ve davranışlara yol açar.",
                "paragraph2a": "Bunu, her HTML belgesinin başında <!DOCTYPE html> ekleyerek düzeltin, bu standartlar modunu ve uygun görüntülemeyi sağlar.",
                "list1Item1": "Hata: Belgenin başında DOCTYPE bildirimi eksik.",
                "list1Item2": "Etki: Quirks modu görüntüleme, tutarsız düzenler.",
                "list1Item3": "Düzeltme: <html> etiketinden önce <!DOCTYPE html> ekleyin.",
                "codeTitle1": "Örnek: Eksik DOCTYPE Bildirimi",
                "codeTitle1Fix": "Örnek: Düzeltilmiş DOCTYPE Bildirimi",
                "title3": "Kapanmamış veya Yanlış İç İçe Geçmiş Etiketler",
                "paragraph3": "Kapanmamış etiketler veya yanlış iç içe geçme (örneğin, <div><p></div></p>), HTML yapısını bozar, görüntüleme hatalarına veya erişilebilirlik sorunlarına neden olur.",
                "paragraph3a": "Tüm etiketlerin kapatıldığından ve doğru sırayla iç içe geçtiğinden emin olun, W3C Validator gibi araçlarla doğrulayın.",
                "codeTitle2": "Örnek: Kapanmamış Etiketler",
                "codeTitle2Fix": "Örnek: Doğru Kapatılmış Etiketler",
                "title4": "Eksik Gerekli Özellikler",
                "paragraph4": "Resimler için alt veya form girişleri için id/name gibi elementler, erişilebilirlik ve işlevsellik için gerekli özellikler gerektirir ve bunların eksikliği doğrulama hatalarına yol açar.",
                "paragraph4a": "Resimler için alt ve form girişleri için id/name gibi gerekli özellikleri ekleyerek uygunluğu ve kullanılabilirliği sağlayın.",
                "codeTitle3": "Örnek: Eksik Özellikler",
                "codeTitle3Fix": "Örnek: Doğru Özellikler",
                "note1": "Erişilebilir, SEO dostu ve tarayıcı uyumlu kod sağlamak için HTML hatalarını erken tespit etmek ve düzeltmek için W3C Validator'ı kullanın.",
                "title5": "HTML Hatalarını Önlemek için En İyi Uygulamalar",
                "paragraph5": "HTML hatalarını en aza indirmek için, temiz kod yazın, düzenli olarak doğrulayın ve kod düzenleyicilerde hataları geliştirme sırasında tespit etmek için linting araçları veya eklentiler kullanın.",
                "paragraph5a": "Üretim ortamlarında sorunları önlemek ve yüksek kaliteli kodu sürdürmek için doğrulamayı iş akışınıza entegre edin.",
                "list2Item1": "Hataları erken yakalamak için her büyük değişiklikten sonra HTML'yi doğrulayın.",
                "list2Item2": "Sorunları gerçek zamanlı olarak vurgulamak için HTML linting özellikli kod düzenleyiciler kullanın.",
                "list2Item3": "Tutarlı görüntülemeyi onaylamak için sayfaları birden fazla tarayıcıda test edin."
            },
            "page3": {
                "pageTitle": "HTML'yi İncelemek ve Hata Ayıklamak için Tarayıcı Geliştirici Araçlarını Kullanma",
                "title1": "Tarayıcı Geliştirici Araçlarına Giriş",
                "paragraph1": "Chrome DevTools veya Firefox Developer Tools gibi tarayıcı geliştirici araçları, geliştiricilerin HTML, CSS ve JavaScript'i doğrudan tarayıcıda incelemesine ve hata ayıklamasına olanak tanır.",
                "paragraph1a": "Bu araçlar, Belge Nesne Modeli (DOM) ağacının gerçek zamanlı bir görünümünü sağlar, element yapısını, stilleri ve hataları analiz ederek sorun gidermeyi kolaylaştırır.",
                "paragraph1b": "Yaygın kullanımlar arasında element incelemesi, düzen sorunlarının hata ayıklaması ve konsol hatalarının doğrulanması yer alır, bu da web geliştirme için vazgeçilmezdir.",
                "title2": "HTML Elementlerini İnceleme",
                "paragraph2": "Geliştirici araçlarındaki Elements paneli, DOM ağacını gösterir, böylece elementlerin üzerine gelerek sayfada vurgulanmasını ve HTML ile CSS özelliklerini görüntüleyebilirsiniz.",
                "paragraph2a": "Bunu, gizli elementler, yanlış özellikler veya JavaScript'ten kaynaklanan beklenmedik DOM değişiklikleri gibi sorunları belirlemek için kullanabilirsiniz.",
                "list1Item1": "Bir elemente sağ tıklayın ve HTML'sini Elements panelinde görüntülemek için 'İncele' seçeneğini seçin.",
                "list1Item2": "Düzen sorunlarını teşhis etmek için uygulanan stilleri ve hesaplanmış özellikleri kontrol edin.",
                "list1Item3": "Kaynak kodu değiştirmeden değişiklikleri test etmek için HTML/CSS'yi doğrudan düzenleyin.",
                "codeTitle1": "Örnek: Gizli Bir Elementi İnceleme",
                "title3": "HTML ve Kaynak Sorunlarını Hata Ayıklama",
                "paragraph3": "Network sekmesi, resimler ve komut dosyaları gibi kaynakların yüklenmesini gösterir, bozuk bağlantıları veya yavaş yüklenen varlıkları belirlemeye yardımcı olurken, Elements paneli görüntüleme sorunlarını ortaya çıkarır.",
                "paragraph3a": "Örneğin, bozuk bir resim bağlantısı, <img> etiketinin src özelliğini kontrol ederek ve 404 hataları için Network sekmesini inceleyerek tespit edilebilir.",
                "codeTitle2": "Örnek: Bozuk Resmi Hata Ayıklama",
                "title4": "HTML ile İlgili Hatalar için Konsolu Kullanma",
                "paragraph4": "Console sekmesi, JavaScript hatalarını, uyarıları ve günlükleri gösterir, bunlar genellikle geçersiz özellikler veya DOM işleme hataları gibi HTML sorunlarıyla ilgilidir.",
                "paragraph4a": "'Tanımlanmamış değişken' veya 'geçersiz seçici' gibi hatalar HTML sorunlarına işaret edebilir ve Elements paneli kullanılarak DOM'a kadar izlenebilir.",
                "codeTitle3": "Örnek: JavaScript'ten Konsol Hatası",
                "note1": "Sorunsuz bir kullanıcı deneyimi ve hatasız web sayfaları sağlamak için HTML'yi incelemek ve hata ayıklamak için tarayıcı geliştirici araçlarını düzenli olarak kullanın.",
                "title5": "Geliştirici Araçlarını Kullanma için En İyi Uygulamalar",
                "paragraph5": "Geliştirici araçlarını etkili bir şekilde kullanmak için, ana panelleri (Elements, Console, Network) tanıyın, değişiklikleri doğrudan test edin ve kapsamlı hata ayıklama için doğrulama araçlarıyla birleştirin.",
                "paragraph5a": "Farklı tarayıcılarda araçları kullanın, tarayıcılar arası uyumluluğu ve tutarlı görüntülemeyi sağlayın.",
                "list2Item1": "DOM yapısını anlamak için hata ayıklamaya Elements paneliyle başlayın.",
                "list2Item2": "Kodu değiştirmeden önce hatalar için Console'u kontrol edin.",
                "list2Item3": "Kaynak yükleme ve performansı optimize etmek için Network sekmesini kullanın."
            }
        }
    },
    "cssTutorials": {
        "markAsCompleted": "Tamamlandı Olarak İşaretle",
        "chapter1": {
            "page1": {
                "title1": "CSS Nedir?",
                "paragraph1": "CSS, Cascading Style Sheets (Basamaklı Stil Sayfaları) anlamına gelir. Web sayfalarının düzenini ve görünümünü kontrol etmek için kullanılır. CSS ile renk, font, boşluk, hizalama ve HTML elementlerinin konumlandırmasını değiştirebilirsiniz. CSS, içerik yapısını (HTML) görünümden (CSS) ayırarak web geliştirmeyi daha verimli ve bakımı kolay hale getirir.",
                "paragraph2": "CSS, HTML belgelerine stil uygulamak için bir yol sağlar. Stilleri tüm sayfaya uygulayabilir veya paragraflar, başlıklar, bağlantılar gibi bireysel elementleri hedefleyebilirsiniz.",
                "title2": "CSS Nasıl Çalışır?",
                "paragraph3": "CSS, HTML elementlerini seçerek ve onlara stiller uygulayarak çalışır. Bir CSS kuralı, hangi HTML elementlerinin stillendirileceğini belirleyen bir seçici ve uygulanacak stilleri tanımlayan bir bildirimden oluşur.",
                "codeTitle1": "İşte basit bir CSS kuralı örneği:",
                "smallTitle1": "Bu örnekte:",
                "paragraph4": "Seçici, belgedeki tüm <p> (paragraf) elementlerini hedefleyen p'dir.",
                "paragraph5": "Bildirimler, süslü parantezler {} içinde yer alır ve uygulanacak stilleri tanımlar. Bu durumda, renk maviye ve font boyutu 16 piksele ayarlanır.",
                "title3": "Neden CSS Kullanmalı?",
                "list1Item1": "Endişelerin ayrılması: CSS, yapıyı (HTML) stilden (CSS) ayırır, böylece web sitenizi yönetmek ve güncellemek daha kolay olur.",
                "list1Item2": "Tutarlılık: CSS ile web sitenizin tüm sayfalarında tutarlı bir tasarım sağlayabilirsiniz.",
                "list1Item3": "Verimlilik: CSS, birden fazla sayfanın görünümünü tek bir merkezi konumdan kontrol etmenizi sağlar, bu da değişiklikleri daha hızlı ve kolay hale getirir.",
                "codeTitle2": "Örnek: Bir web sayfasına temel CSS stilleri uygulayan bir örneğe bakalım.",
                "listTitle2": "Bu örnekte:",
                "list2Item1": "Sayfanın arka plan rengi açık maviye ayarlanmıştır.",
                "list2Item2": "<h1> başlığı koyu mavi renkte ve ortalanmıştır.",
                "list2Item3": "<p> paragrafı koyu gri metne ve 18 piksel font boyutuna sahiptir."
            }
        }
    },
    "searchPage": {
        "search": "- Ara: "
    },
    "registerPage": {
        "email": "E-posta",
        "username": "Ad - Soyad",
        "password1": "Şifre",
        "password2": "Şifre (Tekrar)",
        "birthday": "Doğum Tarihi",
        "registerButton": "Hesap Oluştur",
        "emptyEmailError": "Lütfen e-posta adresinizi girin.",
        "emptyUsernameError": "Lütfen bir kullanıcı adı girin.",
        "emptyPasswordError": "Lütfen bir şifre girin.",
        "invalidDateError": "Lütfen geçerli bir doğum tarihi girin.",
        "passwordNotEqualError": "Şifreler eşleşmiyor.",
        "emailExsistsError": "Bu e-posta adresi zaten kayıtlı."
    }
}