{
    "direction": "ltr",
    "footer": {
        "text": "HTMLtoHero — это платформа, посвященная обучению веб-разработке через пошаговые уроки и интерактивные упражнения. Изучайте HTML, CSS и JavaScript легко и увлекательно.",
        "copyright": "Авторское право Cenin Rihavi 2025©"
    },
    "header": {
        "html": "HTML",
        "htmlTutorials": "Уроки",
        "htmlExercises": "Упражнения",
        "css": "CSS",
        "cssTutorials": "Уроки",
        "cssExercises": "Упражнения",
        "js": "JavaScript",
        "jsTutorials": "Уроки",
        "jsExercises": "Упражнения",
        "codeEditor": "Редактор кода",
        "search": "Поиск",
        "login": "Войти",
        "profile": "Профиль",
        "logout": "Выйти"
    },
    "mainpage": {
        "discovercontainer": {
            "discover": "Открыть",
            "search": "Поиск"
        }
    },
    "notFoundPage": {
        "title": "HTMLtoHero - Не найдено",
        "errorText": "Ошибка 404",
        "smallText": "Страница не найдена!"
    },
    "loginPage": {
        "email": "Электронная почта",
        "password": "Пароль",
        "loginButton": "Войти",
        "createNewAccount": "Создать новый аккаунт"
    },
    "profile": {
        "profileContainer": {
            "name": "Имя",
            "birthday": "День рождения",
            "accountCreationDate": "Дата создания аккаунта",
            "level": "Уровень"
        },
        "learningContainer": {
            "continueLearning": "Продолжить обучение...",
            "html": "HTML",
            "css": "CSS",
            "js": "JS"
        },
        "exercisingContainer": {
            "continueExercising": "Продолжить упражнения...",
            "html": "HTML",
            "css": "CSS",
            "js": "JS"
        }
    },
    "codeeditor": {
        "previewButton": "Предпросмотр"
    },
    "htmlTutorials": {
        "markAsCompleted": "Отметить как завершенное",
        "chapter1": {
            "page1": {
                "pageTitle": "Что такое HTML?",
                "title1": "Что такое HTML?",
                "paragraph1": "HTML, или HyperText Markup Language, — это краеугольный камень веб-разработки и основа каждого сайта, который вы посещаете. Это стандартизированный язык, используемый для создания и структурирования контента веб-страниц, обеспечивающий правильное его интерпретацию и отображение браузерами, такими как Chrome, Firefox и Safari.",
                "title2": "Строительные блоки веба",
                "paragraph2": "HTML — это не язык программирования, а язык разметки, что означает, что он используется для аннотирования текста и предоставления инструкций браузерам о том, как отображать контент. Эти аннотации представлены в виде элементов HTML, записанных с использованием тегов, таких как <html>, <head> и <body>.",
                "paragraph3": "HTML обеспечивает структуру для всего веб-контента. С элементами для заголовков, абзацев, изображений, ссылок и многого другого он служит отправной точкой для каждого веб-проекта. В сочетании с CSS и JavaScript разработчики могут создавать визуально потрясающие и интерактивные сайты.",
                "title3": "Что может HTML?",
                "listTitle1": "HTML позволяет создавать структуру веб-страниц, добавляя:",
                "list1Item1": "Заголовки и абзацы: Используйте <h2> до <h6> для заголовков и <p> для абзацев, чтобы организовать текстовый контент.",
                "list1Item2": "Изображения и мультимедиа: Встраивайте визуальные элементы, аудио и видео для увлекательного пользовательского опыта.",
                "list1Item3": "Ссылки: Используйте теги <a> для навигации между страницами и внешними сайтами.",
                "list1Item4": "Списки: Организуйте контент с помощью упорядоченных (<ol>) или неупорядоченных (<ul>) списков.",
                "list1Item5": "Формы: Собирайте данные от пользователей с помощью интерактивных форм и полей ввода.",
                "paragraph4": "HTML также поддерживает семантические элементы, такие как <header>, <footer> и <article>, для улучшения доступности и SEO.",
                "title4": "Зачем изучать HTML?",
                "listTitle2": "HTML — это основа веб-разработки, и его изучение — первый шаг к созданию собственных сайтов. Вот почему это важно:",
                "list2Item1": "Легкость изучения: HTML прост и дружелюбен к новичкам.",
                "list2Item2": "Универсальность: Это отправная точка для всех веб-проектов.",
                "list2Item3": "Карьерные возможности: Понимание HTML открывает двери к различным ролям в веб-разработке и дизайне.",
                "paragraph5": "Изучение HTML похоже на изучение алфавита веб-разработки. Оно дает вам инструменты для воплощения ваших идей в жизнь онлайн и обеспечивает прочную основу для погружения в более сложные технологии.",
                "title5": "Визуализация структуры HTML",
                "title6": "Заключение",
                "paragraph6": "HTML — это больше, чем просто технический инструмент; это язык, который оживляет идеи в вебе. Хотите ли вы создать личный блог, портфолио или полноценный сайт, освоение HTML — это путь к бесконечным возможностям. В сочетании с CSS и JavaScript он становится мощным трио для создания современных, увлекательных и динамичных сайтов. Так что погружайтесь, экспериментируйте и начинайте свое путешествие к тому, чтобы стать героем веб-разработки!"
            }
        },
        "chapter2": {
            "page1": {
                "pageTitle": "Понимание HTML doctype <!DOCTYPE html>",
                "title1": "Понимание HTML doctype <!DOCTYPE html>",
                "paragraph1": "Объявление <!DOCTYPE> — важная часть любого HTML-документа. Это первое, что должно появиться в HTML-документе, и оно сообщает веб-браузеру, какую версию HTML ожидать. Без него браузеры могут отобразить страницу некорректно, особенно при переключении между разными версиями HTML.",
                "title2": "Что такое <!DOCTYPE html>?",
                "paragraph2": "Объявление <!DOCTYPE html> используется для указания того, что документ является HTML5-документом. Оно определяет тип документа и используемую версию HTML, обеспечивая отображение страницы браузером в стандартном режиме и избегая режима совместимости, где браузеры могут использовать устаревшие методы для отображения контента.",
                "title3": "Почему <!DOCTYPE html> важен?",
                "list1Item1": "Отображение в браузере: Помогает браузеру понять ожидаемую версию HTML. Это гарантирует, что современные элементы и функции HTML будут отображаться корректно.",
                "list1Item2": "Стандартный режим против режима совместимости: Без <!DOCTYPE html> некоторые браузеры могут отображать страницу в режиме совместимости, где макет и стили могут не работать, как ожидалось.",
                "list1Item3": "HTML5: В HTML5 <!DOCTYPE html> проще, чем в предыдущих версиях. В старых версиях HTML, таких как HTML 4.01, doctype был длиннее и включал больше информации. HTML5 упростил это, используя только <!DOCTYPE html>.",
                "title4": "Как использовать <!DOCTYPE html>?",
                "paragraph3": "Объявление должно появляться в самом начале документа, перед тегом <html>. Это первая строка вашего HTML-документа.",
                "codeTitle1": "Базовая структура:",
                "listTitle2": "Ключевые моменты для запоминания:",
                "list2Item1": "Всегда используйте <!DOCTYPE html> в начале вашего HTML-документа.",
                "list2Item2": "Оно объявляет документ как HTML5, который является последней и наиболее широко используемой версией HTML.",
                "list2Item3": "<!DOCTYPE html> помогает браузерам правильно интерпретировать и отображать страницу."
            },
            "page2": {
                "pageTitle": "Элементы <html>, <head> и <body>",
                "title1": "Элементы <html>, <head> и <body>",
                "title2": "Элемент <html>",
                "paragraph1": "Элемент <html> — это корневой элемент HTML-документа. Он охватывает весь контент страницы, включая разделы head и body. Каждый HTML-документ должен начинаться с этого элемента, и все остальные элементы должны быть вложены в него.",
                "codeTitle1": "Синтаксис:",
                "listTitle1": "Элемент <html> должен содержать два основных раздела:",
                "list1Item1": "Раздел <head>: Содержит метаинформацию о документе, такую как заголовок, кодировка символов и ссылки на внешние ресурсы, такие как файлы CSS и скрипты.",
                "list1Item2": "Раздел <body>: Содержит видимый контент страницы, такой как текст, изображения, видео и другие элементы.",
                "title3": "Элемент <head>",
                "paragraph2": "Элемент <head> используется для хранения метаинформации о HTML-документе. Он не отображает никакого контента на самой странице, но предоставляет важную информацию для браузера и поисковых систем.",
                "listTitle2": "Часто используемые элементы внутри <head>:",
                "list2Item1": "<meta> Указывает метаданные, такие как кодировка символов или информация об авторе.",
                "list2Item2": "<title> Определяет заголовок страницы, который отображается в строке заголовка браузера или на вкладке.",
                "list2Item3": "<link> Используется для связи с внешними ресурсами, такими как таблицы стилей или иконки.",
                "list2Item4": "<style> Содержит внутренние стили CSS для документа.",
                "list2Item5": "<script> Определяет внешний или встроенный код JavaScript.",
                "codeTitle2": "Пример:",
                "list3Item1": "<meta charset=\"UTF-8\"> Указывает кодировку символов для документа. UTF-8 — самая распространенная кодировка для современных веб-страниц, поддерживающая широкий диапазон символов.",
                "list3Item2": "<meta name=\"author\" content=\"John Doe\"> Предоставляет информацию об авторе страницы, которая обычно не видна пользователям, но может быть полезна для поисковых систем.",
                "list3Item3": "<title> Содержимое внутри тега <title> отображается на вкладке браузера.",
                "title4": "Элемент <body>",
                "paragraph3": "Элемент <body> содержит фактический контент, который будет виден пользователю. Это включает все элементы, такие как текст, заголовки, изображения, ссылки и другие элементы HTML.",
                "codeTitle3": "Пример:",
                "list4Item1": "<h1>: Тег <h1> представляет основной заголовок на странице.",
                "list4Item2": "<p>: Тег <p> используется для абзаца текста.",
                "paragraph4": "Все, что находится внутри <body>, — это то, что пользователи видят, когда посещают страницу.",
                "listTitle5": "Ключевые моменты для запоминания:",
                "list5Item1": "Элемент <html> охватывает весь HTML-документ, включая разделы head и body.",
                "list5Item2": "Элемент <head> содержит метаданные и ссылки на внешние ресурсы, такие как файлы CSS и скрипты, а также заголовок документа.",
                "list5Item3": "Элемент <body> содержит видимый контент, с которым взаимодействуют пользователи, такой как заголовки, абзацы, изображения и ссылки."
            }
        }
    },
    "cssTutorials": {
        "markAsCompleted": "Отметить как завершенное",
        "chapter1": {
            "page1": {
                "title1": "Что такое CSS?",
                "paragraph1": "CSS расшифровывается как Cascading Style Sheets (Каскадные таблицы стилей). Он используется для управления макетом и представлением веб-страниц. С помощью CSS вы можете изменять цвет, шрифт, интервалы, выравнивание и позиционирование элементов HTML на странице. CSS позволяет отделить структуру контента (HTML) от его представления (CSS), делая веб-разработку более эффективной и легкой в обслуживании.",
                "paragraph2": "CSS предоставляет способ стилизации ваших HTML-документов. Вы можете применять стили ко всей странице или нацеливаться на отдельные элементы, такие как абзацы, заголовки, ссылки и многое другое.",
                "title2": "Как работает CSS?",
                "paragraph3": "CSS работает, выбирая элементы HTML и применяя к ним стили. Правило CSS состоит из селектора (который определяет, к каким элементам HTML будет применен стиль) и декларации (которая определяет, какие стили должны быть применены).",
                "codeTitle1": "Вот пример простого правила CSS:",
                "smallTitle1": "В этом примере:",
                "paragraph4": "Селектор — это p, который нацелен на все элементы <p> (абзац) в документе.",
                "paragraph5": "Декларации находятся внутри фигурных скобок {} и определяют стили, которые будут применены. В данном случае цвет установлен на синий, а размер шрифта — на 16 пикселей.",
                "title3": "Зачем использовать CSS?",
                "list1Item1": "Разделение задач: CSS отделяет структуру (HTML) от дизайна (CSS), упрощая управление и обновление вашего сайта.",
                "list1Item2": "Согласованность: Использование CSS позволяет обеспечить единообразный дизайн на всех страницах вашего сайта.",
                "list1Item3": "Эффективность: CSS позволяет контролировать внешний вид нескольких страниц из одного центрального места, делая изменения быстрее и проще.",
                "codeTitle2": "Пример: Давайте рассмотрим пример, где мы применяем некоторые базовые стили CSS к веб-странице.",
                "listTitle2": "В этом примере:",
                "list2Item1": "Цвет фона страницы установлен на светло-голубой.",
                "list2Item2": "Заголовок <h1> имеет темно-синий цвет и центрирован.",
                "list2Item3": "Абзац <p> имеет темно-серый текст и размер шрифта 18 пикселей."
            }
        }
    }
}